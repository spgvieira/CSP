  branch-instructions OR branches                    [Hardware event]
  branch-misses                                      [Hardware event]
  bus-cycles                                         [Hardware event]
  cache-misses                                       [Hardware event]
  cache-references                                   [Hardware event]
  cpu-cycles OR cycles                               [Hardware event]
  instructions                                       [Hardware event]
  ref-cycles                                         [Hardware event]
  alignment-faults                                   [Software event]
  bpf-output                                         [Software event]
  cgroup-switches                                    [Software event]
  context-switches OR cs                             [Software event]
  cpu-clock                                          [Software event]
  cpu-migrations OR migrations                       [Software event]
  dummy                                              [Software event]
  emulation-faults                                   [Software event]
  major-faults                                       [Software event]
  minor-faults                                       [Software event]
  page-faults OR faults                              [Software event]
  task-clock                                         [Software event]
  duration_time                                      [Tool event]
  user_time                                          [Tool event]
  system_time                                        [Tool event]

cpu:
  L1-dcache-loads OR cpu/L1-dcache-loads/
  L1-dcache-load-misses OR cpu/L1-dcache-load-misses/
  L1-dcache-stores OR cpu/L1-dcache-stores/
  L1-icache-load-misses OR cpu/L1-icache-load-misses/
  LLC-loads OR cpu/LLC-loads/
  LLC-load-misses OR cpu/LLC-load-misses/
  LLC-stores OR cpu/LLC-stores/
  LLC-store-misses OR cpu/LLC-store-misses/
  dTLB-loads OR cpu/dTLB-loads/
  dTLB-load-misses OR cpu/dTLB-load-misses/
  dTLB-stores OR cpu/dTLB-stores/
  dTLB-store-misses OR cpu/dTLB-store-misses/
  iTLB-loads OR cpu/iTLB-loads/
  iTLB-load-misses OR cpu/iTLB-load-misses/
  branch-loads OR cpu/branch-loads/
  branch-load-misses OR cpu/branch-load-misses/
  node-loads OR cpu/node-loads/
  node-load-misses OR cpu/node-load-misses/
  node-stores OR cpu/node-stores/
  node-store-misses OR cpu/node-store-misses/
  branch-instructions OR cpu/branch-instructions/    [Kernel PMU event]
  branch-misses OR cpu/branch-misses/                [Kernel PMU event]
  bus-cycles OR cpu/bus-cycles/                      [Kernel PMU event]
  cache-misses OR cpu/cache-misses/                  [Kernel PMU event]
  cache-references OR cpu/cache-references/          [Kernel PMU event]
  cpu-cycles OR cpu/cpu-cycles/                      [Kernel PMU event]
  cycles-ct OR cpu/cycles-ct/                        [Kernel PMU event]
  cycles-t OR cpu/cycles-t/                          [Kernel PMU event]
  el-abort OR cpu/el-abort/                          [Kernel PMU event]
  el-capacity OR cpu/el-capacity/                    [Kernel PMU event]
  el-commit OR cpu/el-commit/                        [Kernel PMU event]
  el-conflict OR cpu/el-conflict/                    [Kernel PMU event]
  el-start OR cpu/el-start/                          [Kernel PMU event]
  instructions OR cpu/instructions/                  [Kernel PMU event]
  mem-loads OR cpu/mem-loads/                        [Kernel PMU event]
  mem-stores OR cpu/mem-stores/                      [Kernel PMU event]
  ref-cycles OR cpu/ref-cycles/                      [Kernel PMU event]
  topdown-fetch-bubbles OR cpu/topdown-fetch-bubbles/[Kernel PMU event]
  topdown-recovery-bubbles OR cpu/topdown-recovery-bubbles/[Kernel PMU event]
  topdown-slots-issued OR cpu/topdown-slots-issued/  [Kernel PMU event]
  topdown-slots-retired OR cpu/topdown-slots-retired/[Kernel PMU event]
  topdown-total-slots OR cpu/topdown-total-slots/    [Kernel PMU event]
  tx-abort OR cpu/tx-abort/                          [Kernel PMU event]
  tx-capacity OR cpu/tx-capacity/                    [Kernel PMU event]
  tx-commit OR cpu/tx-commit/                        [Kernel PMU event]
  tx-conflict OR cpu/tx-conflict/                    [Kernel PMU event]
  tx-start OR cpu/tx-start/                          [Kernel PMU event]
  cstate_core/c3-residency/                          [Kernel PMU event]
  cstate_core/c6-residency/                          [Kernel PMU event]
  cstate_core/c7-residency/                          [Kernel PMU event]
  cstate_pkg/c2-residency/                           [Kernel PMU event]
  cstate_pkg/c3-residency/                           [Kernel PMU event]
  cstate_pkg/c6-residency/                           [Kernel PMU event]
  cstate_pkg/c7-residency/                           [Kernel PMU event]
  intel_pt//                                         [Kernel PMU event]
  msr/aperf/                                         [Kernel PMU event]
  msr/cpu_thermal_margin/                            [Kernel PMU event]
  msr/mperf/                                         [Kernel PMU event]
  msr/pperf/                                         [Kernel PMU event]
  msr/smi/                                           [Kernel PMU event]
  msr/tsc/                                           [Kernel PMU event]
  power/energy-pkg/                                  [Kernel PMU event]
  power/energy-ram/                                  [Kernel PMU event]
  uncore_iio_free_running/bw_in_port0/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port1/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port2/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port3/               [Kernel PMU event]
  uncore_iio_free_running/bw_out_port0/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port1/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port2/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port3/              [Kernel PMU event]
  uncore_iio_free_running/ioclk/                     [Kernel PMU event]
  uncore_iio_free_running/util_in_port0/             [Kernel PMU event]
  uncore_iio_free_running/util_in_port1/             [Kernel PMU event]
  uncore_iio_free_running/util_in_port2/             [Kernel PMU event]
  uncore_iio_free_running/util_in_port3/             [Kernel PMU event]
  uncore_iio_free_running/util_out_port0/            [Kernel PMU event]
  uncore_iio_free_running/util_out_port1/            [Kernel PMU event]
  uncore_iio_free_running/util_out_port2/            [Kernel PMU event]
  uncore_iio_free_running/util_out_port3/            [Kernel PMU event]
  uncore_iio_free_running/bw_in_port0/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port1/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port2/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port3/               [Kernel PMU event]
  uncore_iio_free_running/bw_out_port0/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port1/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port2/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port3/              [Kernel PMU event]
  uncore_iio_free_running/ioclk/                     [Kernel PMU event]
  uncore_iio_free_running/util_in_port0/             [Kernel PMU event]
  uncore_iio_free_running/util_in_port1/             [Kernel PMU event]
  uncore_iio_free_running/util_in_port2/             [Kernel PMU event]
  uncore_iio_free_running/util_in_port3/             [Kernel PMU event]
  uncore_iio_free_running/util_out_port0/            [Kernel PMU event]
  uncore_iio_free_running/util_out_port1/            [Kernel PMU event]
  uncore_iio_free_running/util_out_port2/            [Kernel PMU event]
  uncore_iio_free_running/util_out_port3/            [Kernel PMU event]
  uncore_imc/cas_count_read/                         [Kernel PMU event]
  uncore_imc/cas_count_write/                        [Kernel PMU event]
  uncore_imc/clockticks/                             [Kernel PMU event]

cache:
  l1d.replacement
       [L1D data line replacements]
  l1d_pend_miss.fb_full
       [Number of times a request needed a FB entry but there was no entry
        available for it. That is the FB unavailability was dominant reason
        for blocking the request. A request includes cacheable/uncacheable
        demands that is load, store or SW prefetch]
  l1d_pend_miss.pending
       [L1D miss outstandings duration in cycles]
  l1d_pend_miss.pending_cycles
       [Cycles with L1D load Misses outstanding]
  l1d_pend_miss.pending_cycles_any
       [Cycles with L1D load Misses outstanding from any thread on physical
        core]
  l2_lines_in.all
       [L2 cache lines filling L2]
  l2_lines_out.non_silent
       [Counts the number of lines that are evicted by L2 cache when triggered
        by an L2 cache fill. Those lines can be either in modified state or
        clean state. Modified lines may either be written back to L3 or
        directly written to memory and not allocated in L3. Clean lines may
        either be allocated in L3 or dropped]
  l2_lines_out.silent
       [Counts the number of lines that are silently dropped by L2 cache when
        triggered by an L2 cache fill. These lines are typically in Shared
        state. A non-threaded event]
  l2_lines_out.useless_hwpf
       [Counts the number of lines that have been hardware prefetched but not
        used and now evicted by L2 cache]
  l2_rqsts.all_code_rd
       [L2 code requests]
  l2_rqsts.all_demand_data_rd
       [Demand Data Read requests]
  l2_rqsts.all_demand_miss
       [Demand requests that miss L2 cache]
  l2_rqsts.all_demand_references
       [Demand requests to L2 cache]
  l2_rqsts.all_pf
       [Requests from the L1/L2/L3 hardware prefetchers or Load software
        prefetches]
  l2_rqsts.all_rfo
       [RFO requests to L2 cache]
  l2_rqsts.code_rd_hit
       [L2 cache hits when fetching instructions, code reads]
  l2_rqsts.code_rd_miss
       [L2 cache misses when fetching instructions]
  l2_rqsts.demand_data_rd_hit
       [Demand Data Read requests that hit L2 cache]
  l2_rqsts.demand_data_rd_miss
       [Demand Data Read miss L2, no rejects]
  l2_rqsts.miss
       [All requests that miss L2 cache]
  l2_rqsts.pf_hit
       [Requests from the L1/L2/L3 hardware prefetchers or Load software
        prefetches that hit L2 cache]
  l2_rqsts.pf_miss
       [Requests from the L1/L2/L3 hardware prefetchers or Load software
        prefetches that miss L2 cache]
  l2_rqsts.references
       [All L2 requests]
  l2_rqsts.rfo_hit
       [RFO requests that hit L2 cache]
  l2_rqsts.rfo_miss
       [RFO requests that miss L2 cache]
  l2_trans.l2_wb
       [L2 writebacks that access L2 cache]
  longest_lat_cache.miss
       [Core-originated cacheable demand requests missed L3 Spec update:
        SKL057]
  longest_lat_cache.reference
       [Core-originated cacheable demand requests that refer to L3 Spec
        update: SKL057]
  mem_inst_retired.all_loads
       [Retired load instructions Supports address when precise (Precise
        event)]
  mem_inst_retired.all_stores
       [Retired store instructions Supports address when precise (Precise
        event)]
  mem_inst_retired.any
       [All retired memory instructions Supports address when precise (Precise
        event)]
  mem_inst_retired.lock_loads
       [Retired load instructions with locked access Supports address when
        precise (Precise event)]
  mem_inst_retired.split_loads
       [Retired load instructions that split across a cacheline boundary
        Supports address when precise (Precise event)]
  mem_inst_retired.split_stores
       [Retired store instructions that split across a cacheline boundary
        Supports address when precise (Precise event)]
  mem_inst_retired.stlb_miss_loads
       [Retired load instructions that miss the STLB Supports address when
        precise (Precise event)]
  mem_inst_retired.stlb_miss_stores
       [Retired store instructions that miss the STLB Supports address when
        precise (Precise event)]
  mem_load_l3_hit_retired.xsnp_hit
       [Retired load instructions which data sources were L3 and cross-core
        snoop hits in on-pkg core cache Supports address when precise (Precise
        event)]
  mem_load_l3_hit_retired.xsnp_hitm
       [Retired load instructions which data sources were HitM responses from
        shared L3 Supports address when precise (Precise event)]
  mem_load_l3_hit_retired.xsnp_miss
       [Retired load instructions which data sources were L3 hit and
        cross-core snoop missed in on-pkg core cache Supports address when
        precise (Precise event)]
  mem_load_l3_hit_retired.xsnp_none
       [Retired load instructions which data sources were hits in L3 without
        snoops required Supports address when precise (Precise event)]
  mem_load_l3_miss_retired.local_dram
       [Retired load instructions which data sources missed L3 but serviced
        from local dram Supports address when precise (Precise event)]
  mem_load_l3_miss_retired.remote_dram
       [Retired load instructions which data sources missed L3 but serviced
        from remote dram Supports address when precise (Precise event)]
  mem_load_l3_miss_retired.remote_fwd
       [Retired load instructions whose data sources was forwarded from a
        remote cache Supports address when precise (Precise event)]
  mem_load_l3_miss_retired.remote_hitm
       [Retired load instructions whose data sources was remote HITM Supports
        address when precise (Precise event)]
  mem_load_misc_retired.uc
       [Retired instructions with at least 1 uncacheable load or lock Supports
        address when precise (Precise event)]
  mem_load_retired.fb_hit
       [Retired load instructions which data sources were load missed L1 but
        hit FB due to preceding miss to the same cache line with data not
        ready Supports address when precise (Precise event)]
  mem_load_retired.l1_hit
       [Retired load instructions with L1 cache hits as data sources Supports
        address when precise (Precise event)]
  mem_load_retired.l1_miss
       [Retired load instructions missed L1 cache as data sources Supports
        address when precise (Precise event)]
  mem_load_retired.l2_hit
       [Retired load instructions with L2 cache hits as data sources Supports
        address when precise (Precise event)]
  mem_load_retired.l2_miss
       [Retired load instructions missed L2 cache as data sources Supports
        address when precise (Precise event)]
  mem_load_retired.l3_hit
       [Retired load instructions with L3 cache hits as data sources Supports
        address when precise (Precise event)]
  mem_load_retired.l3_miss
       [Retired load instructions missed L3 cache as data sources Supports
        address when precise (Precise event)]
  offcore_requests.all_data_rd
       [Demand and prefetch data reads]
  offcore_requests.all_requests
       [Any memory transaction that reached the SQ]
  offcore_requests.demand_code_rd
       [Cacheable and non-cacheable code read requests]
  offcore_requests.demand_data_rd
       [Demand Data Read requests sent to uncore]
  offcore_requests.demand_rfo
       [Demand RFO requests including regular RFOs, locks, ItoM]
  offcore_requests_buffer.sq_full
       [Offcore requests buffer cannot take more entries for this thread core]
  offcore_requests_outstanding.all_data_rd
       [Offcore outstanding cacheable Core Data Read transactions in
        SuperQueue (SQ), queue to uncore]
  offcore_requests_outstanding.cycles_with_data_rd
       [Cycles when offcore outstanding cacheable Core Data Read transactions
        are present in SuperQueue (SQ), queue to uncore]
  offcore_requests_outstanding.cycles_with_demand_code_rd
       [Cycles with offcore outstanding Code Reads transactions in the
        SuperQueue (SQ), queue to uncore]
  offcore_requests_outstanding.cycles_with_demand_data_rd
       [Cycles when offcore outstanding Demand Data Read transactions are
        present in SuperQueue (SQ), queue to uncore]
  offcore_requests_outstanding.cycles_with_demand_rfo
       [Cycles with offcore outstanding demand rfo reads transactions in
        SuperQueue (SQ), queue to uncore]
  offcore_requests_outstanding.demand_code_rd
       [Offcore outstanding Code Reads transactions in the SuperQueue (SQ),
        queue to uncore, every cycle]
  offcore_requests_outstanding.demand_data_rd
       [Offcore outstanding Demand Data Read transactions in uncore queue]
  offcore_requests_outstanding.demand_data_rd_ge_6
       [Cycles with at least 6 offcore outstanding Demand Data Read
        transactions in uncore queue]
  offcore_requests_outstanding.demand_rfo
       [Offcore outstanding demand rfo reads transactions in SuperQueue (SQ),
        queue to uncore, every cycle]
  offcore_response
       [Offcore response can be programmed only with a specific pair of event
        select and counter MSR, and with specific event codes and predefine
        mask bit value in a dedicated MSR to specify attributes of the offcore
        transaction]
  offcore_response.all_data_rd.any_response
       [Counts all demand & prefetch data reads that have any response type]
  offcore_response.all_data_rd.l3_hit.any_snoop
       [Counts all demand & prefetch data reads that hit in the L3]
  offcore_response.all_data_rd.l3_hit.hit_other_core_no_fwd
       [Counts all demand & prefetch data reads that hit in the L3 and the
        snoop to one of the sibling cores hits the line in M state and the
        line is forwarded]
  offcore_response.all_data_rd.l3_hit.hitm_other_core
       [Counts all demand & prefetch data reads that hit in the L3 and the
        snoop to one of the sibling cores hits the line in M state and the
        line is forwarded]
  offcore_response.all_data_rd.l3_hit.no_snoop_needed
       [Counts all demand & prefetch data reads that hit in the L3 and sibling
        core snoops are not needed as either the core-valid bit is not set or
        the shared line is present in multiple cores]
  offcore_response.all_data_rd.l3_hit.snoop_hit_with_fwd
       [OFFCORE_RESPONSE.ALL_DATA_RD.L3_HIT.SNOOP_HIT_WITH_FWD]
  offcore_response.all_pf_data_rd.any_response
       [Counts all prefetch data reads that have any response type]
  offcore_response.all_pf_data_rd.l3_hit.any_snoop
       [Counts all prefetch data reads that hit in the L3]
  offcore_response.all_pf_data_rd.l3_hit.hit_other_core_no_fwd
       [Counts all prefetch data reads that hit in the L3 and the snoop to one
        of the sibling cores hits the line in M state and the line is
        forwarded]
  offcore_response.all_pf_data_rd.l3_hit.hitm_other_core
       [Counts all prefetch data reads that hit in the L3 and the snoop to one
        of the sibling cores hits the line in M state and the line is
        forwarded]
  offcore_response.all_pf_data_rd.l3_hit.no_snoop_needed
       [Counts all prefetch data reads that hit in the L3 and sibling core
        snoops are not needed as either the core-valid bit is not set or the
        shared line is present in multiple cores]
  offcore_response.all_pf_data_rd.l3_hit.snoop_hit_with_fwd
       [OFFCORE_RESPONSE.ALL_PF_DATA_RD.L3_HIT.SNOOP_HIT_WITH_FWD]
  offcore_response.all_pf_rfo.any_response
       [Counts prefetch RFOs that have any response type]
  offcore_response.all_pf_rfo.l3_hit.any_snoop
       [Counts prefetch RFOs that hit in the L3]
  offcore_response.all_pf_rfo.l3_hit.hit_other_core_no_fwd
       [Counts prefetch RFOs that hit in the L3 and the snoop to one of the
        sibling cores hits the line in M state and the line is forwarded]
  offcore_response.all_pf_rfo.l3_hit.hitm_other_core
       [Counts prefetch RFOs that hit in the L3 and the snoop to one of the
        sibling cores hits the line in M state and the line is forwarded]
  offcore_response.all_pf_rfo.l3_hit.no_snoop_needed
       [Counts prefetch RFOs that hit in the L3 and sibling core snoops are
        not needed as either the core-valid bit is not set or the shared line
        is present in multiple cores]
  offcore_response.all_pf_rfo.l3_hit.snoop_hit_with_fwd
       [OFFCORE_RESPONSE.ALL_PF_RFO.L3_HIT.SNOOP_HIT_WITH_FWD]
  offcore_response.all_rfo.any_response
       [Counts all demand & prefetch RFOs that have any response type]
  offcore_response.all_rfo.l3_hit.any_snoop
       [Counts all demand & prefetch RFOs that hit in the L3]
  offcore_response.all_rfo.l3_hit.hit_other_core_no_fwd
       [Counts all demand & prefetch RFOs that hit in the L3 and the snoop to
        one of the sibling cores hits the line in M state and the line is
        forwarded]
  offcore_response.all_rfo.l3_hit.hitm_other_core
       [Counts all demand & prefetch RFOs that hit in the L3 and the snoop to
        one of the sibling cores hits the line in M state and the line is
        forwarded]
  offcore_response.all_rfo.l3_hit.no_snoop_needed
       [Counts all demand & prefetch RFOs that hit in the L3 and sibling core
        snoops are not needed as either the core-valid bit is not set or the
        shared line is present in multiple cores]
  offcore_response.all_rfo.l3_hit.snoop_hit_with_fwd
       [OFFCORE_RESPONSE.ALL_RFO.L3_HIT.SNOOP_HIT_WITH_FWD]
  offcore_response.demand_code_rd.any_response
       [Counts all demand code reads that have any response type]
  offcore_response.demand_code_rd.l3_hit.any_snoop
       [Counts all demand code reads that hit in the L3]
  offcore_response.demand_code_rd.l3_hit.hit_other_core_no_fwd
       [Counts all demand code reads that hit in the L3 and the snoop to one
        of the sibling cores hits the line in M state and the line is
        forwarded]
  offcore_response.demand_code_rd.l3_hit.hitm_other_core
       [Counts all demand code reads that hit in the L3 and the snoop to one
        of the sibling cores hits the line in M state and the line is
        forwarded]
  offcore_response.demand_code_rd.l3_hit.no_snoop_needed
       [Counts all demand code reads that hit in the L3 and sibling core
        snoops are not needed as either the core-valid bit is not set or the
        shared line is present in multiple cores]
  offcore_response.demand_code_rd.l3_hit.snoop_hit_with_fwd
       [OFFCORE_RESPONSE.DEMAND_CODE_RD.L3_HIT.SNOOP_HIT_WITH_FWD]
  offcore_response.demand_data_rd.any_response
       [Counts demand data reads that have any response type]
  offcore_response.demand_data_rd.l3_hit.any_snoop
       [Counts demand data reads that hit in the L3]
  offcore_response.demand_data_rd.l3_hit.hit_other_core_no_fwd
       [Counts demand data reads that hit in the L3 and the snoop to one of
        the sibling cores hits the line in M state and the line is forwarded]
  offcore_response.demand_data_rd.l3_hit.hitm_other_core
       [Counts demand data reads that hit in the L3 and the snoop to one of
        the sibling cores hits the line in M state and the line is forwarded]
  offcore_response.demand_data_rd.l3_hit.no_snoop_needed
       [Counts demand data reads that hit in the L3 and sibling core snoops
        are not needed as either the core-valid bit is not set or the shared
        line is present in multiple cores]
  offcore_response.demand_data_rd.l3_hit.snoop_hit_with_fwd
       [OFFCORE_RESPONSE.DEMAND_DATA_RD.L3_HIT.SNOOP_HIT_WITH_FWD]
  offcore_response.demand_rfo.any_response
       [Counts all demand data writes (RFOs) that have any response type]
  offcore_response.demand_rfo.l3_hit.any_snoop
       [Counts all demand data writes (RFOs) that hit in the L3]
  offcore_response.demand_rfo.l3_hit.hit_other_core_no_fwd
       [Counts all demand data writes (RFOs) that hit in the L3 and the snoop
        to one of the sibling cores hits the line in M state and the line is
        forwarded]
  offcore_response.demand_rfo.l3_hit.hitm_other_core
       [Counts all demand data writes (RFOs) that hit in the L3 and the snoop
        to one of the sibling cores hits the line in M state and the line is
        forwarded]
  offcore_response.demand_rfo.l3_hit.no_snoop_needed
       [Counts all demand data writes (RFOs) that hit in the L3 and sibling
        core snoops are not needed as either the core-valid bit is not set or
        the shared line is present in multiple cores]
  offcore_response.demand_rfo.l3_hit.snoop_hit_with_fwd
       [OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HIT_WITH_FWD]
  offcore_response.pf_l1d_and_sw.any_response
       [Counts L1 data cache hardware prefetch requests and software prefetch
        requests that have any response type]
  offcore_response.pf_l1d_and_sw.l3_hit.any_snoop
       [Counts L1 data cache hardware prefetch requests and software prefetch
        requests that hit in the L3]
  offcore_response.pf_l1d_and_sw.l3_hit.hit_other_core_no_fwd
       [Counts L1 data cache hardware prefetch requests and software prefetch
        requests that hit in the L3 and the snoop to one of the sibling cores
        hits the line in M state and the line is forwarded]
  offcore_response.pf_l1d_and_sw.l3_hit.hitm_other_core
       [Counts L1 data cache hardware prefetch requests and software prefetch
        requests that hit in the L3 and the snoop to one of the sibling cores
        hits the line in M state and the line is forwarded]
  offcore_response.pf_l1d_and_sw.l3_hit.no_snoop_needed
       [Counts L1 data cache hardware prefetch requests and software prefetch
        requests that hit in the L3 and sibling core snoops are not needed as
        either the core-valid bit is not set or the shared line is present in
        multiple cores]
  offcore_response.pf_l1d_and_sw.l3_hit.snoop_hit_with_fwd
       [OFFCORE_RESPONSE.PF_L1D_AND_SW.L3_HIT.SNOOP_HIT_WITH_FWD]
  offcore_response.pf_l2_data_rd.any_response
       [Counts prefetch (that bring data to L2) data reads that have any
        response type]
  offcore_response.pf_l2_data_rd.l3_hit.any_snoop
       [Counts prefetch (that bring data to L2) data reads that hit in the L3]
  offcore_response.pf_l2_data_rd.l3_hit.hit_other_core_no_fwd
       [Counts prefetch (that bring data to L2) data reads that hit in the L3
        and the snoop to one of the sibling cores hits the line in M state and
        the line is forwarded]
  offcore_response.pf_l2_data_rd.l3_hit.hitm_other_core
       [Counts prefetch (that bring data to L2) data reads that hit in the L3
        and the snoop to one of the sibling cores hits the line in M state and
        the line is forwarded]
  offcore_response.pf_l2_data_rd.l3_hit.no_snoop_needed
       [Counts prefetch (that bring data to L2) data reads that hit in the L3
        and sibling core snoops are not needed as either the core-valid bit is
        not set or the shared line is present in multiple cores]
  offcore_response.pf_l2_data_rd.l3_hit.snoop_hit_with_fwd
       [OFFCORE_RESPONSE.PF_L2_DATA_RD.L3_HIT.SNOOP_HIT_WITH_FWD]
  offcore_response.pf_l2_rfo.any_response
       [Counts all prefetch (that bring data to L2) RFOs that have any
        response type]
  offcore_response.pf_l2_rfo.l3_hit.any_snoop
       [Counts all prefetch (that bring data to L2) RFOs that hit in the L3]
  offcore_response.pf_l2_rfo.l3_hit.hit_other_core_no_fwd
       [Counts all prefetch (that bring data to L2) RFOs that hit in the L3
        and the snoop to one of the sibling cores hits the line in M state and
        the line is forwarded]
  offcore_response.pf_l2_rfo.l3_hit.hitm_other_core
       [Counts all prefetch (that bring data to L2) RFOs that hit in the L3
        and the snoop to one of the sibling cores hits the line in M state and
        the line is forwarded]
  offcore_response.pf_l2_rfo.l3_hit.no_snoop_needed
       [Counts all prefetch (that bring data to L2) RFOs that hit in the L3
        and sibling core snoops are not needed as either the core-valid bit is
        not set or the shared line is present in multiple cores]
  offcore_response.pf_l2_rfo.l3_hit.snoop_hit_with_fwd
       [OFFCORE_RESPONSE.PF_L2_RFO.L3_HIT.SNOOP_HIT_WITH_FWD]
  offcore_response.pf_l3_data_rd.any_response
       [Counts all prefetch (that bring data to LLC only) data reads that have
        any response type]
  offcore_response.pf_l3_data_rd.l3_hit.any_snoop
       [Counts all prefetch (that bring data to LLC only) data reads that hit
        in the L3]
  offcore_response.pf_l3_data_rd.l3_hit.hit_other_core_no_fwd
       [Counts all prefetch (that bring data to LLC only) data reads that hit
        in the L3 and the snoop to one of the sibling cores hits the line in M
        state and the line is forwarded]
  offcore_response.pf_l3_data_rd.l3_hit.hitm_other_core
       [Counts all prefetch (that bring data to LLC only) data reads that hit
        in the L3 and the snoop to one of the sibling cores hits the line in M
        state and the line is forwarded]
  offcore_response.pf_l3_data_rd.l3_hit.no_snoop_needed
       [Counts all prefetch (that bring data to LLC only) data reads that hit
        in the L3 and sibling core snoops are not needed as either the
        core-valid bit is not set or the shared line is present in multiple
        cores]
  offcore_response.pf_l3_data_rd.l3_hit.snoop_hit_with_fwd
       [OFFCORE_RESPONSE.PF_L3_DATA_RD.L3_HIT.SNOOP_HIT_WITH_FWD]
  offcore_response.pf_l3_rfo.any_response
       [Counts all prefetch (that bring data to LLC only) RFOs that have any
        response type]
  offcore_response.pf_l3_rfo.l3_hit.any_snoop
       [Counts all prefetch (that bring data to LLC only) RFOs that hit in the
        L3]
  offcore_response.pf_l3_rfo.l3_hit.hit_other_core_no_fwd
       [Counts all prefetch (that bring data to LLC only) RFOs that hit in the
        L3 and the snoop to one of the sibling cores hits the line in M state
        and the line is forwarded]
  offcore_response.pf_l3_rfo.l3_hit.hitm_other_core
       [Counts all prefetch (that bring data to LLC only) RFOs that hit in the
        L3 and the snoop to one of the sibling cores hits the line in M state
        and the line is forwarded]
  offcore_response.pf_l3_rfo.l3_hit.no_snoop_needed
       [Counts all prefetch (that bring data to LLC only) RFOs that hit in the
        L3 and sibling core snoops are not needed as either the core-valid bit
        is not set or the shared line is present in multiple cores]
  offcore_response.pf_l3_rfo.l3_hit.snoop_hit_with_fwd
       [OFFCORE_RESPONSE.PF_L3_RFO.L3_HIT.SNOOP_HIT_WITH_FWD]
  sq_misc.split_lock
       [Number of cache line split locks sent to uncore]
  sw_prefetch_access.nta
       [Number of PREFETCHNTA instructions executed]
  sw_prefetch_access.prefetchw
       [Number of PREFETCHW instructions executed]
  sw_prefetch_access.t0
       [Number of PREFETCHT0 instructions executed]
  sw_prefetch_access.t1_t2
       [Number of PREFETCHT1 or PREFETCHT2 instructions executed]

floating point:
  fp_arith_inst_retired.128b_packed_double
       [Counts once for most SIMD 128-bit packed computational double
        precision floating-point instructions retired. Counts twice for DPP
        and FM(N)ADD/SUB instructions retired]
  fp_arith_inst_retired.128b_packed_single
       [Counts once for most SIMD 128-bit packed computational single
        precision floating-point instruction retired. Counts twice for DPP and
        FM(N)ADD/SUB instructions retired]
  fp_arith_inst_retired.256b_packed_double
       [Counts once for most SIMD 256-bit packed double computational
        precision floating-point instructions retired. Counts twice for DPP
        and FM(N)ADD/SUB instructions retired]
  fp_arith_inst_retired.256b_packed_single
       [Counts once for most SIMD 256-bit packed single computational
        precision floating-point instructions retired. Counts twice for DPP
        and FM(N)ADD/SUB instructions retired]
  fp_arith_inst_retired.4_flops
       [Number of SSE/AVX computational 128-bit packed single and 256-bit
        packed double precision FP instructions retired; some instructions
        will count twice as noted below. Each count represents 2 or/and 4
        computation operations, 1 for each element. Applies to SSE* and AVX*
        packed single precision and packed double precision FP instructions:
        ADD SUB HADD HSUB SUBADD MUL DIV MIN MAX RCP14 RSQRT14 SQRT DPP
        FM(N)ADD/SUB. DPP and FM(N)ADD/SUB count twice as they perform 2
        calculations per element]
  fp_arith_inst_retired.512b_packed_double
       [Counts number of SSE/AVX computational 512-bit packed double precision
        floating-point instructions retired; some instructions will count
        twice as noted below. Each count represents 8 computation operations,
        one for each element. Applies to SSE* and AVX* packed double precision
        floating-point instructions: ADD SUB MUL DIV MIN MAX SQRT RSQRT14
        RCP14 FM(N)ADD/SUB. FM(N)ADD/SUB instructions count twice as they
        perform 2 calculations per element]
  fp_arith_inst_retired.512b_packed_single
       [Counts number of SSE/AVX computational 512-bit packed single precision
        floating-point instructions retired; some instructions will count
        twice as noted below. Each count represents 16 computation operations,
        one for each element. Applies to SSE* and AVX* packed single precision
        floating-point instructions: ADD SUB MUL DIV MIN MAX SQRT RSQRT14
        RCP14 FM(N)ADD/SUB. FM(N)ADD/SUB instructions count twice as they
        perform 2 calculations per element]
  fp_arith_inst_retired.8_flops
       [Number of SSE/AVX computational 256-bit packed single precision and
        512-bit packed double precision FP instructions retired; some
        instructions will count twice as noted below. Each count represents 8
        computation operations, 1 for each element. Applies to SSE* and AVX*
        packed single precision and double precision FP instructions: ADD SUB
        HADD HSUB SUBADD MUL DIV MIN MAX SQRT RSQRT RSQRT14 RCP RCP14 DPP
        FM(N)ADD/SUB. DPP and FM(N)ADD/SUB count twice as they perform 2
        calculations per element]
  fp_arith_inst_retired.scalar
       [Counts once for most SIMD scalar computational floating-point
        instructions retired. Counts twice for DPP and FM(N)ADD/SUB
        instructions retired]
  fp_arith_inst_retired.scalar_double
       [Counts once for most SIMD scalar computational double precision
        floating-point instructions retired. Counts twice for DPP and
        FM(N)ADD/SUB instructions retired]
  fp_arith_inst_retired.scalar_single
       [Counts once for most SIMD scalar computational single precision
        floating-point instructions retired. Counts twice for DPP and
        FM(N)ADD/SUB instructions retired]
  fp_arith_inst_retired.vector
       [Number of any Vector retired FP arithmetic instructions]
  fp_assist.any
       [Cycles with any input/output SSE or FP assist]

frontend:
  baclears.any
       [Counts the total number when the front end is resteered, mainly when
        the BPU cannot provide a correct prediction and this is corrected by
        other branch handling mechanisms at the front end]
  decode.lcp
       [Stalls caused by changing prefix length of the instruction. [This
        event is alias to ILD_STALL.LCP]]
  dsb2mite_switches.count
       [Decode Stream Buffer (DSB)-to-MITE switches]
  dsb2mite_switches.penalty_cycles
       [Decode Stream Buffer (DSB)-to-MITE switch true penalty cycles]
  frontend_retired.any_dsb_miss
       [Retired Instructions who experienced DSB miss (Precise event)]
  frontend_retired.dsb_miss
       [Retired Instructions who experienced a critical DSB miss (Precise
        event)]
  frontend_retired.itlb_miss
       [Retired Instructions who experienced iTLB true miss (Precise event)]
  frontend_retired.l1i_miss
       [Retired Instructions who experienced Instruction L1 Cache true miss
        (Precise event)]
  frontend_retired.l2_miss
       [Retired Instructions who experienced Instruction L2 Cache true miss
        (Precise event)]
  frontend_retired.latency_ge_1
       [Retired instructions after front-end starvation of at least 1 cycle
        (Must be precise)]
  frontend_retired.latency_ge_128
       [Retired instructions that are fetched after an interval where the
        front-end delivered no uops for a period of 128 cycles which was not
        interrupted by a back-end stall (Precise event)]
  frontend_retired.latency_ge_16
       [Retired instructions that are fetched after an interval where the
        front-end delivered no uops for a period of 16 cycles which was not
        interrupted by a back-end stall (Precise event)]
  frontend_retired.latency_ge_2
       [Retired instructions that are fetched after an interval where the
        front-end delivered no uops for a period of 2 cycles which was not
        interrupted by a back-end stall (Precise event)]
  frontend_retired.latency_ge_256
       [Retired instructions that are fetched after an interval where the
        front-end delivered no uops for a period of 256 cycles which was not
        interrupted by a back-end stall (Precise event)]
  frontend_retired.latency_ge_2_bubbles_ge_1
       [Retired instructions that are fetched after an interval where the
        front-end had at least 1 bubble-slot for a period of 2 cycles which
        was not interrupted by a back-end stall (Precise event)]
  frontend_retired.latency_ge_2_bubbles_ge_2
       [Retired instructions that are fetched after an interval where the
        front-end had at least 2 bubble-slots for a period of 2 cycles which
        was not interrupted by a back-end stall (Precise event)]
  frontend_retired.latency_ge_2_bubbles_ge_3
       [Retired instructions that are fetched after an interval where the
        front-end had at least 3 bubble-slots for a period of 2 cycles which
        was not interrupted by a back-end stall (Precise event)]
  frontend_retired.latency_ge_32
       [Retired instructions that are fetched after an interval where the
        front-end delivered no uops for a period of 32 cycles which was not
        interrupted by a back-end stall (Precise event)]
  frontend_retired.latency_ge_4
       [Retired instructions that are fetched after an interval where the
        front-end delivered no uops for a period of 4 cycles which was not
        interrupted by a back-end stall (Precise event)]
  frontend_retired.latency_ge_512
       [Retired instructions that are fetched after an interval where the
        front-end delivered no uops for a period of 512 cycles which was not
        interrupted by a back-end stall (Precise event)]
  frontend_retired.latency_ge_64
       [Retired instructions that are fetched after an interval where the
        front-end delivered no uops for a period of 64 cycles which was not
        interrupted by a back-end stall (Precise event)]
  frontend_retired.latency_ge_8
       [Retired instructions that are fetched after an interval where the
        front-end delivered no uops for a period of 8 cycles which was not
        interrupted by a back-end stall (Precise event)]
  frontend_retired.stlb_miss
       [Retired Instructions who experienced STLB (2nd level TLB) true miss
        (Precise event)]
  icache_16b.ifdata_stall
       [Cycles where a code fetch is stalled due to L1 instruction cache miss]
  icache_64b.iftag_hit
       [Instruction fetch tag lookups that hit in the instruction cache (L1I).
        Counts at 64-byte cache-line granularity]
  icache_64b.iftag_miss
       [Instruction fetch tag lookups that miss in the instruction cache
        (L1I). Counts at 64-byte cache-line granularity]
  icache_64b.iftag_stall
       [Cycles where a code fetch is stalled due to L1 instruction cache tag
        miss. [This event is alias to ICACHE_TAG.STALLS]]
  icache_tag.stalls
       [Cycles where a code fetch is stalled due to L1 instruction cache tag
        miss. [This event is alias to ICACHE_64B.IFTAG_STALL]]
  idq.all_dsb_cycles_4_uops
       [Cycles Decode Stream Buffer (DSB) is delivering 4 Uops [This event is
        alias to IDQ.DSB_CYCLES_OK]]
  idq.all_dsb_cycles_any_uops
       [Cycles Decode Stream Buffer (DSB) is delivering any Uop [This event is
        alias to IDQ.DSB_CYCLES_ANY]]
  idq.all_mite_cycles_4_uops
       [Cycles MITE is delivering 4 Uops]
  idq.all_mite_cycles_any_uops
       [Cycles MITE is delivering any Uop]
  idq.dsb_cycles
       [Cycles when uops are being delivered to Instruction Decode Queue (IDQ)
        from Decode Stream Buffer (DSB) path]
  idq.dsb_cycles_any
       [Cycles Decode Stream Buffer (DSB) is delivering any Uop [This event is
        alias to IDQ.ALL_DSB_CYCLES_ANY_UOPS]]
  idq.dsb_cycles_ok
       [Cycles Decode Stream Buffer (DSB) is delivering 4 Uops [This event is
        alias to IDQ.ALL_DSB_CYCLES_4_UOPS]]
  idq.dsb_uops
       [Uops delivered to Instruction Decode Queue (IDQ) from the Decode
        Stream Buffer (DSB) path]
  idq.mite_cycles
       [Cycles when uops are being delivered to Instruction Decode Queue (IDQ)
        from MITE path]
  idq.mite_uops
       [Uops delivered to Instruction Decode Queue (IDQ) from MITE path]
  idq.ms_cycles
       [Cycles when uops are being delivered to Instruction Decode Queue (IDQ)
        while Microcode Sequencer (MS) is busy]
  idq.ms_dsb_cycles
       [Cycles when uops initiated by Decode Stream Buffer (DSB) are being
        delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer
        (MS) is busy]
  idq.ms_mite_uops
       [Uops initiated by MITE and delivered to Instruction Decode Queue (IDQ)
        while Microcode Sequencer (MS) is busy]
  idq.ms_switches
       [Number of switches from DSB (Decode Stream Buffer) or MITE (legacy
        decode pipeline) to the Microcode Sequencer]
  idq.ms_uops
       [Uops delivered to Instruction Decode Queue (IDQ) while Microcode
        Sequencer (MS) is busy]
  idq_uops_not_delivered.core
       [Uops not delivered to Resource Allocation Table (RAT) per thread when
        backend of the machine is not stalled]
  idq_uops_not_delivered.cycles_0_uops_deliv.core
       [Cycles per thread when 4 or more uops are not delivered to Resource
        Allocation Table (RAT) when backend of the machine is not stalled]
  idq_uops_not_delivered.cycles_fe_was_ok
       [Counts cycles FE delivered 4 uops or Resource Allocation Table (RAT)
        was stalling FE]
  idq_uops_not_delivered.cycles_le_1_uop_deliv.core
       [Cycles per thread when 3 or more uops are not delivered to Resource
        Allocation Table (RAT) when backend of the machine is not stalled]
  idq_uops_not_delivered.cycles_le_2_uop_deliv.core
       [Cycles with less than 2 uops delivered by the front end]
  idq_uops_not_delivered.cycles_le_3_uop_deliv.core
       [Cycles with less than 3 uops delivered by the front end]

memory:
  cycle_activity.cycles_l3_miss
       [Cycles while L3 cache miss demand load is outstanding]
  cycle_activity.stalls_l3_miss
       [Execution stalls while L3 cache miss demand load is outstanding]
  hle_retired.aborted
       [Number of times an HLE execution aborted due to any reasons (multiple
        categories may count as one) (Precise event)]
  hle_retired.aborted_events
       [Number of times an HLE execution aborted due to unfriendly events
        (such as interrupts)]
  hle_retired.aborted_mem
       [Number of times an HLE execution aborted due to various memory events
        (e.g., read/write capacity and conflicts)]
  hle_retired.aborted_memtype
       [Number of times an HLE execution aborted due to incompatible memory
        type]
  hle_retired.aborted_timer
       [Number of times an HLE execution aborted due to hardware timer
        expiration]
  hle_retired.aborted_unfriendly
       [Number of times an HLE execution aborted due to HLE-unfriendly
        instructions and certain unfriendly events (such as AD assists etc.)]
  hle_retired.commit
       [Number of times an HLE execution successfully committed]
  hle_retired.start
       [Number of times an HLE execution started]
  machine_clears.memory_ordering
       [Counts the number of machine clears due to memory order conflicts Spec
        update: SKL089]
  mem_trans_retired.load_latency_gt_128
       [Counts randomly selected loads when the latency from first dispatch to
        completion is greater than 128 cycles Supports address when precise
        (Must be precise)]
  mem_trans_retired.load_latency_gt_16
       [Counts randomly selected loads when the latency from first dispatch to
        completion is greater than 16 cycles Supports address when precise
        (Must be precise)]
  mem_trans_retired.load_latency_gt_256
       [Counts randomly selected loads when the latency from first dispatch to
        completion is greater than 256 cycles Supports address when precise
        (Must be precise)]
  mem_trans_retired.load_latency_gt_32
       [Counts randomly selected loads when the latency from first dispatch to
        completion is greater than 32 cycles Supports address when precise
        (Must be precise)]
  mem_trans_retired.load_latency_gt_4
       [Counts randomly selected loads when the latency from first dispatch to
        completion is greater than 4 cycles Supports address when precise
        (Must be precise)]
  mem_trans_retired.load_latency_gt_512
       [Counts randomly selected loads when the latency from first dispatch to
        completion is greater than 512 cycles Supports address when precise
        (Must be precise)]
  mem_trans_retired.load_latency_gt_64
       [Counts randomly selected loads when the latency from first dispatch to
        completion is greater than 64 cycles Supports address when precise
        (Must be precise)]
  mem_trans_retired.load_latency_gt_8
       [Counts randomly selected loads when the latency from first dispatch to
        completion is greater than 8 cycles Supports address when precise
        (Must be precise)]
  offcore_requests.l3_miss_demand_data_rd
       [Demand Data Read requests who miss L3 cache]
  offcore_requests_outstanding.cycles_with_l3_miss_demand_data_rd
       [Cycles with at least 1 Demand Data Read requests who miss L3 cache in
        the superQ]
  offcore_requests_outstanding.l3_miss_demand_data_rd
       [Counts number of Offcore outstanding Demand Data Read requests that
        miss L3 cache in the superQ every cycle]
  offcore_requests_outstanding.l3_miss_demand_data_rd_ge_6
       [Cycles with at least 6 Demand Data Read requests that miss L3 cache in
        the superQ]
  offcore_response.all_data_rd.l3_miss.any_snoop
       [Counts all demand & prefetch data reads that miss in the L3]
  offcore_response.all_data_rd.l3_miss.remote_hit_forward
       [Counts all demand & prefetch data reads that miss the L3 and clean or
        shared data is transferred from remote cache]
  offcore_response.all_data_rd.l3_miss.remote_hitm
       [Counts all demand & prefetch data reads that miss the L3 and the
        modified data is transferred from remote cache]
  offcore_response.all_data_rd.l3_miss.snoop_miss_or_no_fwd
       [Counts all demand & prefetch data reads that miss the L3 and the data
        is returned from local or remote dram]
  offcore_response.all_data_rd.l3_miss_local_dram.snoop_miss_or_no_fwd
       [Counts all demand & prefetch data reads that miss the L3 and the data
        is returned from local dram]
  offcore_response.all_data_rd.l3_miss_remote_dram.snoop_miss_or_no_fwd
       [Counts all demand & prefetch data reads that miss the L3 and the data
        is returned from remote dram]
  offcore_response.all_pf_data_rd.l3_miss.any_snoop
       [Counts all prefetch data reads that miss in the L3]
  offcore_response.all_pf_data_rd.l3_miss.remote_hit_forward
       [Counts all prefetch data reads that miss the L3 and clean or shared
        data is transferred from remote cache]
  offcore_response.all_pf_data_rd.l3_miss.remote_hitm
       [Counts all prefetch data reads that miss the L3 and the modified data
        is transferred from remote cache]
  offcore_response.all_pf_data_rd.l3_miss.snoop_miss_or_no_fwd
       [Counts all prefetch data reads that miss the L3 and the data is
        returned from local or remote dram]
  offcore_response.all_pf_data_rd.l3_miss_local_dram.snoop_miss_or_no_fwd
       [Counts all prefetch data reads that miss the L3 and the data is
        returned from local dram]
  offcore_response.all_pf_data_rd.l3_miss_remote_dram.snoop_miss_or_no_fwd
       [Counts all prefetch data reads that miss the L3 and the data is
        returned from remote dram]
  offcore_response.all_pf_rfo.l3_miss.any_snoop
       [Counts prefetch RFOs that miss in the L3]
  offcore_response.all_pf_rfo.l3_miss.remote_hit_forward
       [Counts prefetch RFOs that miss the L3 and clean or shared data is
        transferred from remote cache]
  offcore_response.all_pf_rfo.l3_miss.remote_hitm
       [Counts prefetch RFOs that miss the L3 and the modified data is
        transferred from remote cache]
  offcore_response.all_pf_rfo.l3_miss.snoop_miss_or_no_fwd
       [Counts prefetch RFOs that miss the L3 and the data is returned from
        local or remote dram]
  offcore_response.all_pf_rfo.l3_miss_local_dram.snoop_miss_or_no_fwd
       [Counts prefetch RFOs that miss the L3 and the data is returned from
        local dram]
  offcore_response.all_pf_rfo.l3_miss_remote_dram.snoop_miss_or_no_fwd
       [Counts prefetch RFOs that miss the L3 and the data is returned from
        remote dram]
  offcore_response.all_rfo.l3_miss.any_snoop
       [Counts all demand & prefetch RFOs that miss in the L3]
  offcore_response.all_rfo.l3_miss.remote_hit_forward
       [Counts all demand & prefetch RFOs that miss the L3 and clean or shared
        data is transferred from remote cache]
  offcore_response.all_rfo.l3_miss.remote_hitm
       [Counts all demand & prefetch RFOs that miss the L3 and the modified
        data is transferred from remote cache]
  offcore_response.all_rfo.l3_miss.snoop_miss_or_no_fwd
       [Counts all demand & prefetch RFOs that miss the L3 and the data is
        returned from local or remote dram]
  offcore_response.all_rfo.l3_miss_local_dram.snoop_miss_or_no_fwd
       [Counts all demand & prefetch RFOs that miss the L3 and the data is
        returned from local dram]
  offcore_response.all_rfo.l3_miss_remote_dram.snoop_miss_or_no_fwd
       [Counts all demand & prefetch RFOs that miss the L3 and the data is
        returned from remote dram]
  offcore_response.demand_code_rd.l3_miss.any_snoop
       [Counts all demand code reads that miss in the L3]
  offcore_response.demand_code_rd.l3_miss.remote_hit_forward
       [Counts all demand code reads that miss the L3 and clean or shared data
        is transferred from remote cache]
  offcore_response.demand_code_rd.l3_miss.remote_hitm
       [Counts all demand code reads that miss the L3 and the modified data is
        transferred from remote cache]
  offcore_response.demand_code_rd.l3_miss.snoop_miss_or_no_fwd
       [Counts all demand code reads that miss the L3 and the data is returned
        from local or remote dram]
  offcore_response.demand_code_rd.l3_miss_local_dram.snoop_miss_or_no_fwd
       [Counts all demand code reads that miss the L3 and the data is returned
        from local dram]
  offcore_response.demand_code_rd.l3_miss_remote_dram.snoop_miss_or_no_fwd
       [Counts all demand code reads that miss the L3 and the data is returned
        from remote dram]
  offcore_response.demand_data_rd.l3_miss.any_snoop
       [Counts demand data reads that miss in the L3]
  offcore_response.demand_data_rd.l3_miss.remote_hit_forward
       [Counts demand data reads that miss the L3 and clean or shared data is
        transferred from remote cache]
  offcore_response.demand_data_rd.l3_miss.remote_hitm
       [Counts demand data reads that miss the L3 and the modified data is
        transferred from remote cache]
  offcore_response.demand_data_rd.l3_miss.snoop_miss_or_no_fwd
       [Counts demand data reads that miss the L3 and the data is returned
        from local or remote dram]
  offcore_response.demand_data_rd.l3_miss_local_dram.snoop_miss_or_no_fwd
       [Counts demand data reads that miss the L3 and the data is returned
        from local dram]
  offcore_response.demand_data_rd.l3_miss_remote_dram.snoop_miss_or_no_fwd
       [Counts demand data reads that miss the L3 and the data is returned
        from remote dram]
  offcore_response.demand_rfo.l3_miss.any_snoop
       [Counts all demand data writes (RFOs) that miss in the L3]
  offcore_response.demand_rfo.l3_miss.remote_hit_forward
       [Counts all demand data writes (RFOs) that miss the L3 and clean or
        shared data is transferred from remote cache]
  offcore_response.demand_rfo.l3_miss.remote_hitm
       [Counts all demand data writes (RFOs) that miss the L3 and the modified
        data is transferred from remote cache]
  offcore_response.demand_rfo.l3_miss.snoop_miss_or_no_fwd
       [Counts all demand data writes (RFOs) that miss the L3 and the data is
        returned from local or remote dram]
  offcore_response.demand_rfo.l3_miss_local_dram.snoop_miss_or_no_fwd
       [Counts all demand data writes (RFOs) that miss the L3 and the data is
        returned from local dram]
  offcore_response.demand_rfo.l3_miss_remote_dram.snoop_miss_or_no_fwd
       [Counts all demand data writes (RFOs) that miss the L3 and the data is
        returned from remote dram]
  offcore_response.pf_l1d_and_sw.l3_miss.any_snoop
       [Counts L1 data cache hardware prefetch requests and software prefetch
        requests that miss in the L3]
  offcore_response.pf_l1d_and_sw.l3_miss.remote_hit_forward
       [Counts L1 data cache hardware prefetch requests and software prefetch
        requests that miss the L3 and clean or shared data is transferred from
        remote cache]
  offcore_response.pf_l1d_and_sw.l3_miss.remote_hitm
       [Counts L1 data cache hardware prefetch requests and software prefetch
        requests that miss the L3 and the modified data is transferred from
        remote cache]
  offcore_response.pf_l1d_and_sw.l3_miss.snoop_miss_or_no_fwd
       [Counts L1 data cache hardware prefetch requests and software prefetch
        requests that miss the L3 and the data is returned from local or
        remote dram]
  offcore_response.pf_l1d_and_sw.l3_miss_local_dram.snoop_miss_or_no_fwd
       [Counts L1 data cache hardware prefetch requests and software prefetch
        requests that miss the L3 and the data is returned from local dram]
  offcore_response.pf_l1d_and_sw.l3_miss_remote_dram.snoop_miss_or_no_fwd
       [Counts L1 data cache hardware prefetch requests and software prefetch
        requests that miss the L3 and the data is returned from remote dram]
  offcore_response.pf_l2_data_rd.l3_miss.any_snoop
       [Counts prefetch (that bring data to L2) data reads that miss in the L3]
  offcore_response.pf_l2_data_rd.l3_miss.remote_hit_forward
       [Counts prefetch (that bring data to L2) data reads that miss the L3
        and clean or shared data is transferred from remote cache]
  offcore_response.pf_l2_data_rd.l3_miss.remote_hitm
       [Counts prefetch (that bring data to L2) data reads that miss the L3
        and the modified data is transferred from remote cache]
  offcore_response.pf_l2_data_rd.l3_miss.snoop_miss_or_no_fwd
       [Counts prefetch (that bring data to L2) data reads that miss the L3
        and the data is returned from local or remote dram]
  offcore_response.pf_l2_data_rd.l3_miss_local_dram.snoop_miss_or_no_fwd
       [Counts prefetch (that bring data to L2) data reads that miss the L3
        and the data is returned from local dram]
  offcore_response.pf_l2_data_rd.l3_miss_remote_dram.snoop_miss_or_no_fwd
       [Counts prefetch (that bring data to L2) data reads that miss the L3
        and the data is returned from remote dram]
  offcore_response.pf_l2_rfo.l3_miss.any_snoop
       [Counts all prefetch (that bring data to L2) RFOs that miss in the L3]
  offcore_response.pf_l2_rfo.l3_miss.remote_hit_forward
       [Counts all prefetch (that bring data to L2) RFOs that miss the L3 and
        clean or shared data is transferred from remote cache]
  offcore_response.pf_l2_rfo.l3_miss.remote_hitm
       [Counts all prefetch (that bring data to L2) RFOs that miss the L3 and
        the modified data is transferred from remote cache]
  offcore_response.pf_l2_rfo.l3_miss.snoop_miss_or_no_fwd
       [Counts all prefetch (that bring data to L2) RFOs that miss the L3 and
        the data is returned from local or remote dram]
  offcore_response.pf_l2_rfo.l3_miss_local_dram.snoop_miss_or_no_fwd
       [Counts all prefetch (that bring data to L2) RFOs that miss the L3 and
        the data is returned from local dram]
  offcore_response.pf_l2_rfo.l3_miss_remote_dram.snoop_miss_or_no_fwd
       [Counts all prefetch (that bring data to L2) RFOs that miss the L3 and
        the data is returned from remote dram]
  offcore_response.pf_l3_data_rd.l3_miss.any_snoop
       [Counts all prefetch (that bring data to LLC only) data reads that miss
        in the L3]
  offcore_response.pf_l3_data_rd.l3_miss.remote_hit_forward
       [Counts all prefetch (that bring data to LLC only) data reads that miss
        the L3 and clean or shared data is transferred from remote cache]
  offcore_response.pf_l3_data_rd.l3_miss.remote_hitm
       [Counts all prefetch (that bring data to LLC only) data reads that miss
        the L3 and the modified data is transferred from remote cache]
  offcore_response.pf_l3_data_rd.l3_miss.snoop_miss_or_no_fwd
       [Counts all prefetch (that bring data to LLC only) data reads that miss
        the L3 and the data is returned from local or remote dram]
  offcore_response.pf_l3_data_rd.l3_miss_local_dram.snoop_miss_or_no_fwd
       [Counts all prefetch (that bring data to LLC only) data reads that miss
        the L3 and the data is returned from local dram]
  offcore_response.pf_l3_data_rd.l3_miss_remote_dram.snoop_miss_or_no_fwd
       [Counts all prefetch (that bring data to LLC only) data reads that miss
        the L3 and the data is returned from remote dram]
  offcore_response.pf_l3_rfo.l3_miss.any_snoop
       [Counts all prefetch (that bring data to LLC only) RFOs that miss in
        the L3]
  offcore_response.pf_l3_rfo.l3_miss.remote_hit_forward
       [Counts all prefetch (that bring data to LLC only) RFOs that miss the
        L3 and clean or shared data is transferred from remote cache]
  offcore_response.pf_l3_rfo.l3_miss.remote_hitm
       [Counts all prefetch (that bring data to LLC only) RFOs that miss the
        L3 and the modified data is transferred from remote cache]
  offcore_response.pf_l3_rfo.l3_miss.snoop_miss_or_no_fwd
       [Counts all prefetch (that bring data to LLC only) RFOs that miss the
        L3 and the data is returned from local or remote dram]
  offcore_response.pf_l3_rfo.l3_miss_local_dram.snoop_miss_or_no_fwd
       [Counts all prefetch (that bring data to LLC only) RFOs that miss the
        L3 and the data is returned from local dram]
  offcore_response.pf_l3_rfo.l3_miss_remote_dram.snoop_miss_or_no_fwd
       [Counts all prefetch (that bring data to LLC only) RFOs that miss the
        L3 and the data is returned from remote dram]
  rtm_retired.aborted
       [Number of times an RTM execution aborted due to any reasons (multiple
        categories may count as one) (Precise event)]
  rtm_retired.aborted_events
       [Number of times an RTM execution aborted due to none of the previous 4
        categories (e.g. interrupt)]
  rtm_retired.aborted_mem
       [Number of times an RTM execution aborted due to various memory events
        (e.g. read/write capacity and conflicts)]
  rtm_retired.aborted_memtype
       [Number of times an RTM execution aborted due to incompatible memory
        type]
  rtm_retired.aborted_timer
       [Number of times an RTM execution aborted due to uncommon conditions]
  rtm_retired.aborted_unfriendly
       [Number of times an RTM execution aborted due to HLE-unfriendly
        instructions]
  rtm_retired.commit
       [Number of times an RTM execution successfully committed]
  rtm_retired.start
       [Number of times an RTM execution started]
  tx_exec.misc1
       [Counts the number of times a class of instructions that may cause a
        transactional abort was executed. Since this is the count of
        execution, it may not always cause a transactional abort]
  tx_exec.misc2
       [Counts the number of times a class of instructions (e.g., vzeroupper)
        that may cause a transactional abort was executed inside a
        transactional region]
  tx_exec.misc3
       [Counts the number of times an instruction execution caused the
        transactional nest count supported to be exceeded]
  tx_exec.misc4
       [Counts the number of times a XBEGIN instruction was executed inside an
        HLE transactional region]
  tx_exec.misc5
       [Counts the number of times an HLE XACQUIRE instruction was executed
        inside an RTM transactional region]
  tx_mem.abort_capacity
       [Number of times a transactional abort was signaled due to a data
        capacity limitation for transactional reads or writes]
  tx_mem.abort_conflict
       [Number of times a transactional abort was signaled due to a data
        conflict on a transactionally accessed address]
  tx_mem.abort_hle_elision_buffer_mismatch
       [Number of times an HLE transactional execution aborted due to XRELEASE
        lock not satisfying the address and value requirements in the elision
        buffer]
  tx_mem.abort_hle_elision_buffer_not_empty
       [Number of times an HLE transactional execution aborted due to
        NoAllocatedElisionBuffer being non-zero]
  tx_mem.abort_hle_elision_buffer_unsupported_alignment
       [Number of times an HLE transactional execution aborted due to an
        unsupported read alignment from the elision buffer]
  tx_mem.abort_hle_store_to_elided_lock
       [Number of times a HLE transactional region aborted due to a non
        XRELEASE prefixed instruction writing to an elided lock in the elision
        buffer]
  tx_mem.hle_elision_buffer_full
       [Number of times HLE lock could not be elided due to
        ElisionBufferAvailable being zero]

other:
  core_power.lvl0_turbo_license
       [Core cycles where the core was running in a manner where Turbo may be
        clipped to the Non-AVX turbo schedule]
  core_power.lvl1_turbo_license
       [Core cycles where the core was running in a manner where Turbo may be
        clipped to the AVX2 turbo schedule]
  core_power.lvl2_turbo_license
       [Core cycles where the core was running in a manner where Turbo may be
        clipped to the AVX512 turbo schedule]
  core_power.throttle
       [Core cycles the core was throttled due to a pending power level
        request]
  core_snoop_response.rsp_ifwdfe
       [CORE_SNOOP_RESPONSE.RSP_IFWDFE]
  core_snoop_response.rsp_ifwdm
       [CORE_SNOOP_RESPONSE.RSP_IFWDM]
  core_snoop_response.rsp_ihitfse
       [CORE_SNOOP_RESPONSE.RSP_IHITFSE]
  core_snoop_response.rsp_ihiti
       [CORE_SNOOP_RESPONSE.RSP_IHITI]
  core_snoop_response.rsp_sfwdfe
       [CORE_SNOOP_RESPONSE.RSP_SFWDFE]
  core_snoop_response.rsp_sfwdm
       [CORE_SNOOP_RESPONSE.RSP_SFWDM]
  core_snoop_response.rsp_shitfse
       [CORE_SNOOP_RESPONSE.RSP_SHITFSE]
  hw_interrupts.received
       [Number of hardware interrupts received by the processor]
  idi_misc.wb_downgrade
       [Counts number of cache lines that are dropped and not written back to
        L3 as they are deemed to be less likely to be reused shortly]
  idi_misc.wb_upgrade
       [Counts number of cache lines that are allocated and written back to L3
        with the intention that they are more likely to be reused shortly]
  memory_disambiguation.history_reset
       [MEMORY_DISAMBIGUATION.HISTORY_RESET]

pipeline:
  arith.divider_active
       [Cycles when divide unit is busy executing divide or square root
        operations. Accounts for integer and floating-point operations]
  br_inst_retired.all_branches
       [All (macro) branch instructions retired Spec update: SKL091]
  br_inst_retired.all_branches_pebs
       [All (macro) branch instructions retired Spec update: SKL091 (Must be
        precise)]
  br_inst_retired.cond
       [Conditional branch instructions retired. [This event is alias to
        BR_INST_RETIRED.CONDITIONAL] Spec update: SKL091]
  br_inst_retired.cond_ntaken
       [Not taken branch instructions retired Spec update: SKL091]
  br_inst_retired.conditional
       [Conditional branch instructions retired. [This event is alias to
        BR_INST_RETIRED.COND] Spec update: SKL091 (Precise event)]
  br_inst_retired.far_branch
       [Far branch instructions retired Spec update: SKL091 (Precise event)]
  br_inst_retired.near_call
       [Direct and indirect near call instructions retired Spec update: SKL091
        (Precise event)]
  br_inst_retired.near_return
       [Return instructions retired Spec update: SKL091 (Precise event)]
  br_inst_retired.near_taken
       [Taken branch instructions retired Spec update: SKL091 (Precise event)]
  br_inst_retired.not_taken
       [Not taken branch instructions retired Spec update: SKL091]
  br_misp_exec.all_branches
       [Speculative and retired mispredicted macro conditional branches]
  br_misp_exec.indirect
       [Speculative mispredicted indirect branches]
  br_misp_retired.all_branches
       [All mispredicted macro branch instructions retired]
  br_misp_retired.all_branches_pebs
       [Mispredicted macro branch instructions retired (Must be precise)]
  br_misp_retired.conditional
       [Mispredicted conditional branch instructions retired (Precise event)]
  br_misp_retired.near_call
       [Mispredicted direct and indirect near call instructions retired
        (Precise event)]
  br_misp_retired.near_taken
       [Number of near branch instructions retired that were mispredicted and
        taken (Precise event)]
  br_misp_retired.ret
       [This event counts the number of mispredicted ret instructions retired.
        Non PEBS (Precise event)]
  cpu_clk_thread_unhalted.one_thread_active
       [Core crystal clock cycles when this thread is unhalted and the other
        thread is halted]
  cpu_clk_thread_unhalted.ref_xclk
       [Core crystal clock cycles when the thread is unhalted]
  cpu_clk_thread_unhalted.ref_xclk_any
       [Core crystal clock cycles when at least one thread on the physical
        core is unhalted]
  cpu_clk_unhalted.one_thread_active
       [Core crystal clock cycles when this thread is unhalted and the other
        thread is halted]
  cpu_clk_unhalted.ref_tsc
       [Reference cycles when the core is not in halt state]
  cpu_clk_unhalted.ref_xclk
       [Core crystal clock cycles when the thread is unhalted]
  cpu_clk_unhalted.ref_xclk_any
       [Core crystal clock cycles when at least one thread on the physical
        core is unhalted]
  cpu_clk_unhalted.ring0_trans
       [Counts when there is a transition from ring 1, 2 or 3 to ring 0]
  cpu_clk_unhalted.thread
       [Core cycles when the thread is not in halt state]
  cpu_clk_unhalted.thread_any
       [Core cycles when at least one thread on the physical core is not in
        halt state]
  cpu_clk_unhalted.thread_p
       [Thread cycles when thread is not in halt state]
  cpu_clk_unhalted.thread_p_any
       [Core cycles when at least one thread on the physical core is not in
        halt state]
  cycle_activity.cycles_l1d_miss
       [Cycles while L1 cache miss demand load is outstanding]
  cycle_activity.cycles_l2_miss
       [Cycles while L2 cache miss demand load is outstanding]
  cycle_activity.cycles_mem_any
       [Cycles while memory subsystem has an outstanding load]
  cycle_activity.stalls_l1d_miss
       [Execution stalls while L1 cache miss demand load is outstanding]
  cycle_activity.stalls_l2_miss
       [Execution stalls while L2 cache miss demand load is outstanding]
  cycle_activity.stalls_mem_any
       [Execution stalls while memory subsystem has an outstanding load]
  cycle_activity.stalls_total
       [Total execution stalls]
  exe_activity.1_ports_util
       [Cycles total of 1 uop is executed on all ports and Reservation Station
        was not empty]
  exe_activity.2_ports_util
       [Cycles total of 2 uops are executed on all ports and Reservation
        Station was not empty]
  exe_activity.3_ports_util
       [Cycles total of 3 uops are executed on all ports and Reservation
        Station was not empty]
  exe_activity.4_ports_util
       [Cycles total of 4 uops are executed on all ports and Reservation
        Station was not empty]
  exe_activity.bound_on_stores
       [Cycles where the Store Buffer was full and no outstanding load]
  exe_activity.exe_bound_0_ports
       [Cycles where no uops were executed, the Reservation Station was not
        empty, the Store Buffer was full and there was no outstanding load]
  ild_stall.lcp
       [Stalls caused by changing prefix length of the instruction. [This
        event is alias to DECODE.LCP]]
  inst_decoded.decoders
       [Instruction decoders utilized in a cycle]
  inst_retired.any
       [Instructions retired from execution]
  inst_retired.any_p
       [Number of instructions retired. General Counter - architectural event
        Spec update: SKL091, SKL044]
  inst_retired.nop
       [Number of all retired NOP instructions Spec update: SKL091, SKL044
        (Precise event)]
  inst_retired.prec_dist
       [Precise instruction retired event with HW to reduce effect of PEBS
        shadow in IP distribution Spec update: SKL091, SKL044 (Must be
        precise)]
  inst_retired.total_cycles_ps
       [Number of cycles using always true condition applied to PEBS
        instructions retired event Spec update: SKL091, SKL044 (Must be
        precise)]
  int_misc.clear_resteer_cycles
       [Cycles the issue-stage is waiting for front-end to fetch from
        resteered path following branch misprediction or machine clear events]
  int_misc.clears_count
       [Clears speculative count]
  int_misc.recovery_cycles
       [Core cycles the allocator was stalled due to recovery from earlier
        clear event for this thread (e.g. misprediction or memory nuke)]
  int_misc.recovery_cycles_any
       [Core cycles the allocator was stalled due to recovery from earlier
        clear event for any thread running on the physical core (e.g.
        misprediction or memory nuke)]
  ld_blocks.no_sr
       [The number of times that split load operations are temporarily blocked
        because all resources for handling the split accesses are in use]
  ld_blocks.store_forward
       [Loads blocked due to overlapping with a preceding store that cannot be
        forwarded]
  ld_blocks_partial.address_alias
       [False dependencies in MOB due to partial compare on address]
  load_hit_pre.sw_pf
       [Demand load dispatches that hit L1D fill buffer (FB) allocated for
        software prefetch]
  lsd.cycles_4_uops
       [Cycles 4 Uops delivered by the LSD, but didn't come from the decoder.
        [This event is alias to LSD.CYCLES_OK]]
  lsd.cycles_active
       [Cycles Uops delivered by the LSD, but didn't come from the decoder]
  lsd.cycles_ok
       [Cycles 4 Uops delivered by the LSD, but didn't come from the decoder.
        [This event is alias to LSD.CYCLES_4_UOPS]]
  lsd.uops
       [Number of Uops delivered by the LSD]
  machine_clears.count
       [Number of machine clears (nukes) of any type]
  machine_clears.smc
       [Self-modifying code (SMC) detected]
  other_assists.any
       [Number of times a microcode assist is invoked by HW other than
        FP-assist. Examples include AD (page Access Dirty) and AVX* related
        assists]
  partial_rat_stalls.scoreboard
       [Cycles where the pipeline is stalled due to serializing operations]
  resource_stalls.any
       [Resource-related stall cycles]
  resource_stalls.sb
       [Cycles stalled due to no store buffers available. (not including
        draining form sync)]
  rob_misc_events.lbr_inserts
       [Increments whenever there is an update to the LBR array]
  rob_misc_events.pause_inst
       [Number of retired PAUSE instructions (that do not end up with a VMExit
        to the VMM; TSX aborted Instructions may be counted). This event is
        not supported on first SKL and KBL products]
  rs_events.empty_cycles
       [Cycles when Reservation Station (RS) is empty for the thread]
  rs_events.empty_end
       [Counts end of periods where the Reservation Station (RS) was empty.
        Could be useful to precisely locate Frontend Latency Bound issues]
  uops_dispatched_port.port_0
       [Cycles per thread when uops are executed in port 0]
  uops_dispatched_port.port_1
       [Cycles per thread when uops are executed in port 1]
  uops_dispatched_port.port_2
       [Cycles per thread when uops are executed in port 2]
  uops_dispatched_port.port_3
       [Cycles per thread when uops are executed in port 3]
  uops_dispatched_port.port_4
       [Cycles per thread when uops are executed in port 4]
  uops_dispatched_port.port_5
       [Cycles per thread when uops are executed in port 5]
  uops_dispatched_port.port_6
       [Cycles per thread when uops are executed in port 6]
  uops_dispatched_port.port_7
       [Cycles per thread when uops are executed in port 7]
  uops_executed.core
       [Number of uops executed on the core]
  uops_executed.core_cycles_ge_1
       [Cycles at least 1 micro-op is executed from any thread on physical
        core]
  uops_executed.core_cycles_ge_2
       [Cycles at least 2 micro-op is executed from any thread on physical
        core]
  uops_executed.core_cycles_ge_3
       [Cycles at least 3 micro-op is executed from any thread on physical
        core]
  uops_executed.core_cycles_ge_4
       [Cycles at least 4 micro-op is executed from any thread on physical
        core]
  uops_executed.core_cycles_none
       [Cycles with no micro-ops executed from any thread on physical core]
  uops_executed.cycles_ge_1_uop_exec
       [Cycles where at least 1 uop was executed per-thread]
  uops_executed.cycles_ge_2_uops_exec
       [Cycles where at least 2 uops were executed per-thread]
  uops_executed.cycles_ge_3_uops_exec
       [Cycles where at least 3 uops were executed per-thread]
  uops_executed.cycles_ge_4_uops_exec
       [Cycles where at least 4 uops were executed per-thread]
  uops_executed.stall_cycles
       [Counts number of cycles no uops were dispatched to be executed on this
        thread]
  uops_executed.thread
       [Counts the number of uops to be executed per-thread each cycle]
  uops_executed.x87
       [Counts the number of x87 uops dispatched]
  uops_issued.any
       [Uops that Resource Allocation Table (RAT) issues to Reservation
        Station (RS)]
  uops_issued.slow_lea
       [Number of slow LEA uops being allocated. A uop is generally considered
        SlowLea if it has 3 sources (e.g. 2 sources + immediate) regardless if
        as a result of LEA instruction or not]
  uops_issued.stall_cycles
       [Cycles when Resource Allocation Table (RAT) does not issue Uops to
        Reservation Station (RS) for the thread]
  uops_issued.vector_width_mismatch
       [Uops inserted at issue-stage in order to preserve upper bits of vector
        registers]
  uops_retired.macro_fused
       [Number of macro-fused uops retired. (non precise)]
  uops_retired.retire_slots
       [Retirement slots used]
  uops_retired.stall_cycles
       [Cycles without actually retired uops]
  uops_retired.total_cycles
       [Cycles with less than 10 actually retired uops]

uncore cache:
  unc_cha_ag0_ad_crd_acquired.tgr0
       [CMS Agent0 AD Credits Acquired; For Transgress 0. Unit: uncore_cha]
  unc_cha_ag0_ad_crd_acquired.tgr1
       [CMS Agent0 AD Credits Acquired; For Transgress 1. Unit: uncore_cha]
  unc_cha_ag0_ad_crd_acquired.tgr2
       [CMS Agent0 AD Credits Acquired; For Transgress 2. Unit: uncore_cha]
  unc_cha_ag0_ad_crd_acquired.tgr3
       [CMS Agent0 AD Credits Acquired; For Transgress 3. Unit: uncore_cha]
  unc_cha_ag0_ad_crd_acquired.tgr4
       [CMS Agent0 AD Credits Acquired; For Transgress 4. Unit: uncore_cha]
  unc_cha_ag0_ad_crd_acquired.tgr5
       [CMS Agent0 AD Credits Acquired; For Transgress 5. Unit: uncore_cha]
  unc_cha_ag0_ad_crd_occupancy.tgr0
       [CMS Agent0 AD Credits Occupancy; For Transgress 0. Unit: uncore_cha]
  unc_cha_ag0_ad_crd_occupancy.tgr1
       [CMS Agent0 AD Credits Occupancy; For Transgress 1. Unit: uncore_cha]
  unc_cha_ag0_ad_crd_occupancy.tgr2
       [CMS Agent0 AD Credits Occupancy; For Transgress 2. Unit: uncore_cha]
  unc_cha_ag0_ad_crd_occupancy.tgr3
       [CMS Agent0 AD Credits Occupancy; For Transgress 3. Unit: uncore_cha]
  unc_cha_ag0_ad_crd_occupancy.tgr4
       [CMS Agent0 AD Credits Occupancy; For Transgress 4. Unit: uncore_cha]
  unc_cha_ag0_ad_crd_occupancy.tgr5
       [CMS Agent0 AD Credits Occupancy; For Transgress 5. Unit: uncore_cha]
  unc_cha_ag0_bl_crd_acquired.tgr0
       [CMS Agent0 BL Credits Acquired; For Transgress 0. Unit: uncore_cha]
  unc_cha_ag0_bl_crd_acquired.tgr1
       [CMS Agent0 BL Credits Acquired; For Transgress 1. Unit: uncore_cha]
  unc_cha_ag0_bl_crd_acquired.tgr2
       [CMS Agent0 BL Credits Acquired; For Transgress 2. Unit: uncore_cha]
  unc_cha_ag0_bl_crd_acquired.tgr3
       [CMS Agent0 BL Credits Acquired; For Transgress 3. Unit: uncore_cha]
  unc_cha_ag0_bl_crd_acquired.tgr4
       [CMS Agent0 BL Credits Acquired; For Transgress 4. Unit: uncore_cha]
  unc_cha_ag0_bl_crd_acquired.tgr5
       [CMS Agent0 BL Credits Acquired; For Transgress 5. Unit: uncore_cha]
  unc_cha_ag0_bl_crd_occupancy.tgr0
       [CMS Agent0 BL Credits Occupancy; For Transgress 0. Unit: uncore_cha]
  unc_cha_ag0_bl_crd_occupancy.tgr1
       [CMS Agent0 BL Credits Occupancy; For Transgress 1. Unit: uncore_cha]
  unc_cha_ag0_bl_crd_occupancy.tgr2
       [CMS Agent0 BL Credits Occupancy; For Transgress 2. Unit: uncore_cha]
  unc_cha_ag0_bl_crd_occupancy.tgr3
       [CMS Agent0 BL Credits Occupancy; For Transgress 3. Unit: uncore_cha]
  unc_cha_ag0_bl_crd_occupancy.tgr4
       [CMS Agent0 BL Credits Occupancy; For Transgress 4. Unit: uncore_cha]
  unc_cha_ag0_bl_crd_occupancy.tgr5
       [CMS Agent0 BL Credits Occupancy; For Transgress 5. Unit: uncore_cha]
  unc_cha_ag1_ad_crd_acquired.tgr0
       [CMS Agent1 AD Credits Acquired; For Transgress 0. Unit: uncore_cha]
  unc_cha_ag1_ad_crd_acquired.tgr1
       [CMS Agent1 AD Credits Acquired; For Transgress 1. Unit: uncore_cha]
  unc_cha_ag1_ad_crd_acquired.tgr2
       [CMS Agent1 AD Credits Acquired; For Transgress 2. Unit: uncore_cha]
  unc_cha_ag1_ad_crd_acquired.tgr3
       [CMS Agent1 AD Credits Acquired; For Transgress 3. Unit: uncore_cha]
  unc_cha_ag1_ad_crd_acquired.tgr4
       [CMS Agent1 AD Credits Acquired; For Transgress 4. Unit: uncore_cha]
  unc_cha_ag1_ad_crd_acquired.tgr5
       [CMS Agent1 AD Credits Acquired; For Transgress 5. Unit: uncore_cha]
  unc_cha_ag1_ad_crd_occupancy.tgr0
       [CMS Agent1 AD Credits Occupancy; For Transgress 0. Unit: uncore_cha]
  unc_cha_ag1_ad_crd_occupancy.tgr1
       [CMS Agent1 AD Credits Occupancy; For Transgress 1. Unit: uncore_cha]
  unc_cha_ag1_ad_crd_occupancy.tgr2
       [CMS Agent1 AD Credits Occupancy; For Transgress 2. Unit: uncore_cha]
  unc_cha_ag1_ad_crd_occupancy.tgr3
       [CMS Agent1 AD Credits Occupancy; For Transgress 3. Unit: uncore_cha]
  unc_cha_ag1_ad_crd_occupancy.tgr4
       [CMS Agent1 AD Credits Occupancy; For Transgress 4. Unit: uncore_cha]
  unc_cha_ag1_ad_crd_occupancy.tgr5
       [CMS Agent1 AD Credits Occupancy; For Transgress 5. Unit: uncore_cha]
  unc_cha_ag1_bl_crd_occupancy.tgr0
       [CMS Agent1 BL Credits Occupancy; For Transgress 0. Unit: uncore_cha]
  unc_cha_ag1_bl_crd_occupancy.tgr1
       [CMS Agent1 BL Credits Occupancy; For Transgress 1. Unit: uncore_cha]
  unc_cha_ag1_bl_crd_occupancy.tgr2
       [CMS Agent1 BL Credits Occupancy; For Transgress 2. Unit: uncore_cha]
  unc_cha_ag1_bl_crd_occupancy.tgr3
       [CMS Agent1 BL Credits Occupancy; For Transgress 3. Unit: uncore_cha]
  unc_cha_ag1_bl_crd_occupancy.tgr4
       [CMS Agent1 BL Credits Occupancy; For Transgress 4. Unit: uncore_cha]
  unc_cha_ag1_bl_crd_occupancy.tgr5
       [CMS Agent1 BL Credits Occupancy; For Transgress 5. Unit: uncore_cha]
  unc_cha_ag1_bl_credits_acquired.tgr0
       [CMS Agent1 BL Credits Acquired; For Transgress 0. Unit: uncore_cha]
  unc_cha_ag1_bl_credits_acquired.tgr1
       [CMS Agent1 BL Credits Acquired; For Transgress 1. Unit: uncore_cha]
  unc_cha_ag1_bl_credits_acquired.tgr2
       [CMS Agent1 BL Credits Acquired; For Transgress 2. Unit: uncore_cha]
  unc_cha_ag1_bl_credits_acquired.tgr3
       [CMS Agent1 BL Credits Acquired; For Transgress 3. Unit: uncore_cha]
  unc_cha_ag1_bl_credits_acquired.tgr4
       [CMS Agent1 BL Credits Acquired; For Transgress 4. Unit: uncore_cha]
  unc_cha_ag1_bl_credits_acquired.tgr5
       [CMS Agent1 BL Credits Acquired; For Transgress 5. Unit: uncore_cha]
  unc_cha_bypass_cha_imc.intermediate
       [CHA to iMC Bypass; Intermediate bypass Taken. Unit: uncore_cha]
  unc_cha_bypass_cha_imc.not_taken
       [CHA to iMC Bypass; Not Taken. Unit: uncore_cha]
  unc_cha_bypass_cha_imc.taken
       [CHA to iMC Bypass; Taken. Unit: uncore_cha]
  unc_cha_clockticks
       [Clockticks of the uncore caching & home agent (CHA). Unit: uncore_cha]
  unc_cha_cms_clockticks
       [CMS Clockticks. Unit: uncore_cha]
  unc_cha_core_pma.c1_state
       [Core PMA Events; C1 State. Unit: uncore_cha]
  unc_cha_core_pma.c1_transition
       [Core PMA Events; C1 Transition. Unit: uncore_cha]
  unc_cha_core_pma.c6_state
       [Core PMA Events; C6 State. Unit: uncore_cha]
  unc_cha_core_pma.c6_transition
       [Core PMA Events; C6 Transition. Unit: uncore_cha]
  unc_cha_core_pma.gv
       [Core PMA Events; GV. Unit: uncore_cha]
  unc_cha_core_snp.any_gtone
       [Core Cross Snoops Issued; Any Cycle with Multiple Snoops. Unit:
        uncore_cha]
  unc_cha_core_snp.any_one
       [Core Cross Snoops Issued; Any Single Snoop. Unit: uncore_cha]
  unc_cha_core_snp.any_remote
       [Core Cross Snoops Issued; Any Snoop to Remote Node. Unit: uncore_cha]
  unc_cha_core_snp.core_gtone
       [Core Cross Snoops Issued; Multiple Core Requests. Unit: uncore_cha]
  unc_cha_core_snp.core_one
       [Core Cross Snoops Issued; Single Core Requests. Unit: uncore_cha]
  unc_cha_core_snp.core_remote
       [Core Cross Snoops Issued; Core Request to Remote Node. Unit:
        uncore_cha]
  unc_cha_core_snp.evict_gtone
       [Core Cross Snoops Issued; Multiple Eviction. Unit: uncore_cha]
  unc_cha_core_snp.evict_one
       [Core Cross Snoops Issued; Single Eviction. Unit: uncore_cha]
  unc_cha_core_snp.evict_remote
       [Core Cross Snoops Issued; Eviction to Remote Node. Unit: uncore_cha]
  unc_cha_core_snp.ext_gtone
       [Core Cross Snoops Issued; Multiple External Snoops. Unit: uncore_cha]
  unc_cha_core_snp.ext_one
       [Core Cross Snoops Issued; Single External Snoops. Unit: uncore_cha]
  unc_cha_core_snp.ext_remote
       [Core Cross Snoops Issued; External Snoop to Remote Node. Unit:
        uncore_cha]
  unc_cha_counter0_occupancy
       [Counter 0 Occupancy. Unit: uncore_cha]
  unc_cha_dir_lookup.no_snp
       [Multi-socket cacheline Directory state lookups; Snoop Not Needed.
        Unit: uncore_cha]
  unc_cha_dir_lookup.snp
       [Multi-socket cacheline Directory state lookups; Snoop Needed. Unit:
        uncore_cha]
  unc_cha_dir_update.ha
       [Multi-socket cacheline Directory state updates; Directory Updated
        memory write from the HA pipe. Unit: uncore_cha]
  unc_cha_dir_update.tor
       [Multi-socket cacheline Directory state updates; Directory Updated
        memory write from TOR pipe. Unit: uncore_cha]
  unc_cha_egress_ordering.iv_snoopgo_dn
       [Egress Blocking due to Ordering requirements; Down. Unit: uncore_cha]
  unc_cha_egress_ordering.iv_snoopgo_up
       [Egress Blocking due to Ordering requirements; Up. Unit: uncore_cha]
  unc_cha_fast_asserted.horz
       [FaST wire asserted; Horizontal. Unit: uncore_cha]
  unc_cha_fast_asserted.vert
       [FaST wire asserted; Vertical. Unit: uncore_cha]
  unc_cha_hitme_hit.ex_rds
       [Read request from a remote socket which hit in the HitMe Cache to a
        line In the E state. Unit: uncore_cha]
  unc_cha_hitme_hit.shared_ownreq
       [Counts Number of Hits in HitMe Cache; Shared hit and op is RdInvOwn,
        RdInv, Inv*. Unit: uncore_cha]
  unc_cha_hitme_hit.wbmtoe
       [Counts Number of Hits in HitMe Cache; op is WbMtoE. Unit: uncore_cha]
  unc_cha_hitme_hit.wbmtoi_or_s
       [Counts Number of Hits in HitMe Cache; op is WbMtoI, WbPushMtoI,
        WbFlush, or WbMtoS. Unit: uncore_cha]
  unc_cha_hitme_lookup.read
       [Counts Number of times HitMe Cache is accessed; op is RdCode, RdData,
        RdDataMigratory, RdCur, RdInvOwn, RdInv, Inv*. Unit: uncore_cha]
  unc_cha_hitme_lookup.write
       [Counts Number of times HitMe Cache is accessed; op is WbMtoE, WbMtoI,
        WbPushMtoI, WbFlush, or WbMtoS. Unit: uncore_cha]
  unc_cha_hitme_miss.notshared_rdinvown
       [Counts Number of Misses in HitMe Cache; No SF/LLC HitS/F and op is
        RdInvOwn. Unit: uncore_cha]
  unc_cha_hitme_miss.read_or_inv
       [Counts Number of Misses in HitMe Cache; op is RdCode, RdData,
        RdDataMigratory, RdCur, RdInv, Inv*. Unit: uncore_cha]
  unc_cha_hitme_miss.shared_rdinvown
       [Counts Number of Misses in HitMe Cache; SF/LLC HitS/F and op is
        RdInvOwn. Unit: uncore_cha]
  unc_cha_hitme_update.deallocate
       [Counts the number of Allocate/Update to HitMe Cache; Deallocate HitME$
        on Reads without RspFwdI*. Unit: uncore_cha]
  unc_cha_hitme_update.deallocate_rspfwdi_loc
       [Counts the number of Allocate/Update to HitMe Cache; op is RspIFwd or
        RspIFwdWb for a local request. Unit: uncore_cha]
  unc_cha_hitme_update.rdinvown
       [Counts the number of Allocate/Update to HitMe Cache; Update HitMe
        Cache on RdInvOwn even if not RspFwdI*. Unit: uncore_cha]
  unc_cha_hitme_update.rspfwdi_rem
       [Counts the number of Allocate/Update to HitMe Cache; op is RspIFwd or
        RspIFwdWb for a remote request. Unit: uncore_cha]
  unc_cha_hitme_update.shared
       [Counts the number of Allocate/Update to HitMe Cache; Update HitMe
        Cache to SHARed. Unit: uncore_cha]
  unc_cha_horz_ring_ad_in_use.left_even
       [Horizontal AD Ring In Use; Left and Even. Unit: uncore_cha]
  unc_cha_horz_ring_ad_in_use.left_odd
       [Horizontal AD Ring In Use; Left and Odd. Unit: uncore_cha]
  unc_cha_horz_ring_ad_in_use.right_even
       [Horizontal AD Ring In Use; Right and Even. Unit: uncore_cha]
  unc_cha_horz_ring_ad_in_use.right_odd
       [Horizontal AD Ring In Use; Right and Odd. Unit: uncore_cha]
  unc_cha_horz_ring_ak_in_use.left_even
       [Horizontal AK Ring In Use; Left and Even. Unit: uncore_cha]
  unc_cha_horz_ring_ak_in_use.left_odd
       [Horizontal AK Ring In Use; Left and Odd. Unit: uncore_cha]
  unc_cha_horz_ring_ak_in_use.right_even
       [Horizontal AK Ring In Use; Right and Even. Unit: uncore_cha]
  unc_cha_horz_ring_ak_in_use.right_odd
       [Horizontal AK Ring In Use; Right and Odd. Unit: uncore_cha]
  unc_cha_horz_ring_bl_in_use.left_even
       [Horizontal BL Ring in Use; Left and Even. Unit: uncore_cha]
  unc_cha_horz_ring_bl_in_use.left_odd
       [Horizontal BL Ring in Use; Left and Odd. Unit: uncore_cha]
  unc_cha_horz_ring_bl_in_use.right_even
       [Horizontal BL Ring in Use; Right and Even. Unit: uncore_cha]
  unc_cha_horz_ring_bl_in_use.right_odd
       [Horizontal BL Ring in Use; Right and Odd. Unit: uncore_cha]
  unc_cha_horz_ring_iv_in_use.left
       [Horizontal IV Ring in Use; Left. Unit: uncore_cha]
  unc_cha_horz_ring_iv_in_use.right
       [Horizontal IV Ring in Use; Right. Unit: uncore_cha]
  unc_cha_imc_reads_count.normal
       [Normal priority reads issued to the memory controller from the CHA.
        Unit: uncore_cha]
  unc_cha_imc_reads_count.priority
       [HA to iMC Reads Issued; ISOCH. Unit: uncore_cha]
  unc_cha_imc_writes_count.full
       [CHA to iMC Full Line Writes Issued; Full Line Non-ISOCH. Unit:
        uncore_cha]
  unc_cha_imc_writes_count.full_mig
       [Writes Issued to the iMC by the HA; Full Line MIG. Unit: uncore_cha]
  unc_cha_imc_writes_count.full_priority
       [Writes Issued to the iMC by the HA; ISOCH Full Line. Unit: uncore_cha]
  unc_cha_imc_writes_count.partial
       [Writes Issued to the iMC by the HA; Partial Non-ISOCH. Unit:
        uncore_cha]
  unc_cha_imc_writes_count.partial_mig
       [Writes Issued to the iMC by the HA; Partial MIG. Unit: uncore_cha]
  unc_cha_imc_writes_count.partial_priority
       [Writes Issued to the iMC by the HA; ISOCH Partial. Unit: uncore_cha]
  unc_cha_iodc_alloc.invitom
       [Counts Number of times IODC entry allocation is attempted; Number of
        IODC allocations. Unit: uncore_cha]
  unc_cha_iodc_alloc.iodcfull
       [Counts Number of times IODC entry allocation is attempted; Number of
        IODC allocations dropped due to IODC Full. Unit: uncore_cha]
  unc_cha_iodc_alloc.osbgated
       [Counts Number of times IODC entry allocation is attempted; Number of
        IDOC allocation dropped due to OSB gate. Unit: uncore_cha]
  unc_cha_iodc_dealloc.all
       [Counts number of IODC deallocations; IODC deallocated due to any
        reason. Unit: uncore_cha]
  unc_cha_iodc_dealloc.snpout
       [Counts number of IODC deallocations; IODC deallocated due to
        conflicting transaction. Unit: uncore_cha]
  unc_cha_iodc_dealloc.wbmtoe
       [Counts number of IODC deallocations; IODC deallocated due to WbMtoE.
        Unit: uncore_cha]
  unc_cha_iodc_dealloc.wbmtoi
       [Counts number of IODC deallocations; IODC deallocated due to WbMtoI.
        Unit: uncore_cha]
  unc_cha_iodc_dealloc.wbpushmtoi
       [Counts number of IODC deallocations; IODC deallocated due to
        WbPushMtoI. Unit: uncore_cha]
  unc_cha_llc_lookup.any
       [Cache and Snoop Filter Lookups; Any Request. Unit: uncore_cha]
  unc_cha_llc_lookup.data_read
       [Cache and Snoop Filter Lookups; Data Read Request. Unit: uncore_cha]
  unc_cha_llc_lookup.local
       [Cache and Snoop Filter Lookups; Local. Unit: uncore_cha]
  unc_cha_llc_lookup.remote
       [Cache and Snoop Filter Lookups; Remote. Unit: uncore_cha]
  unc_cha_llc_lookup.remote_snoop
       [Cache and Snoop Filter Lookups; External Snoop Request. Unit:
        uncore_cha]
  unc_cha_llc_lookup.write
       [Cache and Snoop Filter Lookups; Write Requests. Unit: uncore_cha]
  unc_cha_llc_victims.local_all
       [Lines Victimized; Local - All Lines. Unit: uncore_cha]
  unc_cha_llc_victims.local_e
       [Lines Victimized; Local - Lines in E State. Unit: uncore_cha]
  unc_cha_llc_victims.local_f
       [Lines Victimized; Local - Lines in F State. Unit: uncore_cha]
  unc_cha_llc_victims.local_m
       [Lines Victimized; Local - Lines in M State. Unit: uncore_cha]
  unc_cha_llc_victims.local_s
       [Lines Victimized; Local - Lines in S State. Unit: uncore_cha]
  unc_cha_llc_victims.remote_all
       [Lines Victimized; Remote - All Lines. Unit: uncore_cha]
  unc_cha_llc_victims.remote_e
       [Lines Victimized; Remote - Lines in E State. Unit: uncore_cha]
  unc_cha_llc_victims.remote_f
       [Lines Victimized; Remote - Lines in F State. Unit: uncore_cha]
  unc_cha_llc_victims.remote_m
       [Lines Victimized; Remote - Lines in M State. Unit: uncore_cha]
  unc_cha_llc_victims.remote_s
       [Lines Victimized; Remote - Lines in S State. Unit: uncore_cha]
  unc_cha_llc_victims.total_e
       [Lines Victimized; Lines in E state. Unit: uncore_cha]
  unc_cha_llc_victims.total_f
       [Lines Victimized; Lines in F State. Unit: uncore_cha]
  unc_cha_llc_victims.total_m
       [Lines Victimized; Lines in M state. Unit: uncore_cha]
  unc_cha_llc_victims.total_s
       [Lines Victimized; Lines in S State. Unit: uncore_cha]
  unc_cha_misc.cv0_pref_miss
       [Cbo Misc; CV0 Prefetch Miss. Unit: uncore_cha]
  unc_cha_misc.cv0_pref_vic
       [Cbo Misc; CV0 Prefetch Victim. Unit: uncore_cha]
  unc_cha_misc.rfo_hit_s
       [Number of times that an RFO hit in S state. Unit: uncore_cha]
  unc_cha_misc.rspi_was_fse
       [Cbo Misc; Silent Snoop Eviction. Unit: uncore_cha]
  unc_cha_misc.wc_aliasing
       [Cbo Misc; Write Combining Aliasing. Unit: uncore_cha]
  unc_cha_osb
       [OSB Snoop Broadcast. Unit: uncore_cha]
  unc_cha_read_no_credits.edc0_smi2
       [CHA iMC CHNx READ Credits Empty; EDC0_SMI2. Unit: uncore_cha]
  unc_cha_read_no_credits.edc1_smi3
       [CHA iMC CHNx READ Credits Empty; EDC1_SMI3. Unit: uncore_cha]
  unc_cha_read_no_credits.edc2_smi4
       [CHA iMC CHNx READ Credits Empty; EDC2_SMI4. Unit: uncore_cha]
  unc_cha_read_no_credits.edc3_smi5
       [CHA iMC CHNx READ Credits Empty; EDC3_SMI5. Unit: uncore_cha]
  unc_cha_read_no_credits.mc0_smi0
       [CHA iMC CHNx READ Credits Empty; MC0_SMI0. Unit: uncore_cha]
  unc_cha_read_no_credits.mc1_smi1
       [CHA iMC CHNx READ Credits Empty; MC1_SMI1. Unit: uncore_cha]
  unc_cha_requests.invitoe_local
       [Local requests for exclusive ownership of a cache line without
        receiving data. Unit: uncore_cha]
  unc_cha_requests.invitoe_remote
       [Local requests for exclusive ownership of a cache line without
        receiving data. Unit: uncore_cha]
  unc_cha_requests.reads
       [Read requests. Unit: uncore_cha]
  unc_cha_requests.reads_local
       [Read requests from a unit on this socket. Unit: uncore_cha]
  unc_cha_requests.reads_remote
       [Read requests from a remote socket. Unit: uncore_cha]
  unc_cha_requests.writes
       [Write requests. Unit: uncore_cha]
  unc_cha_requests.writes_local
       [Write Requests from a unit on this socket. Unit: uncore_cha]
  unc_cha_requests.writes_remote
       [Read and Write Requests; Writes Remote. Unit: uncore_cha]
  unc_cha_ring_bounces_horz.ad
       [Messages that bounced on the Horizontal Ring.; AD. Unit: uncore_cha]
  unc_cha_ring_bounces_horz.ak
       [Messages that bounced on the Horizontal Ring.; AK. Unit: uncore_cha]
  unc_cha_ring_bounces_horz.bl
       [Messages that bounced on the Horizontal Ring.; BL. Unit: uncore_cha]
  unc_cha_ring_bounces_horz.iv
       [Messages that bounced on the Horizontal Ring.; IV. Unit: uncore_cha]
  unc_cha_ring_bounces_vert.ad
       [Messages that bounced on the Vertical Ring.; AD. Unit: uncore_cha]
  unc_cha_ring_bounces_vert.ak
       [Messages that bounced on the Vertical Ring.; Acknowledgements to core.
        Unit: uncore_cha]
  unc_cha_ring_bounces_vert.bl
       [Messages that bounced on the Vertical Ring.; Data Responses to core.
        Unit: uncore_cha]
  unc_cha_ring_bounces_vert.iv
       [Messages that bounced on the Vertical Ring.; Snoops of processor's
        cache. Unit: uncore_cha]
  unc_cha_ring_sink_starved_horz.ad
       [Sink Starvation on Horizontal Ring; AD. Unit: uncore_cha]
  unc_cha_ring_sink_starved_horz.ak
       [Sink Starvation on Horizontal Ring; AK. Unit: uncore_cha]
  unc_cha_ring_sink_starved_horz.ak_ag1
       [Sink Starvation on Horizontal Ring; Acknowledgements to Agent 1. Unit:
        uncore_cha]
  unc_cha_ring_sink_starved_horz.bl
       [Sink Starvation on Horizontal Ring; BL. Unit: uncore_cha]
  unc_cha_ring_sink_starved_horz.iv
       [Sink Starvation on Horizontal Ring; IV. Unit: uncore_cha]
  unc_cha_ring_sink_starved_vert.ad
       [Sink Starvation on Vertical Ring; AD. Unit: uncore_cha]
  unc_cha_ring_sink_starved_vert.ak
       [Sink Starvation on Vertical Ring; Acknowledgements to core. Unit:
        uncore_cha]
  unc_cha_ring_sink_starved_vert.bl
       [Sink Starvation on Vertical Ring; Data Responses to core. Unit:
        uncore_cha]
  unc_cha_ring_sink_starved_vert.iv
       [Sink Starvation on Vertical Ring; Snoops of processor's cache. Unit:
        uncore_cha]
  unc_cha_ring_src_thrtl
       [Source Throttle. Unit: uncore_cha]
  unc_cha_rxc_inserts.ipq
       [Ingress (from CMS) Allocations; IPQ. Unit: uncore_cha]
  unc_cha_rxc_inserts.irq
       [Ingress (from CMS) Allocations; IRQ. Unit: uncore_cha]
  unc_cha_rxc_inserts.irq_rej
       [Ingress (from CMS) Allocations; IRQ Rejected. Unit: uncore_cha]
  unc_cha_rxc_inserts.prq
       [Ingress (from CMS) Allocations; PRQ. Unit: uncore_cha]
  unc_cha_rxc_inserts.prq_rej
       [Ingress (from CMS) Allocations; PRQ. Unit: uncore_cha]
  unc_cha_rxc_inserts.rrq
       [Ingress (from CMS) Allocations; RRQ. Unit: uncore_cha]
  unc_cha_rxc_inserts.wbq
       [Ingress (from CMS) Allocations; WBQ. Unit: uncore_cha]
  unc_cha_rxc_ipq0_reject.ad_req_vn0
       [Ingress Probe Queue Rejects; AD REQ on VN0. Unit: uncore_cha]
  unc_cha_rxc_ipq0_reject.ad_rsp_vn0
       [Ingress Probe Queue Rejects; AD RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_ipq0_reject.ak_non_upi
       [Ingress Probe Queue Rejects; Non UPI AK Request. Unit: uncore_cha]
  unc_cha_rxc_ipq0_reject.bl_ncb_vn0
       [Ingress Probe Queue Rejects; BL NCB on VN0. Unit: uncore_cha]
  unc_cha_rxc_ipq0_reject.bl_ncs_vn0
       [Ingress Probe Queue Rejects; BL NCS on VN0. Unit: uncore_cha]
  unc_cha_rxc_ipq0_reject.bl_rsp_vn0
       [Ingress Probe Queue Rejects; BL RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_ipq0_reject.bl_wb_vn0
       [Ingress Probe Queue Rejects; BL WB on VN0. Unit: uncore_cha]
  unc_cha_rxc_ipq0_reject.iv_non_upi
       [Ingress Probe Queue Rejects; Non UPI IV Request. Unit: uncore_cha]
  unc_cha_rxc_ipq1_reject.allow_snp
       [Ingress Probe Queue Rejects; Allow Snoop. Unit: uncore_cha]
  unc_cha_rxc_ipq1_reject.any0
       [Ingress Probe Queue Rejects; ANY0. Unit: uncore_cha]
  unc_cha_rxc_ipq1_reject.ha
       [Ingress Probe Queue Rejects; HA. Unit: uncore_cha]
  unc_cha_rxc_ipq1_reject.llc_or_sf_way
       [Ingress Probe Queue Rejects; Merging these two together to make room
        for ANY_REJECT_*0. Unit: uncore_cha]
  unc_cha_rxc_ipq1_reject.llc_victim
       [Ingress Probe Queue Rejects; LLC Victim. Unit: uncore_cha]
  unc_cha_rxc_ipq1_reject.pa_match
       [Ingress Probe Queue Rejects; PhyAddr Match. Unit: uncore_cha]
  unc_cha_rxc_ipq1_reject.sf_victim
       [Ingress Probe Queue Rejects; SF Victim. Unit: uncore_cha]
  unc_cha_rxc_ipq1_reject.victim
       [Ingress Probe Queue Rejects; Victim. Unit: uncore_cha]
  unc_cha_rxc_irq0_reject.ad_req_vn0
       [Ingress (from CMS) Request Queue Rejects; AD REQ on VN0. Unit:
        uncore_cha]
  unc_cha_rxc_irq0_reject.ad_rsp_vn0
       [Ingress (from CMS) Request Queue Rejects; AD RSP on VN0. Unit:
        uncore_cha]
  unc_cha_rxc_irq0_reject.ak_non_upi
       [Ingress (from CMS) Request Queue Rejects; Non UPI AK Request. Unit:
        uncore_cha]
  unc_cha_rxc_irq0_reject.bl_ncb_vn0
       [Ingress (from CMS) Request Queue Rejects; BL NCB on VN0. Unit:
        uncore_cha]
  unc_cha_rxc_irq0_reject.bl_ncs_vn0
       [Ingress (from CMS) Request Queue Rejects; BL NCS on VN0. Unit:
        uncore_cha]
  unc_cha_rxc_irq0_reject.bl_rsp_vn0
       [Ingress (from CMS) Request Queue Rejects; BL RSP on VN0. Unit:
        uncore_cha]
  unc_cha_rxc_irq0_reject.bl_wb_vn0
       [Ingress (from CMS) Request Queue Rejects; BL WB on VN0. Unit:
        uncore_cha]
  unc_cha_rxc_irq0_reject.iv_non_upi
       [Ingress (from CMS) Request Queue Rejects; Non UPI IV Request. Unit:
        uncore_cha]
  unc_cha_rxc_irq1_reject.allow_snp
       [Ingress (from CMS) Request Queue Rejects; Allow Snoop. Unit:
        uncore_cha]
  unc_cha_rxc_irq1_reject.any0
       [Ingress (from CMS) Request Queue Rejects; ANY0. Unit: uncore_cha]
  unc_cha_rxc_irq1_reject.ha
       [Ingress (from CMS) Request Queue Rejects; HA. Unit: uncore_cha]
  unc_cha_rxc_irq1_reject.llc_or_sf_way
       [Ingress (from CMS) Request Queue Rejects; Merging these two together
        to make room for ANY_REJECT_*0. Unit: uncore_cha]
  unc_cha_rxc_irq1_reject.llc_victim
       [Ingress (from CMS) Request Queue Rejects; LLC Victim. Unit: uncore_cha]
  unc_cha_rxc_irq1_reject.pa_match
       [Ingress (from CMS) Request Queue Rejects; PhyAddr Match. Unit:
        uncore_cha]
  unc_cha_rxc_irq1_reject.sf_victim
       [Ingress (from CMS) Request Queue Rejects; SF Victim. Unit: uncore_cha]
  unc_cha_rxc_irq1_reject.victim
       [Ingress (from CMS) Request Queue Rejects; Victim. Unit: uncore_cha]
  unc_cha_rxc_ismq0_reject.ad_req_vn0
       [ISMQ Rejects; AD REQ on VN0. Unit: uncore_cha]
  unc_cha_rxc_ismq0_reject.ad_rsp_vn0
       [ISMQ Rejects; AD RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_ismq0_reject.ak_non_upi
       [ISMQ Rejects; Non UPI AK Request. Unit: uncore_cha]
  unc_cha_rxc_ismq0_reject.bl_ncb_vn0
       [ISMQ Rejects; BL NCB on VN0. Unit: uncore_cha]
  unc_cha_rxc_ismq0_reject.bl_ncs_vn0
       [ISMQ Rejects; BL NCS on VN0. Unit: uncore_cha]
  unc_cha_rxc_ismq0_reject.bl_rsp_vn0
       [ISMQ Rejects; BL RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_ismq0_reject.bl_wb_vn0
       [ISMQ Rejects; BL WB on VN0. Unit: uncore_cha]
  unc_cha_rxc_ismq0_reject.iv_non_upi
       [ISMQ Rejects; Non UPI IV Request. Unit: uncore_cha]
  unc_cha_rxc_ismq0_retry.ad_req_vn0
       [ISMQ Retries; AD REQ on VN0. Unit: uncore_cha]
  unc_cha_rxc_ismq0_retry.ad_rsp_vn0
       [ISMQ Retries; AD RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_ismq0_retry.ak_non_upi
       [ISMQ Retries; Non UPI AK Request. Unit: uncore_cha]
  unc_cha_rxc_ismq0_retry.bl_ncb_vn0
       [ISMQ Retries; BL NCB on VN0. Unit: uncore_cha]
  unc_cha_rxc_ismq0_retry.bl_ncs_vn0
       [ISMQ Retries; BL NCS on VN0. Unit: uncore_cha]
  unc_cha_rxc_ismq0_retry.bl_rsp_vn0
       [ISMQ Retries; BL RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_ismq0_retry.bl_wb_vn0
       [ISMQ Retries; BL WB on VN0. Unit: uncore_cha]
  unc_cha_rxc_ismq0_retry.iv_non_upi
       [ISMQ Retries; Non UPI IV Request. Unit: uncore_cha]
  unc_cha_rxc_ismq1_reject.any0
       [ISMQ Rejects; ANY0. Unit: uncore_cha]
  unc_cha_rxc_ismq1_reject.ha
       [ISMQ Rejects; HA. Unit: uncore_cha]
  unc_cha_rxc_ismq1_retry.any0
       [ISMQ Retries; ANY0. Unit: uncore_cha]
  unc_cha_rxc_ismq1_retry.ha
       [ISMQ Retries; HA. Unit: uncore_cha]
  unc_cha_rxc_occupancy.ipq
       [Ingress (from CMS) Occupancy; IPQ. Unit: uncore_cha]
  unc_cha_rxc_occupancy.irq
       [Ingress (from CMS) Occupancy; IRQ. Unit: uncore_cha]
  unc_cha_rxc_occupancy.rrq
       [Ingress (from CMS) Occupancy; RRQ. Unit: uncore_cha]
  unc_cha_rxc_occupancy.wbq
       [Ingress (from CMS) Occupancy; WBQ. Unit: uncore_cha]
  unc_cha_rxc_other0_retry.ad_req_vn0
       [Other Retries; AD REQ on VN0. Unit: uncore_cha]
  unc_cha_rxc_other0_retry.ad_rsp_vn0
       [Other Retries; AD RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_other0_retry.ak_non_upi
       [Other Retries; Non UPI AK Request. Unit: uncore_cha]
  unc_cha_rxc_other0_retry.bl_ncb_vn0
       [Other Retries; BL NCB on VN0. Unit: uncore_cha]
  unc_cha_rxc_other0_retry.bl_ncs_vn0
       [Other Retries; BL NCS on VN0. Unit: uncore_cha]
  unc_cha_rxc_other0_retry.bl_rsp_vn0
       [Other Retries; BL RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_other0_retry.bl_wb_vn0
       [Other Retries; BL WB on VN0. Unit: uncore_cha]
  unc_cha_rxc_other0_retry.iv_non_upi
       [Other Retries; Non UPI IV Request. Unit: uncore_cha]
  unc_cha_rxc_other1_retry.allow_snp
       [Other Retries; Allow Snoop. Unit: uncore_cha]
  unc_cha_rxc_other1_retry.any0
       [Other Retries; ANY0. Unit: uncore_cha]
  unc_cha_rxc_other1_retry.ha
       [Other Retries; HA. Unit: uncore_cha]
  unc_cha_rxc_other1_retry.llc_or_sf_way
       [Other Retries; Merging these two together to make room for
        ANY_REJECT_*0. Unit: uncore_cha]
  unc_cha_rxc_other1_retry.llc_victim
       [Other Retries; LLC Victim. Unit: uncore_cha]
  unc_cha_rxc_other1_retry.pa_match
       [Other Retries; PhyAddr Match. Unit: uncore_cha]
  unc_cha_rxc_other1_retry.sf_victim
       [Other Retries; SF Victim. Unit: uncore_cha]
  unc_cha_rxc_other1_retry.victim
       [Other Retries; Victim. Unit: uncore_cha]
  unc_cha_rxc_prq0_reject.ad_req_vn0
       [Ingress (from CMS) Request Queue Rejects; AD REQ on VN0. Unit:
        uncore_cha]
  unc_cha_rxc_prq0_reject.ad_rsp_vn0
       [Ingress (from CMS) Request Queue Rejects; AD RSP on VN0. Unit:
        uncore_cha]
  unc_cha_rxc_prq0_reject.ak_non_upi
       [Ingress (from CMS) Request Queue Rejects; Non UPI AK Request. Unit:
        uncore_cha]
  unc_cha_rxc_prq0_reject.bl_ncb_vn0
       [Ingress (from CMS) Request Queue Rejects; BL NCB on VN0. Unit:
        uncore_cha]
  unc_cha_rxc_prq0_reject.bl_ncs_vn0
       [Ingress (from CMS) Request Queue Rejects; BL NCS on VN0. Unit:
        uncore_cha]
  unc_cha_rxc_prq0_reject.bl_rsp_vn0
       [Ingress (from CMS) Request Queue Rejects; BL RSP on VN0. Unit:
        uncore_cha]
  unc_cha_rxc_prq0_reject.bl_wb_vn0
       [Ingress (from CMS) Request Queue Rejects; BL WB on VN0. Unit:
        uncore_cha]
  unc_cha_rxc_prq0_reject.iv_non_upi
       [Ingress (from CMS) Request Queue Rejects; Non UPI IV Request. Unit:
        uncore_cha]
  unc_cha_rxc_prq1_reject.allow_snp
       [Ingress (from CMS) Request Queue Rejects; Allow Snoop. Unit:
        uncore_cha]
  unc_cha_rxc_prq1_reject.any0
       [Ingress (from CMS) Request Queue Rejects; ANY0. Unit: uncore_cha]
  unc_cha_rxc_prq1_reject.ha
       [Ingress (from CMS) Request Queue Rejects; HA. Unit: uncore_cha]
  unc_cha_rxc_prq1_reject.llc_or_sf_way
       [Ingress (from CMS) Request Queue Rejects; LLC OR SF Way. Unit:
        uncore_cha]
  unc_cha_rxc_prq1_reject.llc_victim
       [Ingress (from CMS) Request Queue Rejects; LLC Victim. Unit: uncore_cha]
  unc_cha_rxc_prq1_reject.pa_match
       [Ingress (from CMS) Request Queue Rejects; PhyAddr Match. Unit:
        uncore_cha]
  unc_cha_rxc_prq1_reject.sf_victim
       [Ingress (from CMS) Request Queue Rejects; SF Victim. Unit: uncore_cha]
  unc_cha_rxc_prq1_reject.victim
       [Ingress (from CMS) Request Queue Rejects; Victim. Unit: uncore_cha]
  unc_cha_rxc_req_q0_retry.ad_req_vn0
       [Request Queue Retries; AD REQ on VN0. Unit: uncore_cha]
  unc_cha_rxc_req_q0_retry.ad_rsp_vn0
       [Request Queue Retries; AD RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_req_q0_retry.ak_non_upi
       [Request Queue Retries; Non UPI AK Request. Unit: uncore_cha]
  unc_cha_rxc_req_q0_retry.bl_ncb_vn0
       [Request Queue Retries; BL NCB on VN0. Unit: uncore_cha]
  unc_cha_rxc_req_q0_retry.bl_ncs_vn0
       [Request Queue Retries; BL NCS on VN0. Unit: uncore_cha]
  unc_cha_rxc_req_q0_retry.bl_rsp_vn0
       [Request Queue Retries; BL RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_req_q0_retry.bl_wb_vn0
       [Request Queue Retries; BL WB on VN0. Unit: uncore_cha]
  unc_cha_rxc_req_q0_retry.iv_non_upi
       [Request Queue Retries; Non UPI IV Request. Unit: uncore_cha]
  unc_cha_rxc_req_q1_retry.allow_snp
       [Request Queue Retries; Allow Snoop. Unit: uncore_cha]
  unc_cha_rxc_req_q1_retry.any0
       [Request Queue Retries; ANY0. Unit: uncore_cha]
  unc_cha_rxc_req_q1_retry.ha
       [Request Queue Retries; HA. Unit: uncore_cha]
  unc_cha_rxc_req_q1_retry.llc_or_sf_way
       [Request Queue Retries; Merging these two together to make room for
        ANY_REJECT_*0. Unit: uncore_cha]
  unc_cha_rxc_req_q1_retry.llc_victim
       [Request Queue Retries; LLC Victim. Unit: uncore_cha]
  unc_cha_rxc_req_q1_retry.pa_match
       [Request Queue Retries; PhyAddr Match. Unit: uncore_cha]
  unc_cha_rxc_req_q1_retry.sf_victim
       [Request Queue Retries; SF Victim. Unit: uncore_cha]
  unc_cha_rxc_req_q1_retry.victim
       [Request Queue Retries; Victim. Unit: uncore_cha]
  unc_cha_rxc_rrq0_reject.ad_req_vn0
       [RRQ Rejects; AD REQ on VN0. Unit: uncore_cha]
  unc_cha_rxc_rrq0_reject.ad_rsp_vn0
       [RRQ Rejects; AD RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_rrq0_reject.ak_non_upi
       [RRQ Rejects; Non UPI AK Request. Unit: uncore_cha]
  unc_cha_rxc_rrq0_reject.bl_ncb_vn0
       [RRQ Rejects; BL NCB on VN0. Unit: uncore_cha]
  unc_cha_rxc_rrq0_reject.bl_ncs_vn0
       [RRQ Rejects; BL NCS on VN0. Unit: uncore_cha]
  unc_cha_rxc_rrq0_reject.bl_rsp_vn0
       [RRQ Rejects; BL RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_rrq0_reject.bl_wb_vn0
       [RRQ Rejects; BL WB on VN0. Unit: uncore_cha]
  unc_cha_rxc_rrq0_reject.iv_non_upi
       [RRQ Rejects; Non UPI IV Request. Unit: uncore_cha]
  unc_cha_rxc_rrq1_reject.allow_snp
       [RRQ Rejects; Allow Snoop. Unit: uncore_cha]
  unc_cha_rxc_rrq1_reject.any0
       [RRQ Rejects; ANY0. Unit: uncore_cha]
  unc_cha_rxc_rrq1_reject.ha
       [RRQ Rejects; HA. Unit: uncore_cha]
  unc_cha_rxc_rrq1_reject.llc_or_sf_way
       [RRQ Rejects; Merging these two together to make room for
        ANY_REJECT_*0. Unit: uncore_cha]
  unc_cha_rxc_rrq1_reject.llc_victim
       [RRQ Rejects; LLC Victim. Unit: uncore_cha]
  unc_cha_rxc_rrq1_reject.pa_match
       [RRQ Rejects; PhyAddr Match. Unit: uncore_cha]
  unc_cha_rxc_rrq1_reject.sf_victim
       [RRQ Rejects; SF Victim. Unit: uncore_cha]
  unc_cha_rxc_rrq1_reject.victim
       [RRQ Rejects; Victim. Unit: uncore_cha]
  unc_cha_rxc_wbq0_reject.ad_req_vn0
       [WBQ Rejects; AD REQ on VN0. Unit: uncore_cha]
  unc_cha_rxc_wbq0_reject.ad_rsp_vn0
       [WBQ Rejects; AD RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_wbq0_reject.ak_non_upi
       [WBQ Rejects; Non UPI AK Request. Unit: uncore_cha]
  unc_cha_rxc_wbq0_reject.bl_ncb_vn0
       [WBQ Rejects; BL NCB on VN0. Unit: uncore_cha]
  unc_cha_rxc_wbq0_reject.bl_ncs_vn0
       [WBQ Rejects; BL NCS on VN0. Unit: uncore_cha]
  unc_cha_rxc_wbq0_reject.bl_rsp_vn0
       [WBQ Rejects; BL RSP on VN0. Unit: uncore_cha]
  unc_cha_rxc_wbq0_reject.bl_wb_vn0
       [WBQ Rejects; BL WB on VN0. Unit: uncore_cha]
  unc_cha_rxc_wbq0_reject.iv_non_upi
       [WBQ Rejects; Non UPI IV Request. Unit: uncore_cha]
  unc_cha_rxc_wbq1_reject.allow_snp
       [WBQ Rejects; Allow Snoop. Unit: uncore_cha]
  unc_cha_rxc_wbq1_reject.any0
       [WBQ Rejects; ANY0. Unit: uncore_cha]
  unc_cha_rxc_wbq1_reject.ha
       [WBQ Rejects; HA. Unit: uncore_cha]
  unc_cha_rxc_wbq1_reject.llc_or_sf_way
       [WBQ Rejects; Merging these two together to make room for
        ANY_REJECT_*0. Unit: uncore_cha]
  unc_cha_rxc_wbq1_reject.llc_victim
       [WBQ Rejects; LLC Victim. Unit: uncore_cha]
  unc_cha_rxc_wbq1_reject.pa_match
       [WBQ Rejects; PhyAddr Match. Unit: uncore_cha]
  unc_cha_rxc_wbq1_reject.sf_victim
       [WBQ Rejects; SF Victim. Unit: uncore_cha]
  unc_cha_rxc_wbq1_reject.victim
       [WBQ Rejects; Victim. Unit: uncore_cha]
  unc_cha_rxr_busy_starved.ad_bnc
       [Transgress Injection Starvation; AD - Bounce. Unit: uncore_cha]
  unc_cha_rxr_busy_starved.ad_crd
       [Transgress Injection Starvation; AD - Credit. Unit: uncore_cha]
  unc_cha_rxr_busy_starved.bl_bnc
       [Transgress Injection Starvation; BL - Bounce. Unit: uncore_cha]
  unc_cha_rxr_busy_starved.bl_crd
       [Transgress Injection Starvation; BL - Credit. Unit: uncore_cha]
  unc_cha_rxr_bypass.ad_bnc
       [Transgress Ingress Bypass; AD - Bounce. Unit: uncore_cha]
  unc_cha_rxr_bypass.ad_crd
       [Transgress Ingress Bypass; AD - Credit. Unit: uncore_cha]
  unc_cha_rxr_bypass.ak_bnc
       [Transgress Ingress Bypass; AK - Bounce. Unit: uncore_cha]
  unc_cha_rxr_bypass.bl_bnc
       [Transgress Ingress Bypass; BL - Bounce. Unit: uncore_cha]
  unc_cha_rxr_bypass.bl_crd
       [Transgress Ingress Bypass; BL - Credit. Unit: uncore_cha]
  unc_cha_rxr_bypass.iv_bnc
       [Transgress Ingress Bypass; IV - Bounce. Unit: uncore_cha]
  unc_cha_rxr_crd_starved.ad_bnc
       [Transgress Injection Starvation; AD - Bounce. Unit: uncore_cha]
  unc_cha_rxr_crd_starved.ad_crd
       [Transgress Injection Starvation; AD - Credit. Unit: uncore_cha]
  unc_cha_rxr_crd_starved.ak_bnc
       [Transgress Injection Starvation; AK - Bounce. Unit: uncore_cha]
  unc_cha_rxr_crd_starved.bl_bnc
       [Transgress Injection Starvation; BL - Bounce. Unit: uncore_cha]
  unc_cha_rxr_crd_starved.bl_crd
       [Transgress Injection Starvation; BL - Credit. Unit: uncore_cha]
  unc_cha_rxr_crd_starved.ifv
       [Transgress Injection Starvation; IFV - Credit. Unit: uncore_cha]
  unc_cha_rxr_crd_starved.iv_bnc
       [Transgress Injection Starvation; IV - Bounce. Unit: uncore_cha]
  unc_cha_rxr_inserts.ad_bnc
       [Transgress Ingress Allocations; AD - Bounce. Unit: uncore_cha]
  unc_cha_rxr_inserts.ad_crd
       [Transgress Ingress Allocations; AD - Credit. Unit: uncore_cha]
  unc_cha_rxr_inserts.ak_bnc
       [Transgress Ingress Allocations; AK - Bounce. Unit: uncore_cha]
  unc_cha_rxr_inserts.bl_bnc
       [Transgress Ingress Allocations; BL - Bounce. Unit: uncore_cha]
  unc_cha_rxr_inserts.bl_crd
       [Transgress Ingress Allocations; BL - Credit. Unit: uncore_cha]
  unc_cha_rxr_inserts.iv_bnc
       [Transgress Ingress Allocations; IV - Bounce. Unit: uncore_cha]
  unc_cha_rxr_occupancy.ad_bnc
       [Transgress Ingress Occupancy; AD - Bounce. Unit: uncore_cha]
  unc_cha_rxr_occupancy.ad_crd
       [Transgress Ingress Occupancy; AD - Credit. Unit: uncore_cha]
  unc_cha_rxr_occupancy.ak_bnc
       [Transgress Ingress Occupancy; AK - Bounce. Unit: uncore_cha]
  unc_cha_rxr_occupancy.bl_bnc
       [Transgress Ingress Occupancy; BL - Bounce. Unit: uncore_cha]
  unc_cha_rxr_occupancy.bl_crd
       [Transgress Ingress Occupancy; BL - Credit. Unit: uncore_cha]
  unc_cha_rxr_occupancy.iv_bnc
       [Transgress Ingress Occupancy; IV - Bounce. Unit: uncore_cha]
  unc_cha_sf_eviction.e_state
       [Snoop filter capacity evictions for E-state entries. Unit: uncore_cha]
  unc_cha_sf_eviction.m_state
       [Snoop filter capacity evictions for M-state entries. Unit: uncore_cha]
  unc_cha_sf_eviction.s_state
       [Snoop filter capacity evictions for S-state entries. Unit: uncore_cha]
  unc_cha_snoop_resp.rsp_fwd_wb
       [Rsp*Fwd*WB Snoop Responses Received. Unit: uncore_cha]
  unc_cha_snoop_resp.rsp_wbwb
       [Rsp*WB Snoop Responses Received. Unit: uncore_cha]
  unc_cha_snoop_resp.rspcnflcts
       [RspCnflct* Snoop Responses Received. Unit: uncore_cha]
  unc_cha_snoop_resp.rspfwd
       [Snoop Responses Received; RspFwd. Unit: uncore_cha]
  unc_cha_snoop_resp.rspi
       [RspI Snoop Responses Received. Unit: uncore_cha]
  unc_cha_snoop_resp.rspifwd
       [RspIFwd Snoop Responses Received. Unit: uncore_cha]
  unc_cha_snoop_resp.rsps
       [Snoop Responses Received : RspS. Unit: uncore_cha]
  unc_cha_snoop_resp.rspsfwd
       [RspSFwd Snoop Responses Received. Unit: uncore_cha]
  unc_cha_snoop_resp_local.rsp_fwd_wb
       [Snoop Responses Received Local; Rsp*FWD*WB. Unit: uncore_cha]
  unc_cha_snoop_resp_local.rsp_wb
       [Snoop Responses Received Local; Rsp*WB. Unit: uncore_cha]
  unc_cha_snoop_resp_local.rspcnflct
       [Snoop Responses Received Local; RspCnflct. Unit: uncore_cha]
  unc_cha_snoop_resp_local.rspfwd
       [Snoop Responses Received Local; RspFwd. Unit: uncore_cha]
  unc_cha_snoop_resp_local.rspi
       [Snoop Responses Received Local; RspI. Unit: uncore_cha]
  unc_cha_snoop_resp_local.rspifwd
       [Snoop Responses Received Local; RspIFwd. Unit: uncore_cha]
  unc_cha_snoop_resp_local.rsps
       [Snoop Responses Received Local; RspS. Unit: uncore_cha]
  unc_cha_snoop_resp_local.rspsfwd
       [Snoop Responses Received Local; RspSFwd. Unit: uncore_cha]
  unc_cha_snoops_sent.all
       [Snoops Sent; All. Unit: uncore_cha]
  unc_cha_snoops_sent.bcst_local
       [Snoops Sent; Broadcast snoop for Local Requests. Unit: uncore_cha]
  unc_cha_snoops_sent.bcst_remote
       [Snoops Sent; Broadcast snoops for Remote Requests. Unit: uncore_cha]
  unc_cha_snoops_sent.direct_local
       [Snoops Sent; Directed snoops for Local Requests. Unit: uncore_cha]
  unc_cha_snoops_sent.direct_remote
       [Snoops Sent; Directed snoops for Remote Requests. Unit: uncore_cha]
  unc_cha_snoops_sent.local
       [Snoops Sent; Broadcast or directed Snoops sent for Local Requests.
        Unit: uncore_cha]
  unc_cha_snoops_sent.remote
       [Snoops Sent; Broadcast or directed Snoops sent for Remote Requests.
        Unit: uncore_cha]
  unc_cha_stall_no_txr_horz_crd_ad_ag0.tgr0
       [Stall on No AD Agent0 Transgress Credits; For Transgress 0. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_ad_ag0.tgr1
       [Stall on No AD Agent0 Transgress Credits; For Transgress 1. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_ad_ag0.tgr2
       [Stall on No AD Agent0 Transgress Credits; For Transgress 2. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_ad_ag0.tgr3
       [Stall on No AD Agent0 Transgress Credits; For Transgress 3. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_ad_ag0.tgr4
       [Stall on No AD Agent0 Transgress Credits; For Transgress 4. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_ad_ag0.tgr5
       [Stall on No AD Agent0 Transgress Credits; For Transgress 5. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_ad_ag1.tgr0
       [Stall on No AD Agent1 Transgress Credits; For Transgress 0. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_ad_ag1.tgr1
       [Stall on No AD Agent1 Transgress Credits; For Transgress 1. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_ad_ag1.tgr2
       [Stall on No AD Agent1 Transgress Credits; For Transgress 2. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_ad_ag1.tgr3
       [Stall on No AD Agent1 Transgress Credits; For Transgress 3. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_ad_ag1.tgr4
       [Stall on No AD Agent1 Transgress Credits; For Transgress 4. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_ad_ag1.tgr5
       [Stall on No AD Agent1 Transgress Credits; For Transgress 5. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_bl_ag0.tgr0
       [Stall on No BL Agent0 Transgress Credits; For Transgress 0. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_bl_ag0.tgr1
       [Stall on No BL Agent0 Transgress Credits; For Transgress 1. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_bl_ag0.tgr2
       [Stall on No BL Agent0 Transgress Credits; For Transgress 2. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_bl_ag0.tgr3
       [Stall on No BL Agent0 Transgress Credits; For Transgress 3. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_bl_ag0.tgr4
       [Stall on No BL Agent0 Transgress Credits; For Transgress 4. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_bl_ag0.tgr5
       [Stall on No BL Agent0 Transgress Credits; For Transgress 5. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_bl_ag1.tgr0
       [Stall on No BL Agent1 Transgress Credits; For Transgress 0. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_bl_ag1.tgr1
       [Stall on No BL Agent1 Transgress Credits; For Transgress 1. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_bl_ag1.tgr2
       [Stall on No BL Agent1 Transgress Credits; For Transgress 2. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_bl_ag1.tgr3
       [Stall on No BL Agent1 Transgress Credits; For Transgress 3. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_bl_ag1.tgr4
       [Stall on No BL Agent1 Transgress Credits; For Transgress 4. Unit:
        uncore_cha]
  unc_cha_stall_no_txr_horz_crd_bl_ag1.tgr5
       [Stall on No BL Agent1 Transgress Credits; For Transgress 5. Unit:
        uncore_cha]
  unc_cha_tor_inserts.all_hit
       [TOR Inserts; Hits from Local. Unit: uncore_cha]
  unc_cha_tor_inserts.all_io_ia
       [TOR Inserts; All from Local iA and IO. Unit: uncore_cha]
  unc_cha_tor_inserts.all_miss
       [TOR Inserts; Misses from Local. Unit: uncore_cha]
  unc_cha_tor_inserts.evict
       [TOR Inserts; SF/LLC Evictions. Unit: uncore_cha]
  unc_cha_tor_inserts.hit
       [TOR Inserts; Hit (Not a Miss). Unit: uncore_cha]
  unc_cha_tor_inserts.ia
       [TOR Inserts; All from Local iA. Unit: uncore_cha]
  unc_cha_tor_inserts.ia_hit
       [TOR Inserts; Hits from Local iA. Unit: uncore_cha]
  unc_cha_tor_inserts.ia_hit_crd
       [TOR Inserts : CRds issued by iA Cores that Hit the LLC. Unit:
        uncore_cha]
  unc_cha_tor_inserts.ia_hit_drd
       [TOR Inserts : DRds issued by iA Cores that Hit the LLC. Unit:
        uncore_cha]
  unc_cha_tor_inserts.ia_hit_llcprefcrd
       [UNC_CHA_TOR_INSERTS.IA_HIT_LlcPrefCRD. Unit: uncore_cha]
  unc_cha_tor_inserts.ia_hit_llcprefdrd
       [UNC_CHA_TOR_INSERTS.IA_HIT_LlcPrefDRD. Unit: uncore_cha]
  unc_cha_tor_inserts.ia_hit_llcprefrfo
       [TOR Inserts : LLCPrefRFO issued by iA Cores that hit the LLC. Unit:
        uncore_cha]
  unc_cha_tor_inserts.ia_hit_rfo
       [TOR Inserts : RFOs issued by iA Cores that Hit the LLC. Unit:
        uncore_cha]
  unc_cha_tor_inserts.ia_miss
       [TOR Inserts : All requests from iA Cores that Missed the LLC. Unit:
        uncore_cha]
  unc_cha_tor_inserts.ia_miss_crd
       [TOR Inserts : CRds issued by iA Cores that Missed the LLC. Unit:
        uncore_cha]
  unc_cha_tor_inserts.ia_miss_drd
       [TOR Inserts : DRds issued by iA Cores that Missed the LLC. Unit:
        uncore_cha]
  unc_cha_tor_inserts.ia_miss_llcprefcrd
       [UNC_CHA_TOR_INSERTS.IA_MISS_LlcPrefCRD. Unit: uncore_cha]
  unc_cha_tor_inserts.ia_miss_llcprefdrd
       [UNC_CHA_TOR_INSERTS.IA_MISS_LlcPrefDRD. Unit: uncore_cha]
  unc_cha_tor_inserts.ia_miss_llcprefrfo
       [TOR Inserts : LLCPrefRFO issued by iA Cores that missed the LLC. Unit:
        uncore_cha]
  unc_cha_tor_inserts.ia_miss_rfo
       [TOR Inserts : RFOs issued by iA Cores that Missed the LLC. Unit:
        uncore_cha]
  unc_cha_tor_inserts.io
       [TOR Inserts; All from Local IO. Unit: uncore_cha]
  unc_cha_tor_inserts.io_hit
       [TOR Inserts; Hits from Local IO. Unit: uncore_cha]
  unc_cha_tor_inserts.io_miss
       [TOR Inserts; Misses from Local IO. Unit: uncore_cha]
  unc_cha_tor_inserts.io_miss_itom
       [TOR Inserts; ItoM misses from Local IO. Unit: uncore_cha]
  unc_cha_tor_inserts.io_miss_rdcur
       [TOR Inserts; RdCur misses from Local IO. Unit: uncore_cha]
  unc_cha_tor_inserts.io_miss_rfo
       [TOR Inserts; RFO misses from Local IO. Unit: uncore_cha]
  unc_cha_tor_inserts.ipq
       [TOR Inserts; IPQ. Unit: uncore_cha]
  unc_cha_tor_inserts.irq
       [TOR Inserts; IRQ. Unit: uncore_cha]
  unc_cha_tor_inserts.miss
       [TOR Inserts; Miss. Unit: uncore_cha]
  unc_cha_tor_inserts.prq
       [TOR Inserts; PRQ. Unit: uncore_cha]
  unc_cha_tor_occupancy.all_from_loc
       [TOR Occupancy; All from Local. Unit: uncore_cha]
  unc_cha_tor_occupancy.all_hit
       [TOR Occupancy; Hits from Local. Unit: uncore_cha]
  unc_cha_tor_occupancy.all_miss
       [TOR Occupancy; Misses from Local. Unit: uncore_cha]
  unc_cha_tor_occupancy.evict
       [TOR Occupancy; SF/LLC Evictions. Unit: uncore_cha]
  unc_cha_tor_occupancy.hit
       [TOR Occupancy; Hit (Not a Miss). Unit: uncore_cha]
  unc_cha_tor_occupancy.ia
       [TOR Occupancy; All from Local iA. Unit: uncore_cha]
  unc_cha_tor_occupancy.ia_hit
       [TOR Occupancy; Hits from Local iA. Unit: uncore_cha]
  unc_cha_tor_occupancy.ia_hit_crd
       [TOR Occupancy : CRds issued by iA Cores that Hit the LLC. Unit:
        uncore_cha]
  unc_cha_tor_occupancy.ia_hit_drd
       [TOR Occupancy : DRds issued by iA Cores that Hit the LLC. Unit:
        uncore_cha]
  unc_cha_tor_occupancy.ia_hit_llcprefcrd
       [UNC_CHA_TOR_OCCUPANCY.IA_HIT_LlcPrefCRD. Unit: uncore_cha]
  unc_cha_tor_occupancy.ia_hit_llcprefdrd
       [UNC_CHA_TOR_OCCUPANCY.IA_HIT_LlcPrefDRD. Unit: uncore_cha]
  unc_cha_tor_occupancy.ia_hit_llcprefrfo
       [TOR Occupancy : LLCPrefRFO issued by iA Cores that hit the LLC. Unit:
        uncore_cha]
  unc_cha_tor_occupancy.ia_hit_rfo
       [TOR Occupancy : RFOs issued by iA Cores that Hit the LLC. Unit:
        uncore_cha]
  unc_cha_tor_occupancy.ia_miss
       [TOR Occupancy; Misses from Local iA. Unit: uncore_cha]
  unc_cha_tor_occupancy.ia_miss_crd
       [TOR Occupancy : CRds issued by iA Cores that Missed the LLC. Unit:
        uncore_cha]
  unc_cha_tor_occupancy.ia_miss_drd
       [TOR Occupancy : DRds issued by iA Cores that Missed the LLC. Unit:
        uncore_cha]
  unc_cha_tor_occupancy.ia_miss_llcprefcrd
       [UNC_CHA_TOR_OCCUPANCY.IA_MISS_LlcPrefCRD. Unit: uncore_cha]
  unc_cha_tor_occupancy.ia_miss_llcprefdrd
       [UNC_CHA_TOR_OCCUPANCY.IA_MISS_LlcPrefDRD. Unit: uncore_cha]
  unc_cha_tor_occupancy.ia_miss_llcprefrfo
       [TOR Occupancy : LLCPrefRFO issued by iA Cores that missed the LLC.
        Unit: uncore_cha]
  unc_cha_tor_occupancy.ia_miss_rfo
       [TOR Occupancy : RFOs issued by iA Cores that Missed the LLC. Unit:
        uncore_cha]
  unc_cha_tor_occupancy.io
       [TOR Occupancy; All from Local IO. Unit: uncore_cha]
  unc_cha_tor_occupancy.io_hit
       [TOR Occupancy; Hits from Local IO. Unit: uncore_cha]
  unc_cha_tor_occupancy.io_miss
       [TOR Occupancy; Misses from Local IO. Unit: uncore_cha]
  unc_cha_tor_occupancy.io_miss_itom
       [TOR Occupancy; ITOM Misses from Local IO. Unit: uncore_cha]
  unc_cha_tor_occupancy.io_miss_rdcur
       [TOR Occupancy; RDCUR misses from Local IO. Unit: uncore_cha]
  unc_cha_tor_occupancy.io_miss_rfo
       [TOR Occupancy; RFO misses from Local IO. Unit: uncore_cha]
  unc_cha_tor_occupancy.ipq
       [TOR Occupancy; IPQ. Unit: uncore_cha]
  unc_cha_tor_occupancy.irq
       [TOR Occupancy; IRQ. Unit: uncore_cha]
  unc_cha_tor_occupancy.miss
       [TOR Occupancy; Miss. Unit: uncore_cha]
  unc_cha_tor_occupancy.prq
       [TOR Occupancy; PRQ. Unit: uncore_cha]
  unc_cha_txr_horz_ads_used.ad_bnc
       [CMS Horizontal ADS Used; AD - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_ads_used.ad_crd
       [CMS Horizontal ADS Used; AD - Credit. Unit: uncore_cha]
  unc_cha_txr_horz_ads_used.ak_bnc
       [CMS Horizontal ADS Used; AK - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_ads_used.bl_bnc
       [CMS Horizontal ADS Used; BL - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_ads_used.bl_crd
       [CMS Horizontal ADS Used; BL - Credit. Unit: uncore_cha]
  unc_cha_txr_horz_bypass.ad_bnc
       [CMS Horizontal Bypass Used; AD - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_bypass.ad_crd
       [CMS Horizontal Bypass Used; AD - Credit. Unit: uncore_cha]
  unc_cha_txr_horz_bypass.ak_bnc
       [CMS Horizontal Bypass Used; AK - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_bypass.bl_bnc
       [CMS Horizontal Bypass Used; BL - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_bypass.bl_crd
       [CMS Horizontal Bypass Used; BL - Credit. Unit: uncore_cha]
  unc_cha_txr_horz_bypass.iv_bnc
       [CMS Horizontal Bypass Used; IV - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_cycles_full.ad_bnc
       [Cycles CMS Horizontal Egress Queue is Full; AD - Bounce. Unit:
        uncore_cha]
  unc_cha_txr_horz_cycles_full.ad_crd
       [Cycles CMS Horizontal Egress Queue is Full; AD - Credit. Unit:
        uncore_cha]
  unc_cha_txr_horz_cycles_full.ak_bnc
       [Cycles CMS Horizontal Egress Queue is Full; AK - Bounce. Unit:
        uncore_cha]
  unc_cha_txr_horz_cycles_full.bl_bnc
       [Cycles CMS Horizontal Egress Queue is Full; BL - Bounce. Unit:
        uncore_cha]
  unc_cha_txr_horz_cycles_full.bl_crd
       [Cycles CMS Horizontal Egress Queue is Full; BL - Credit. Unit:
        uncore_cha]
  unc_cha_txr_horz_cycles_full.iv_bnc
       [Cycles CMS Horizontal Egress Queue is Full; IV - Bounce. Unit:
        uncore_cha]
  unc_cha_txr_horz_cycles_ne.ad_bnc
       [Cycles CMS Horizontal Egress Queue is Not Empty; AD - Bounce. Unit:
        uncore_cha]
  unc_cha_txr_horz_cycles_ne.ad_crd
       [Cycles CMS Horizontal Egress Queue is Not Empty; AD - Credit. Unit:
        uncore_cha]
  unc_cha_txr_horz_cycles_ne.ak_bnc
       [Cycles CMS Horizontal Egress Queue is Not Empty; AK - Bounce. Unit:
        uncore_cha]
  unc_cha_txr_horz_cycles_ne.bl_bnc
       [Cycles CMS Horizontal Egress Queue is Not Empty; BL - Bounce. Unit:
        uncore_cha]
  unc_cha_txr_horz_cycles_ne.bl_crd
       [Cycles CMS Horizontal Egress Queue is Not Empty; BL - Credit. Unit:
        uncore_cha]
  unc_cha_txr_horz_cycles_ne.iv_bnc
       [Cycles CMS Horizontal Egress Queue is Not Empty; IV - Bounce. Unit:
        uncore_cha]
  unc_cha_txr_horz_inserts.ad_bnc
       [CMS Horizontal Egress Inserts; AD - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_inserts.ad_crd
       [CMS Horizontal Egress Inserts; AD - Credit. Unit: uncore_cha]
  unc_cha_txr_horz_inserts.ak_bnc
       [CMS Horizontal Egress Inserts; AK - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_inserts.bl_bnc
       [CMS Horizontal Egress Inserts; BL - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_inserts.bl_crd
       [CMS Horizontal Egress Inserts; BL - Credit. Unit: uncore_cha]
  unc_cha_txr_horz_inserts.iv_bnc
       [CMS Horizontal Egress Inserts; IV - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_nack.ad_bnc
       [CMS Horizontal Egress NACKs; AD - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_nack.ad_crd
       [CMS Horizontal Egress NACKs; AD - Credit. Unit: uncore_cha]
  unc_cha_txr_horz_nack.ak_bnc
       [CMS Horizontal Egress NACKs; AK - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_nack.bl_bnc
       [CMS Horizontal Egress NACKs; BL - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_nack.bl_crd
       [CMS Horizontal Egress NACKs; BL - Credit. Unit: uncore_cha]
  unc_cha_txr_horz_nack.iv_bnc
       [CMS Horizontal Egress NACKs; IV - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_occupancy.ad_bnc
       [CMS Horizontal Egress Occupancy; AD - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_occupancy.ad_crd
       [CMS Horizontal Egress Occupancy; AD - Credit. Unit: uncore_cha]
  unc_cha_txr_horz_occupancy.ak_bnc
       [CMS Horizontal Egress Occupancy; AK - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_occupancy.bl_bnc
       [CMS Horizontal Egress Occupancy; BL - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_occupancy.bl_crd
       [CMS Horizontal Egress Occupancy; BL - Credit. Unit: uncore_cha]
  unc_cha_txr_horz_occupancy.iv_bnc
       [CMS Horizontal Egress Occupancy; IV - Bounce. Unit: uncore_cha]
  unc_cha_txr_horz_starved.ad_bnc
       [CMS Horizontal Egress Injection Starvation; AD - Bounce. Unit:
        uncore_cha]
  unc_cha_txr_horz_starved.ak_bnc
       [CMS Horizontal Egress Injection Starvation; AK - Bounce. Unit:
        uncore_cha]
  unc_cha_txr_horz_starved.bl_bnc
       [CMS Horizontal Egress Injection Starvation; BL - Bounce. Unit:
        uncore_cha]
  unc_cha_txr_horz_starved.iv_bnc
       [CMS Horizontal Egress Injection Starvation; IV - Bounce. Unit:
        uncore_cha]
  unc_cha_txr_vert_ads_used.ad_ag0
       [CMS Vertical ADS Used; AD - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_ads_used.ad_ag1
       [CMS Vertical ADS Used; AD - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_ads_used.ak_ag0
       [CMS Vertical ADS Used; AK - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_ads_used.ak_ag1
       [CMS Vertical ADS Used; AK - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_ads_used.bl_ag0
       [CMS Vertical ADS Used; BL - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_ads_used.bl_ag1
       [CMS Vertical ADS Used; BL - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_bypass.ad_ag0
       [CMS Vertical ADS Used; AD - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_bypass.ad_ag1
       [CMS Vertical ADS Used; AD - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_bypass.ak_ag0
       [CMS Vertical ADS Used; AK - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_bypass.ak_ag1
       [CMS Vertical ADS Used; AK - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_bypass.bl_ag0
       [CMS Vertical ADS Used; BL - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_bypass.bl_ag1
       [CMS Vertical ADS Used; BL - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_bypass.iv
       [CMS Vertical ADS Used; IV. Unit: uncore_cha]
  unc_cha_txr_vert_cycles_full.ad_ag0
       [Cycles CMS Vertical Egress Queue Is Full; AD - Agent 0. Unit:
        uncore_cha]
  unc_cha_txr_vert_cycles_full.ad_ag1
       [Cycles CMS Vertical Egress Queue Is Full; AD - Agent 1. Unit:
        uncore_cha]
  unc_cha_txr_vert_cycles_full.ak_ag0
       [Cycles CMS Vertical Egress Queue Is Full; AK - Agent 0. Unit:
        uncore_cha]
  unc_cha_txr_vert_cycles_full.ak_ag1
       [Cycles CMS Vertical Egress Queue Is Full; AK - Agent 1. Unit:
        uncore_cha]
  unc_cha_txr_vert_cycles_full.bl_ag0
       [Cycles CMS Vertical Egress Queue Is Full; BL - Agent 0. Unit:
        uncore_cha]
  unc_cha_txr_vert_cycles_full.bl_ag1
       [Cycles CMS Vertical Egress Queue Is Full; BL - Agent 1. Unit:
        uncore_cha]
  unc_cha_txr_vert_cycles_full.iv
       [Cycles CMS Vertical Egress Queue Is Full; IV. Unit: uncore_cha]
  unc_cha_txr_vert_cycles_ne.ad_ag0
       [Cycles CMS Vertical Egress Queue Is Not Empty; AD - Agent 0. Unit:
        uncore_cha]
  unc_cha_txr_vert_cycles_ne.ad_ag1
       [Cycles CMS Vertical Egress Queue Is Not Empty; AD - Agent 1. Unit:
        uncore_cha]
  unc_cha_txr_vert_cycles_ne.ak_ag0
       [Cycles CMS Vertical Egress Queue Is Not Empty; AK - Agent 0. Unit:
        uncore_cha]
  unc_cha_txr_vert_cycles_ne.ak_ag1
       [Cycles CMS Vertical Egress Queue Is Not Empty; AK - Agent 1. Unit:
        uncore_cha]
  unc_cha_txr_vert_cycles_ne.bl_ag0
       [Cycles CMS Vertical Egress Queue Is Not Empty; BL - Agent 0. Unit:
        uncore_cha]
  unc_cha_txr_vert_cycles_ne.bl_ag1
       [Cycles CMS Vertical Egress Queue Is Not Empty; BL - Agent 1. Unit:
        uncore_cha]
  unc_cha_txr_vert_cycles_ne.iv
       [Cycles CMS Vertical Egress Queue Is Not Empty; IV. Unit: uncore_cha]
  unc_cha_txr_vert_inserts.ad_ag0
       [CMS Vert Egress Allocations; AD - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_inserts.ad_ag1
       [CMS Vert Egress Allocations; AD - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_inserts.ak_ag0
       [CMS Vert Egress Allocations; AK - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_inserts.ak_ag1
       [CMS Vert Egress Allocations; AK - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_inserts.bl_ag0
       [CMS Vert Egress Allocations; BL - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_inserts.bl_ag1
       [CMS Vert Egress Allocations; BL - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_inserts.iv
       [CMS Vert Egress Allocations; IV. Unit: uncore_cha]
  unc_cha_txr_vert_nack.ad_ag0
       [CMS Vertical Egress NACKs; AD - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_nack.ad_ag1
       [CMS Vertical Egress NACKs; AD - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_nack.ak_ag0
       [CMS Vertical Egress NACKs; AK - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_nack.ak_ag1
       [CMS Vertical Egress NACKs; AK - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_nack.bl_ag0
       [CMS Vertical Egress NACKs; BL - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_nack.bl_ag1
       [CMS Vertical Egress NACKs; BL - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_nack.iv
       [CMS Vertical Egress NACKs; IV. Unit: uncore_cha]
  unc_cha_txr_vert_occupancy.ad_ag0
       [CMS Vert Egress Occupancy; AD - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_occupancy.ad_ag1
       [CMS Vert Egress Occupancy; AD - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_occupancy.ak_ag0
       [CMS Vert Egress Occupancy; AK - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_occupancy.ak_ag1
       [CMS Vert Egress Occupancy; AK - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_occupancy.bl_ag0
       [CMS Vert Egress Occupancy; BL - Agent 0. Unit: uncore_cha]
  unc_cha_txr_vert_occupancy.bl_ag1
       [CMS Vert Egress Occupancy; BL - Agent 1. Unit: uncore_cha]
  unc_cha_txr_vert_occupancy.iv
       [CMS Vert Egress Occupancy; IV. Unit: uncore_cha]
  unc_cha_txr_vert_starved.ad_ag0
       [CMS Vertical Egress Injection Starvation; AD - Agent 0. Unit:
        uncore_cha]
  unc_cha_txr_vert_starved.ad_ag1
       [CMS Vertical Egress Injection Starvation; AD - Agent 1. Unit:
        uncore_cha]
  unc_cha_txr_vert_starved.ak_ag0
       [CMS Vertical Egress Injection Starvation; AK - Agent 0. Unit:
        uncore_cha]
  unc_cha_txr_vert_starved.ak_ag1
       [CMS Vertical Egress Injection Starvation; AK - Agent 1. Unit:
        uncore_cha]
  unc_cha_txr_vert_starved.bl_ag0
       [CMS Vertical Egress Injection Starvation; BL - Agent 0. Unit:
        uncore_cha]
  unc_cha_txr_vert_starved.bl_ag1
       [CMS Vertical Egress Injection Starvation; BL - Agent 1. Unit:
        uncore_cha]
  unc_cha_txr_vert_starved.iv
       [CMS Vertical Egress Injection Starvation; IV. Unit: uncore_cha]
  unc_cha_upi_credit_occupancy.vn0_ad_req
       [UPI Ingress Credits In Use Cycles; AD REQ VN0 Credits. Unit:
        uncore_cha]
  unc_cha_upi_credit_occupancy.vn0_ad_rsp
       [UPI Ingress Credits In Use Cycles; AD RSP VN0 Credits. Unit:
        uncore_cha]
  unc_cha_upi_credit_occupancy.vn0_bl_ncb
       [UPI Ingress Credits In Use Cycles; BL NCB VN0 Credits. Unit:
        uncore_cha]
  unc_cha_upi_credit_occupancy.vn0_bl_ncs
       [UPI Ingress Credits In Use Cycles; BL NCS VN0 Credits. Unit:
        uncore_cha]
  unc_cha_upi_credit_occupancy.vn0_bl_rsp
       [UPI Ingress Credits In Use Cycles; BL RSP VN0 Credits. Unit:
        uncore_cha]
  unc_cha_upi_credit_occupancy.vn0_bl_wb
       [UPI Ingress Credits In Use Cycles; BL DRS VN0 Credits. Unit:
        uncore_cha]
  unc_cha_upi_credit_occupancy.vna_ad
       [UPI Ingress Credits In Use Cycles; AD VNA Credits. Unit: uncore_cha]
  unc_cha_upi_credit_occupancy.vna_bl
       [UPI Ingress Credits In Use Cycles; BL VNA Credits. Unit: uncore_cha]
  unc_cha_upi_credits_acquired.ad_req
       [UPI Ingress Credit Allocations; AD REQ Credits. Unit: uncore_cha]
  unc_cha_upi_credits_acquired.ad_rsp
       [UPI Ingress Credit Allocations; AD RSP VN0 Credits. Unit: uncore_cha]
  unc_cha_upi_credits_acquired.bl_ncb
       [UPI Ingress Credit Allocations; BL NCB Credits. Unit: uncore_cha]
  unc_cha_upi_credits_acquired.bl_ncs
       [UPI Ingress Credit Allocations; BL NCS Credits. Unit: uncore_cha]
  unc_cha_upi_credits_acquired.bl_rsp
       [UPI Ingress Credit Allocations; BL RSP Credits. Unit: uncore_cha]
  unc_cha_upi_credits_acquired.bl_wb
       [UPI Ingress Credit Allocations; BL DRS Credits. Unit: uncore_cha]
  unc_cha_upi_credits_acquired.vn0
       [UPI Ingress Credit Allocations; VN0 Credits. Unit: uncore_cha]
  unc_cha_upi_credits_acquired.vna
       [UPI Ingress Credit Allocations; VNA Credits. Unit: uncore_cha]
  unc_cha_vert_ring_ad_in_use.dn_even
       [Vertical AD Ring In Use; Down and Even. Unit: uncore_cha]
  unc_cha_vert_ring_ad_in_use.dn_odd
       [Vertical AD Ring In Use; Down and Odd. Unit: uncore_cha]
  unc_cha_vert_ring_ad_in_use.up_even
       [Vertical AD Ring In Use; Up and Even. Unit: uncore_cha]
  unc_cha_vert_ring_ad_in_use.up_odd
       [Vertical AD Ring In Use; Up and Odd. Unit: uncore_cha]
  unc_cha_vert_ring_ak_in_use.dn_even
       [Vertical AK Ring In Use; Down and Even. Unit: uncore_cha]
  unc_cha_vert_ring_ak_in_use.dn_odd
       [Vertical AK Ring In Use; Down and Odd. Unit: uncore_cha]
  unc_cha_vert_ring_ak_in_use.up_even
       [Vertical AK Ring In Use; Up and Even. Unit: uncore_cha]
  unc_cha_vert_ring_ak_in_use.up_odd
       [Vertical AK Ring In Use; Up and Odd. Unit: uncore_cha]
  unc_cha_vert_ring_bl_in_use.dn_even
       [Vertical BL Ring in Use; Down and Even. Unit: uncore_cha]
  unc_cha_vert_ring_bl_in_use.dn_odd
       [Vertical BL Ring in Use; Down and Odd. Unit: uncore_cha]
  unc_cha_vert_ring_bl_in_use.up_even
       [Vertical BL Ring in Use; Up and Even. Unit: uncore_cha]
  unc_cha_vert_ring_bl_in_use.up_odd
       [Vertical BL Ring in Use; Up and Odd. Unit: uncore_cha]
  unc_cha_vert_ring_iv_in_use.dn
       [Vertical IV Ring in Use; Down. Unit: uncore_cha]
  unc_cha_vert_ring_iv_in_use.up
       [Vertical IV Ring in Use; Up. Unit: uncore_cha]
  unc_cha_wb_push_mtoi.llc
       [WbPushMtoI; Pushed to LLC. Unit: uncore_cha]
  unc_cha_wb_push_mtoi.mem
       [WbPushMtoI; Pushed to Memory. Unit: uncore_cha]
  unc_cha_write_no_credits.edc0_smi2
       [CHA iMC CHNx WRITE Credits Empty; EDC0_SMI2. Unit: uncore_cha]
  unc_cha_write_no_credits.edc1_smi3
       [CHA iMC CHNx WRITE Credits Empty; EDC1_SMI3. Unit: uncore_cha]
  unc_cha_write_no_credits.edc2_smi4
       [CHA iMC CHNx WRITE Credits Empty; EDC2_SMI4. Unit: uncore_cha]
  unc_cha_write_no_credits.edc3_smi5
       [CHA iMC CHNx WRITE Credits Empty; EDC3_SMI5. Unit: uncore_cha]
  unc_cha_write_no_credits.mc0_smi0
       [CHA iMC CHNx WRITE Credits Empty; MC0_SMI0. Unit: uncore_cha]
  unc_cha_write_no_credits.mc1_smi1
       [CHA iMC CHNx WRITE Credits Empty; MC1_SMI1. Unit: uncore_cha]
  unc_cha_xsnp_resp.any_rsp_hitfse
       [Core Cross Snoop Responses; Any RspHitFSE. Unit: uncore_cha]
  unc_cha_xsnp_resp.any_rspi_fwdfe
       [Core Cross Snoop Responses; Any RspIFwdFE. Unit: uncore_cha]
  unc_cha_xsnp_resp.any_rspi_fwdm
       [Core Cross Snoop Responses. Unit: uncore_cha]
  unc_cha_xsnp_resp.any_rsps_fwdfe
       [Core Cross Snoop Responses; Any RspSFwdFE. Unit: uncore_cha]
  unc_cha_xsnp_resp.any_rsps_fwdm
       [Core Cross Snoop Responses; Any RspSFwdM. Unit: uncore_cha]
  unc_cha_xsnp_resp.core_rsp_hitfse
       [Core Cross Snoop Responses; Core RspHitFSE. Unit: uncore_cha]
  unc_cha_xsnp_resp.core_rspi_fwdfe
       [Core Cross Snoop Responses; Core RspIFwdFE. Unit: uncore_cha]
  unc_cha_xsnp_resp.core_rspi_fwdm
       [Core Cross Snoop Responses; Core RspIFwdM. Unit: uncore_cha]
  unc_cha_xsnp_resp.core_rsps_fwdfe
       [Core Cross Snoop Responses; Core RspSFwdFE. Unit: uncore_cha]
  unc_cha_xsnp_resp.core_rsps_fwdm
       [Core Cross Snoop Responses; Core RspSFwdM. Unit: uncore_cha]
  unc_cha_xsnp_resp.evict_rsp_hitfse
       [Core Cross Snoop Responses; Evict RspHitFSE. Unit: uncore_cha]
  unc_cha_xsnp_resp.evict_rspi_fwdfe
       [Core Cross Snoop Responses; Evict RspIFwdFE. Unit: uncore_cha]
  unc_cha_xsnp_resp.evict_rspi_fwdm
       [Core Cross Snoop Responses; Evict RspIFwdM. Unit: uncore_cha]
  unc_cha_xsnp_resp.evict_rsps_fwdfe
       [Core Cross Snoop Responses; Evict RspSFwdFE. Unit: uncore_cha]
  unc_cha_xsnp_resp.evict_rsps_fwdm
       [Core Cross Snoop Responses; Evict RspSFwdM. Unit: uncore_cha]
  unc_cha_xsnp_resp.ext_rsp_hitfse
       [Core Cross Snoop Responses; External RspHitFSE. Unit: uncore_cha]
  unc_cha_xsnp_resp.ext_rspi_fwdfe
       [Core Cross Snoop Responses; External RspIFwdFE. Unit: uncore_cha]
  unc_cha_xsnp_resp.ext_rspi_fwdm
       [Core Cross Snoop Responses; External RspIFwdM. Unit: uncore_cha]
  unc_cha_xsnp_resp.ext_rsps_fwdfe
       [Core Cross Snoop Responses; External RspSFwdFE. Unit: uncore_cha]
  unc_cha_xsnp_resp.ext_rsps_fwdm
       [Core Cross Snoop Responses; External RspSFwdM. Unit: uncore_cha]

uncore interconnect:
  unc_i_cache_total_occupancy.any
       [Total Write Cache Occupancy; Any Source. Unit: uncore_irp]
  unc_i_cache_total_occupancy.iv_q
       [Total Write Cache Occupancy; Snoops. Unit: uncore_irp]
  unc_i_cache_total_occupancy.mem
       [Total IRP occupancy of inbound read and write requests. Unit:
        uncore_irp]
  unc_i_clockticks
       [IRP Clocks. Unit: uncore_irp]
  unc_i_coherent_ops.clflush
       [Coherent Ops; CLFlush. Unit: uncore_irp]
  unc_i_coherent_ops.crd
       [Coherent Ops; CRd. Unit: uncore_irp]
  unc_i_coherent_ops.drd
       [Coherent Ops; DRd. Unit: uncore_irp]
  unc_i_coherent_ops.pcidcahint
       [Coherent Ops; PCIDCAHin5t. Unit: uncore_irp]
  unc_i_coherent_ops.pcirdcur
       [Coherent Ops; PCIRdCur. Unit: uncore_irp]
  unc_i_coherent_ops.pcitom
       [PCIITOM request issued by the IRP unit to the mesh with the intention
        of writing a full cacheline. Unit: uncore_irp]
  unc_i_coherent_ops.rfo
       [RFO request issued by the IRP unit to the mesh with the intention of
        writing a partial cacheline. Unit: uncore_irp]
  unc_i_coherent_ops.wbmtoi
       [Coherent Ops; WbMtoI. Unit: uncore_irp]
  unc_i_faf_full
       [FAF RF full. Unit: uncore_irp]
  unc_i_faf_inserts
       [Inbound read requests received by the IRP and inserted into the FAF
        queue. Unit: uncore_irp]
  unc_i_faf_occupancy
       [Occupancy of the IRP FAF queue. Unit: uncore_irp]
  unc_i_faf_transactions
       [FAF allocation -- sent to ADQ. Unit: uncore_irp]
  unc_i_irp_all.inbound_inserts
       [All Inserts Inbound (p2p + faf + cset). Unit: uncore_irp]
  unc_i_irp_all.outbound_inserts
       [All Inserts Outbound (BL, AK, Snoops). Unit: uncore_irp]
  unc_i_misc0.2nd_atomic_insert
       [Misc Events - Set 0; Cache Inserts of Atomic Transactions as
        Secondary. Unit: uncore_irp]
  unc_i_misc0.2nd_rd_insert
       [Misc Events - Set 0; Cache Inserts of Read Transactions as Secondary.
        Unit: uncore_irp]
  unc_i_misc0.2nd_wr_insert
       [Misc Events - Set 0; Cache Inserts of Write Transactions as Secondary.
        Unit: uncore_irp]
  unc_i_misc0.fast_rej
       [Misc Events - Set 0; Fastpath Rejects. Unit: uncore_irp]
  unc_i_misc0.fast_req
       [Misc Events - Set 0; Fastpath Requests. Unit: uncore_irp]
  unc_i_misc0.fast_xfer
       [Misc Events - Set 0; Fastpath Transfers From Primary to Secondary.
        Unit: uncore_irp]
  unc_i_misc0.pf_ack_hint
       [Misc Events - Set 0; Prefetch Ack Hints From Primary to Secondary.
        Unit: uncore_irp]
  unc_i_misc0.unknown
       [Misc Events - Set 0. Unit: uncore_irp]
  unc_i_misc1.lost_fwd
       [Misc Events - Set 1; Lost Forward. Unit: uncore_irp]
  unc_i_misc1.sec_rcvd_invld
       [Misc Events - Set 1; Received Invalid. Unit: uncore_irp]
  unc_i_misc1.sec_rcvd_vld
       [Misc Events - Set 1; Received Valid. Unit: uncore_irp]
  unc_i_misc1.slow_e
       [Misc Events - Set 1; Slow Transfer of E Line. Unit: uncore_irp]
  unc_i_misc1.slow_i
       [Misc Events - Set 1; Slow Transfer of I Line. Unit: uncore_irp]
  unc_i_misc1.slow_m
       [Misc Events - Set 1; Slow Transfer of M Line. Unit: uncore_irp]
  unc_i_misc1.slow_s
       [Misc Events - Set 1; Slow Transfer of S Line. Unit: uncore_irp]
  unc_i_p2p_inserts
       [P2P Requests. Unit: uncore_irp]
  unc_i_p2p_occupancy
       [P2P Occupancy. Unit: uncore_irp]
  unc_i_p2p_transactions.cmpl
       [P2P Transactions; P2P completions. Unit: uncore_irp]
  unc_i_p2p_transactions.loc
       [P2P Transactions; match if local only. Unit: uncore_irp]
  unc_i_p2p_transactions.loc_and_tgt_match
       [P2P Transactions; match if local and target matches. Unit: uncore_irp]
  unc_i_p2p_transactions.msg
       [P2P Transactions; P2P Message. Unit: uncore_irp]
  unc_i_p2p_transactions.rd
       [P2P Transactions; P2P reads. Unit: uncore_irp]
  unc_i_p2p_transactions.rem
       [P2P Transactions; Match if remote only. Unit: uncore_irp]
  unc_i_p2p_transactions.rem_and_tgt_match
       [P2P Transactions; match if remote and target matches. Unit: uncore_irp]
  unc_i_p2p_transactions.wr
       [P2P Transactions; P2P Writes. Unit: uncore_irp]
  unc_i_snoop_resp.all_hit
       [Responses to snoops of any type that hit M, E, S or I line in the IIO.
        Unit: uncore_irp]
  unc_i_snoop_resp.all_hit_es
       [Responses to snoops of any type that hit E or S line in the IIO cache.
        Unit: uncore_irp]
  unc_i_snoop_resp.all_hit_i
       [Responses to snoops of any type that hit I line in the IIO cache.
        Unit: uncore_irp]
  unc_i_snoop_resp.all_hit_m
       [Responses to snoops of any type that hit M line in the IIO cache.
        Unit: uncore_irp]
  unc_i_snoop_resp.all_miss
       [Responses to snoops of any type that miss the IIO cache. Unit:
        uncore_irp]
  unc_i_snoop_resp.hit_es
       [Snoop Responses; Hit E or S. Unit: uncore_irp]
  unc_i_snoop_resp.hit_i
       [Snoop Responses; Hit I. Unit: uncore_irp]
  unc_i_snoop_resp.hit_m
       [Snoop Responses; Hit M. Unit: uncore_irp]
  unc_i_snoop_resp.miss
       [Snoop Responses; Miss. Unit: uncore_irp]
  unc_i_snoop_resp.snpcode
       [Snoop Responses; SnpCode. Unit: uncore_irp]
  unc_i_snoop_resp.snpdata
       [Snoop Responses; SnpData. Unit: uncore_irp]
  unc_i_snoop_resp.snpinv
       [Snoop Responses; SnpInv. Unit: uncore_irp]
  unc_i_transactions.atomic
       [Inbound Transaction Count; Atomic. Unit: uncore_irp]
  unc_i_transactions.other
       [Inbound Transaction Count; Other. Unit: uncore_irp]
  unc_i_transactions.rd_pref
       [Inbound Transaction Count; Read Prefetches. Unit: uncore_irp]
  unc_i_transactions.reads
       [Inbound Transaction Count; Reads. Unit: uncore_irp]
  unc_i_transactions.wr_pref
       [Inbound write (fast path) requests received by the IRP. Unit:
        uncore_irp]
  unc_i_transactions.writes
       [Inbound Transaction Count; Writes. Unit: uncore_irp]
  unc_i_txc_ak_inserts
       [AK Egress Allocations. Unit: uncore_irp]
  unc_i_txc_bl_drs_cycles_full
       [BL DRS Egress Cycles Full. Unit: uncore_irp]
  unc_i_txc_bl_drs_inserts
       [BL DRS Egress Inserts. Unit: uncore_irp]
  unc_i_txc_bl_drs_occupancy
       [BL DRS Egress Occupancy. Unit: uncore_irp]
  unc_i_txc_bl_ncb_cycles_full
       [BL NCB Egress Cycles Full. Unit: uncore_irp]
  unc_i_txc_bl_ncb_inserts
       [BL NCB Egress Inserts. Unit: uncore_irp]
  unc_i_txc_bl_ncb_occupancy
       [BL NCB Egress Occupancy. Unit: uncore_irp]
  unc_i_txc_bl_ncs_cycles_full
       [BL NCS Egress Cycles Full. Unit: uncore_irp]
  unc_i_txc_bl_ncs_inserts
       [BL NCS Egress Inserts. Unit: uncore_irp]
  unc_i_txc_bl_ncs_occupancy
       [BL NCS Egress Occupancy. Unit: uncore_irp]
  unc_i_txr2_ad_stall_credit_cycles
       [No AD Egress Credit Stalls. Unit: uncore_irp]
  unc_i_txr2_bl_stall_credit_cycles
       [No BL Egress Credit Stalls. Unit: uncore_irp]
  unc_i_txs_data_inserts_ncb
       [Outbound Read Requests. Unit: uncore_irp]
  unc_i_txs_data_inserts_ncs
       [Outbound Read Requests. Unit: uncore_irp]
  unc_i_txs_request_occupancy
       [Outbound Request Queue Occupancy. Unit: uncore_irp]
  unc_m2m_ag0_ad_crd_acquired.tgr0
       [CMS Agent0 AD Credits Acquired; For Transgress 0. Unit: uncore_m2m]
  unc_m2m_ag0_ad_crd_acquired.tgr1
       [CMS Agent0 AD Credits Acquired; For Transgress 1. Unit: uncore_m2m]
  unc_m2m_ag0_ad_crd_acquired.tgr2
       [CMS Agent0 AD Credits Acquired; For Transgress 2. Unit: uncore_m2m]
  unc_m2m_ag0_ad_crd_acquired.tgr3
       [CMS Agent0 AD Credits Acquired; For Transgress 3. Unit: uncore_m2m]
  unc_m2m_ag0_ad_crd_acquired.tgr4
       [CMS Agent0 AD Credits Acquired; For Transgress 4. Unit: uncore_m2m]
  unc_m2m_ag0_ad_crd_acquired.tgr5
       [CMS Agent0 AD Credits Acquired; For Transgress 5. Unit: uncore_m2m]
  unc_m2m_ag0_ad_crd_occupancy.tgr0
       [CMS Agent0 AD Credits Occupancy; For Transgress 0. Unit: uncore_m2m]
  unc_m2m_ag0_ad_crd_occupancy.tgr1
       [CMS Agent0 AD Credits Occupancy; For Transgress 1. Unit: uncore_m2m]
  unc_m2m_ag0_ad_crd_occupancy.tgr2
       [CMS Agent0 AD Credits Occupancy; For Transgress 2. Unit: uncore_m2m]
  unc_m2m_ag0_ad_crd_occupancy.tgr3
       [CMS Agent0 AD Credits Occupancy; For Transgress 3. Unit: uncore_m2m]
  unc_m2m_ag0_ad_crd_occupancy.tgr4
       [CMS Agent0 AD Credits Occupancy; For Transgress 4. Unit: uncore_m2m]
  unc_m2m_ag0_ad_crd_occupancy.tgr5
       [CMS Agent0 AD Credits Occupancy; For Transgress 5. Unit: uncore_m2m]
  unc_m2m_ag0_bl_crd_acquired.tgr0
       [CMS Agent0 BL Credits Acquired; For Transgress 0. Unit: uncore_m2m]
  unc_m2m_ag0_bl_crd_acquired.tgr1
       [CMS Agent0 BL Credits Acquired; For Transgress 1. Unit: uncore_m2m]
  unc_m2m_ag0_bl_crd_acquired.tgr2
       [CMS Agent0 BL Credits Acquired; For Transgress 2. Unit: uncore_m2m]
  unc_m2m_ag0_bl_crd_acquired.tgr3
       [CMS Agent0 BL Credits Acquired; For Transgress 3. Unit: uncore_m2m]
  unc_m2m_ag0_bl_crd_acquired.tgr4
       [CMS Agent0 BL Credits Acquired; For Transgress 4. Unit: uncore_m2m]
  unc_m2m_ag0_bl_crd_acquired.tgr5
       [CMS Agent0 BL Credits Acquired; For Transgress 5. Unit: uncore_m2m]
  unc_m2m_ag0_bl_crd_occupancy.tgr0
       [CMS Agent0 BL Credits Occupancy; For Transgress 0. Unit: uncore_m2m]
  unc_m2m_ag0_bl_crd_occupancy.tgr1
       [CMS Agent0 BL Credits Occupancy; For Transgress 1. Unit: uncore_m2m]
  unc_m2m_ag0_bl_crd_occupancy.tgr2
       [CMS Agent0 BL Credits Occupancy; For Transgress 2. Unit: uncore_m2m]
  unc_m2m_ag0_bl_crd_occupancy.tgr3
       [CMS Agent0 BL Credits Occupancy; For Transgress 3. Unit: uncore_m2m]
  unc_m2m_ag0_bl_crd_occupancy.tgr4
       [CMS Agent0 BL Credits Occupancy; For Transgress 4. Unit: uncore_m2m]
  unc_m2m_ag0_bl_crd_occupancy.tgr5
       [CMS Agent0 BL Credits Occupancy; For Transgress 5. Unit: uncore_m2m]
  unc_m2m_ag1_ad_crd_acquired.tgr0
       [CMS Agent1 AD Credits Acquired; For Transgress 0. Unit: uncore_m2m]
  unc_m2m_ag1_ad_crd_acquired.tgr1
       [CMS Agent1 AD Credits Acquired; For Transgress 1. Unit: uncore_m2m]
  unc_m2m_ag1_ad_crd_acquired.tgr2
       [CMS Agent1 AD Credits Acquired; For Transgress 2. Unit: uncore_m2m]
  unc_m2m_ag1_ad_crd_acquired.tgr3
       [CMS Agent1 AD Credits Acquired; For Transgress 3. Unit: uncore_m2m]
  unc_m2m_ag1_ad_crd_acquired.tgr4
       [CMS Agent1 AD Credits Acquired; For Transgress 4. Unit: uncore_m2m]
  unc_m2m_ag1_ad_crd_acquired.tgr5
       [CMS Agent1 AD Credits Acquired; For Transgress 5. Unit: uncore_m2m]
  unc_m2m_ag1_ad_crd_occupancy.tgr0
       [CMS Agent1 AD Credits Occupancy; For Transgress 0. Unit: uncore_m2m]
  unc_m2m_ag1_ad_crd_occupancy.tgr1
       [CMS Agent1 AD Credits Occupancy; For Transgress 1. Unit: uncore_m2m]
  unc_m2m_ag1_ad_crd_occupancy.tgr2
       [CMS Agent1 AD Credits Occupancy; For Transgress 2. Unit: uncore_m2m]
  unc_m2m_ag1_ad_crd_occupancy.tgr3
       [CMS Agent1 AD Credits Occupancy; For Transgress 3. Unit: uncore_m2m]
  unc_m2m_ag1_ad_crd_occupancy.tgr4
       [CMS Agent1 AD Credits Occupancy; For Transgress 4. Unit: uncore_m2m]
  unc_m2m_ag1_ad_crd_occupancy.tgr5
       [CMS Agent1 AD Credits Occupancy; For Transgress 5. Unit: uncore_m2m]
  unc_m2m_ag1_bl_crd_occupancy.tgr0
       [CMS Agent1 BL Credits Occupancy; For Transgress 0. Unit: uncore_m2m]
  unc_m2m_ag1_bl_crd_occupancy.tgr1
       [CMS Agent1 BL Credits Occupancy; For Transgress 1. Unit: uncore_m2m]
  unc_m2m_ag1_bl_crd_occupancy.tgr2
       [CMS Agent1 BL Credits Occupancy; For Transgress 2. Unit: uncore_m2m]
  unc_m2m_ag1_bl_crd_occupancy.tgr3
       [CMS Agent1 BL Credits Occupancy; For Transgress 3. Unit: uncore_m2m]
  unc_m2m_ag1_bl_crd_occupancy.tgr4
       [CMS Agent1 BL Credits Occupancy; For Transgress 4. Unit: uncore_m2m]
  unc_m2m_ag1_bl_crd_occupancy.tgr5
       [CMS Agent1 BL Credits Occupancy; For Transgress 5. Unit: uncore_m2m]
  unc_m2m_ag1_bl_credits_acquired.tgr0
       [CMS Agent1 BL Credits Acquired; For Transgress 0. Unit: uncore_m2m]
  unc_m2m_ag1_bl_credits_acquired.tgr1
       [CMS Agent1 BL Credits Acquired; For Transgress 1. Unit: uncore_m2m]
  unc_m2m_ag1_bl_credits_acquired.tgr2
       [CMS Agent1 BL Credits Acquired; For Transgress 2. Unit: uncore_m2m]
  unc_m2m_ag1_bl_credits_acquired.tgr3
       [CMS Agent1 BL Credits Acquired; For Transgress 3. Unit: uncore_m2m]
  unc_m2m_ag1_bl_credits_acquired.tgr4
       [CMS Agent1 BL Credits Acquired; For Transgress 4. Unit: uncore_m2m]
  unc_m2m_ag1_bl_credits_acquired.tgr5
       [CMS Agent1 BL Credits Acquired; For Transgress 5. Unit: uncore_m2m]
  unc_m2m_bypass_m2m_egress.not_taken
       [Traffic in which the M2M to iMC Bypass was not taken. Unit: uncore_m2m]
  unc_m2m_bypass_m2m_egress.taken
       [M2M to iMC Bypass; Taken. Unit: uncore_m2m]
  unc_m2m_bypass_m2m_ingress.not_taken
       [M2M to iMC Bypass; Not Taken. Unit: uncore_m2m]
  unc_m2m_bypass_m2m_ingress.taken
       [M2M to iMC Bypass; Taken. Unit: uncore_m2m]
  unc_m2m_clockticks
       [Cycles - at UCLK. Unit: uncore_m2m]
  unc_m2m_cms_clockticks
       [CMS Clockticks. Unit: uncore_m2m]
  unc_m2m_direct2core_not_taken_dirstate
       [Cycles when direct to core mode (which bypasses the CHA) was disabled.
        Unit: uncore_m2m]
  unc_m2m_direct2core_taken
       [Messages sent direct to core (bypassing the CHA). Unit: uncore_m2m]
  unc_m2m_direct2core_txn_override
       [Number of reads in which direct to core transaction were overridden.
        Unit: uncore_m2m]
  unc_m2m_direct2upi_not_taken_credits
       [Number of reads in which direct to Intel(R) UPI transactions were
        overridden. Unit: uncore_m2m]
  unc_m2m_direct2upi_not_taken_dirstate
       [Cycles when direct to Intel(R) UPI was disabled. Unit: uncore_m2m]
  unc_m2m_direct2upi_taken
       [Messages sent direct to the Intel(R) UPI. Unit: uncore_m2m]
  unc_m2m_direct2upi_txn_override
       [Number of reads that a message sent direct2 Intel(R) UPI was
        overridden. Unit: uncore_m2m]
  unc_m2m_directory_hit.clean_a
       [Directory Hit; On NonDirty Line in A State. Unit: uncore_m2m]
  unc_m2m_directory_hit.clean_i
       [Directory Hit; On NonDirty Line in I State. Unit: uncore_m2m]
  unc_m2m_directory_hit.clean_p
       [Directory Hit; On NonDirty Line in L State. Unit: uncore_m2m]
  unc_m2m_directory_hit.clean_s
       [Directory Hit; On NonDirty Line in S State. Unit: uncore_m2m]
  unc_m2m_directory_hit.dirty_a
       [Directory Hit; On Dirty Line in A State. Unit: uncore_m2m]
  unc_m2m_directory_hit.dirty_i
       [Directory Hit; On Dirty Line in I State. Unit: uncore_m2m]
  unc_m2m_directory_hit.dirty_p
       [Directory Hit; On Dirty Line in L State. Unit: uncore_m2m]
  unc_m2m_directory_hit.dirty_s
       [Directory Hit; On Dirty Line in S State. Unit: uncore_m2m]
  unc_m2m_directory_lookup.any
       [Multi-socket cacheline Directory lookups (any state found). Unit:
        uncore_m2m]
  unc_m2m_directory_lookup.state_a
       [Multi-socket cacheline Directory lookups (cacheline found in A state).
        Unit: uncore_m2m]
  unc_m2m_directory_lookup.state_i
       [Multi-socket cacheline Directory lookup (cacheline found in I state).
        Unit: uncore_m2m]
  unc_m2m_directory_lookup.state_s
       [Multi-socket cacheline Directory lookup (cacheline found in S state).
        Unit: uncore_m2m]
  unc_m2m_directory_miss.clean_a
       [Directory Miss; On NonDirty Line in A State. Unit: uncore_m2m]
  unc_m2m_directory_miss.clean_i
       [Directory Miss; On NonDirty Line in I State. Unit: uncore_m2m]
  unc_m2m_directory_miss.clean_p
       [Directory Miss; On NonDirty Line in L State. Unit: uncore_m2m]
  unc_m2m_directory_miss.clean_s
       [Directory Miss; On NonDirty Line in S State. Unit: uncore_m2m]
  unc_m2m_directory_miss.dirty_a
       [Directory Miss; On Dirty Line in A State. Unit: uncore_m2m]
  unc_m2m_directory_miss.dirty_i
       [Directory Miss; On Dirty Line in I State. Unit: uncore_m2m]
  unc_m2m_directory_miss.dirty_p
       [Directory Miss; On Dirty Line in L State. Unit: uncore_m2m]
  unc_m2m_directory_miss.dirty_s
       [Directory Miss; On Dirty Line in S State. Unit: uncore_m2m]
  unc_m2m_directory_update.a2i
       [Multi-socket cacheline Directory update from A to I. Unit: uncore_m2m]
  unc_m2m_directory_update.a2s
       [Multi-socket cacheline Directory update from A to S. Unit: uncore_m2m]
  unc_m2m_directory_update.any
       [Multi-socket cacheline Directory update from/to Any state. Unit:
        uncore_m2m]
  unc_m2m_directory_update.i2a
       [Multi-socket cacheline Directory update from I to A. Unit: uncore_m2m]
  unc_m2m_directory_update.i2s
       [Multi-socket cacheline Directory update from I to S. Unit: uncore_m2m]
  unc_m2m_directory_update.s2a
       [Multi-socket cacheline Directory update from S to A. Unit: uncore_m2m]
  unc_m2m_directory_update.s2i
       [Multi-socket cacheline Directory update from S to I. Unit: uncore_m2m]
  unc_m2m_egress_ordering.iv_snoopgo_dn
       [Egress Blocking due to Ordering requirements; Down. Unit: uncore_m2m]
  unc_m2m_egress_ordering.iv_snoopgo_up
       [Egress Blocking due to Ordering requirements; Up. Unit: uncore_m2m]
  unc_m2m_fast_asserted.horz
       [FaST wire asserted; Horizontal. Unit: uncore_m2m]
  unc_m2m_fast_asserted.vert
       [FaST wire asserted; Vertical. Unit: uncore_m2m]
  unc_m2m_horz_ring_ad_in_use.left_even
       [Horizontal AD Ring In Use; Left and Even. Unit: uncore_m2m]
  unc_m2m_horz_ring_ad_in_use.left_odd
       [Horizontal AD Ring In Use; Left and Odd. Unit: uncore_m2m]
  unc_m2m_horz_ring_ad_in_use.right_even
       [Horizontal AD Ring In Use; Right and Even. Unit: uncore_m2m]
  unc_m2m_horz_ring_ad_in_use.right_odd
       [Horizontal AD Ring In Use; Right and Odd. Unit: uncore_m2m]
  unc_m2m_horz_ring_ak_in_use.left_even
       [Horizontal AK Ring In Use; Left and Even. Unit: uncore_m2m]
  unc_m2m_horz_ring_ak_in_use.left_odd
       [Horizontal AK Ring In Use; Left and Odd. Unit: uncore_m2m]
  unc_m2m_horz_ring_ak_in_use.right_even
       [Horizontal AK Ring In Use; Right and Even. Unit: uncore_m2m]
  unc_m2m_horz_ring_ak_in_use.right_odd
       [Horizontal AK Ring In Use; Right and Odd. Unit: uncore_m2m]
  unc_m2m_horz_ring_bl_in_use.left_even
       [Horizontal BL Ring in Use; Left and Even. Unit: uncore_m2m]
  unc_m2m_horz_ring_bl_in_use.left_odd
       [Horizontal BL Ring in Use; Left and Odd. Unit: uncore_m2m]
  unc_m2m_horz_ring_bl_in_use.right_even
       [Horizontal BL Ring in Use; Right and Even. Unit: uncore_m2m]
  unc_m2m_horz_ring_bl_in_use.right_odd
       [Horizontal BL Ring in Use; Right and Odd. Unit: uncore_m2m]
  unc_m2m_horz_ring_iv_in_use.left
       [Horizontal IV Ring in Use; Left. Unit: uncore_m2m]
  unc_m2m_horz_ring_iv_in_use.right
       [Horizontal IV Ring in Use; Right. Unit: uncore_m2m]
  unc_m2m_imc_reads.all
       [Reads to iMC issued. Unit: uncore_m2m]
  unc_m2m_imc_reads.from_transgress
       [M2M Reads Issued to iMC; All, regardless of priority. Unit: uncore_m2m]
  unc_m2m_imc_reads.isoch
       [M2M Reads Issued to iMC; Critical Priority. Unit: uncore_m2m]
  unc_m2m_imc_reads.normal
       [Reads to iMC issued at Normal Priority (Non-Isochronous). Unit:
        uncore_m2m]
  unc_m2m_imc_writes.all
       [Writes to iMC issued. Unit: uncore_m2m]
  unc_m2m_imc_writes.from_transgress
       [M2M Writes Issued to iMC; All, regardless of priority. Unit:
        uncore_m2m]
  unc_m2m_imc_writes.full
       [M2M Writes Issued to iMC; Full Line Non-ISOCH. Unit: uncore_m2m]
  unc_m2m_imc_writes.full_isoch
       [M2M Writes Issued to iMC; ISOCH Full Line. Unit: uncore_m2m]
  unc_m2m_imc_writes.ni
       [M2M Writes Issued to iMC; All, regardless of priority. Unit:
        uncore_m2m]
  unc_m2m_imc_writes.partial
       [Partial Non-Isochronous writes to the iMC. Unit: uncore_m2m]
  unc_m2m_imc_writes.partial_isoch
       [M2M Writes Issued to iMC; ISOCH Partial. Unit: uncore_m2m]
  unc_m2m_pkt_match.mc
       [Number Packet Header Matches; MC Match. Unit: uncore_m2m]
  unc_m2m_pkt_match.mesh
       [Number Packet Header Matches; Mesh Match. Unit: uncore_m2m]
  unc_m2m_prefcam_cycles_full
       [Prefetch CAM Cycles Full. Unit: uncore_m2m]
  unc_m2m_prefcam_cycles_ne
       [Prefetch CAM Cycles Not Empty. Unit: uncore_m2m]
  unc_m2m_prefcam_demand_promotions
       [Prefetch requests that got turn into a demand request. Unit:
        uncore_m2m]
  unc_m2m_prefcam_inserts
       [Inserts into the Memory Controller Prefetch Queue. Unit: uncore_m2m]
  unc_m2m_prefcam_occupancy
       [Prefetch CAM Occupancy. Unit: uncore_m2m]
  unc_m2m_ring_bounces_horz.ad
       [Messages that bounced on the Horizontal Ring.; AD. Unit: uncore_m2m]
  unc_m2m_ring_bounces_horz.ak
       [Messages that bounced on the Horizontal Ring.; AK. Unit: uncore_m2m]
  unc_m2m_ring_bounces_horz.bl
       [Messages that bounced on the Horizontal Ring.; BL. Unit: uncore_m2m]
  unc_m2m_ring_bounces_horz.iv
       [Messages that bounced on the Horizontal Ring.; IV. Unit: uncore_m2m]
  unc_m2m_ring_bounces_vert.ad
       [Messages that bounced on the Vertical Ring.; AD. Unit: uncore_m2m]
  unc_m2m_ring_bounces_vert.ak
       [Messages that bounced on the Vertical Ring.; Acknowledgements to core.
        Unit: uncore_m2m]
  unc_m2m_ring_bounces_vert.bl
       [Messages that bounced on the Vertical Ring.; Data Responses to core.
        Unit: uncore_m2m]
  unc_m2m_ring_bounces_vert.iv
       [Messages that bounced on the Vertical Ring.; Snoops of processor's
        cache. Unit: uncore_m2m]
  unc_m2m_ring_sink_starved_horz.ad
       [Sink Starvation on Horizontal Ring; AD. Unit: uncore_m2m]
  unc_m2m_ring_sink_starved_horz.ak
       [Sink Starvation on Horizontal Ring; AK. Unit: uncore_m2m]
  unc_m2m_ring_sink_starved_horz.ak_ag1
       [Sink Starvation on Horizontal Ring; Acknowledgements to Agent 1. Unit:
        uncore_m2m]
  unc_m2m_ring_sink_starved_horz.bl
       [Sink Starvation on Horizontal Ring; BL. Unit: uncore_m2m]
  unc_m2m_ring_sink_starved_horz.iv
       [Sink Starvation on Horizontal Ring; IV. Unit: uncore_m2m]
  unc_m2m_ring_sink_starved_vert.ad
       [Sink Starvation on Vertical Ring; AD. Unit: uncore_m2m]
  unc_m2m_ring_sink_starved_vert.ak
       [Sink Starvation on Vertical Ring; Acknowledgements to core. Unit:
        uncore_m2m]
  unc_m2m_ring_sink_starved_vert.bl
       [Sink Starvation on Vertical Ring; Data Responses to core. Unit:
        uncore_m2m]
  unc_m2m_ring_sink_starved_vert.iv
       [Sink Starvation on Vertical Ring; Snoops of processor's cache. Unit:
        uncore_m2m]
  unc_m2m_ring_src_thrtl
       [Source Throttle. Unit: uncore_m2m]
  unc_m2m_rpq_cycles_reg_credits.chn0
       [M2M to iMC RPQ Cycles w/Credits - Regular; Channel 0. Unit: uncore_m2m]
  unc_m2m_rpq_cycles_reg_credits.chn1
       [M2M to iMC RPQ Cycles w/Credits - Regular; Channel 1. Unit: uncore_m2m]
  unc_m2m_rpq_cycles_reg_credits.chn2
       [M2M to iMC RPQ Cycles w/Credits - Regular; Channel 2. Unit: uncore_m2m]
  unc_m2m_rpq_cycles_spec_credits.chn0
       [M2M to iMC RPQ Cycles w/Credits - Special; Channel 0. Unit: uncore_m2m]
  unc_m2m_rpq_cycles_spec_credits.chn1
       [M2M to iMC RPQ Cycles w/Credits - Special; Channel 1. Unit: uncore_m2m]
  unc_m2m_rpq_cycles_spec_credits.chn2
       [M2M to iMC RPQ Cycles w/Credits - Special; Channel 2. Unit: uncore_m2m]
  unc_m2m_rxc_ad_cycles_full
       [AD Ingress (from CMS) Full. Unit: uncore_m2m]
  unc_m2m_rxc_ad_cycles_ne
       [AD Ingress (from CMS) Not Empty. Unit: uncore_m2m]
  unc_m2m_rxc_ad_inserts
       [AD Ingress (from CMS) Queue Inserts. Unit: uncore_m2m]
  unc_m2m_rxc_ad_occupancy
       [AD Ingress (from CMS) Occupancy. Unit: uncore_m2m]
  unc_m2m_rxc_bl_cycles_full
       [BL Ingress (from CMS) Full. Unit: uncore_m2m]
  unc_m2m_rxc_bl_cycles_ne
       [BL Ingress (from CMS) Not Empty. Unit: uncore_m2m]
  unc_m2m_rxc_bl_inserts
       [BL Ingress (from CMS) Allocations. Unit: uncore_m2m]
  unc_m2m_rxc_bl_occupancy
       [BL Ingress (from CMS) Occupancy. Unit: uncore_m2m]
  unc_m2m_rxr_busy_starved.ad_bnc
       [Transgress Injection Starvation; AD - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_busy_starved.ad_crd
       [Transgress Injection Starvation; AD - Credit. Unit: uncore_m2m]
  unc_m2m_rxr_busy_starved.bl_bnc
       [Transgress Injection Starvation; BL - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_busy_starved.bl_crd
       [Transgress Injection Starvation; BL - Credit. Unit: uncore_m2m]
  unc_m2m_rxr_bypass.ad_bnc
       [Transgress Ingress Bypass; AD - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_bypass.ad_crd
       [Transgress Ingress Bypass; AD - Credit. Unit: uncore_m2m]
  unc_m2m_rxr_bypass.ak_bnc
       [Transgress Ingress Bypass; AK - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_bypass.bl_bnc
       [Transgress Ingress Bypass; BL - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_bypass.bl_crd
       [Transgress Ingress Bypass; BL - Credit. Unit: uncore_m2m]
  unc_m2m_rxr_bypass.iv_bnc
       [Transgress Ingress Bypass; IV - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_crd_starved.ad_bnc
       [Transgress Injection Starvation; AD - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_crd_starved.ad_crd
       [Transgress Injection Starvation; AD - Credit. Unit: uncore_m2m]
  unc_m2m_rxr_crd_starved.ak_bnc
       [Transgress Injection Starvation; AK - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_crd_starved.bl_bnc
       [Transgress Injection Starvation; BL - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_crd_starved.bl_crd
       [Transgress Injection Starvation; BL - Credit. Unit: uncore_m2m]
  unc_m2m_rxr_crd_starved.ifv
       [Transgress Injection Starvation; IFV - Credit. Unit: uncore_m2m]
  unc_m2m_rxr_crd_starved.iv_bnc
       [Transgress Injection Starvation; IV - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_inserts.ad_bnc
       [Transgress Ingress Allocations; AD - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_inserts.ad_crd
       [Transgress Ingress Allocations; AD - Credit. Unit: uncore_m2m]
  unc_m2m_rxr_inserts.ak_bnc
       [Transgress Ingress Allocations; AK - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_inserts.bl_bnc
       [Transgress Ingress Allocations; BL - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_inserts.bl_crd
       [Transgress Ingress Allocations; BL - Credit. Unit: uncore_m2m]
  unc_m2m_rxr_inserts.iv_bnc
       [Transgress Ingress Allocations; IV - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_occupancy.ad_bnc
       [Transgress Ingress Occupancy; AD - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_occupancy.ad_crd
       [Transgress Ingress Occupancy; AD - Credit. Unit: uncore_m2m]
  unc_m2m_rxr_occupancy.ak_bnc
       [Transgress Ingress Occupancy; AK - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_occupancy.bl_bnc
       [Transgress Ingress Occupancy; BL - Bounce. Unit: uncore_m2m]
  unc_m2m_rxr_occupancy.bl_crd
       [Transgress Ingress Occupancy; BL - Credit. Unit: uncore_m2m]
  unc_m2m_rxr_occupancy.iv_bnc
       [Transgress Ingress Occupancy; IV - Bounce. Unit: uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_ad_ag0.tgr0
       [Stall on No AD Agent0 Transgress Credits; For Transgress 0. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_ad_ag0.tgr1
       [Stall on No AD Agent0 Transgress Credits; For Transgress 1. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_ad_ag0.tgr2
       [Stall on No AD Agent0 Transgress Credits; For Transgress 2. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_ad_ag0.tgr3
       [Stall on No AD Agent0 Transgress Credits; For Transgress 3. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_ad_ag0.tgr4
       [Stall on No AD Agent0 Transgress Credits; For Transgress 4. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_ad_ag0.tgr5
       [Stall on No AD Agent0 Transgress Credits; For Transgress 5. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_ad_ag1.tgr0
       [Stall on No AD Agent1 Transgress Credits; For Transgress 0. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_ad_ag1.tgr1
       [Stall on No AD Agent1 Transgress Credits; For Transgress 1. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_ad_ag1.tgr2
       [Stall on No AD Agent1 Transgress Credits; For Transgress 2. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_ad_ag1.tgr3
       [Stall on No AD Agent1 Transgress Credits; For Transgress 3. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_ad_ag1.tgr4
       [Stall on No AD Agent1 Transgress Credits; For Transgress 4. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_ad_ag1.tgr5
       [Stall on No AD Agent1 Transgress Credits; For Transgress 5. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_bl_ag0.tgr0
       [Stall on No BL Agent0 Transgress Credits; For Transgress 0. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_bl_ag0.tgr1
       [Stall on No BL Agent0 Transgress Credits; For Transgress 1. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_bl_ag0.tgr2
       [Stall on No BL Agent0 Transgress Credits; For Transgress 2. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_bl_ag0.tgr3
       [Stall on No BL Agent0 Transgress Credits; For Transgress 3. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_bl_ag0.tgr4
       [Stall on No BL Agent0 Transgress Credits; For Transgress 4. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_bl_ag0.tgr5
       [Stall on No BL Agent0 Transgress Credits; For Transgress 5. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_bl_ag1.tgr0
       [Stall on No BL Agent1 Transgress Credits; For Transgress 0. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_bl_ag1.tgr1
       [Stall on No BL Agent1 Transgress Credits; For Transgress 1. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_bl_ag1.tgr2
       [Stall on No BL Agent1 Transgress Credits; For Transgress 2. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_bl_ag1.tgr3
       [Stall on No BL Agent1 Transgress Credits; For Transgress 3. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_bl_ag1.tgr4
       [Stall on No BL Agent1 Transgress Credits; For Transgress 4. Unit:
        uncore_m2m]
  unc_m2m_stall_no_txr_horz_crd_bl_ag1.tgr5
       [Stall on No BL Agent1 Transgress Credits; For Transgress 5. Unit:
        uncore_m2m]
  unc_m2m_tgr_ad_credits
       [Number AD Ingress Credits. Unit: uncore_m2m]
  unc_m2m_tgr_bl_credits
       [Number BL Ingress Credits. Unit: uncore_m2m]
  unc_m2m_tracker_cycles_full.ch0
       [Tracker Cycles Full; Channel 0. Unit: uncore_m2m]
  unc_m2m_tracker_cycles_full.ch1
       [Tracker Cycles Full; Channel 1. Unit: uncore_m2m]
  unc_m2m_tracker_cycles_full.ch2
       [Tracker Cycles Full; Channel 2. Unit: uncore_m2m]
  unc_m2m_tracker_cycles_ne.ch0
       [Tracker Cycles Not Empty; Channel 0. Unit: uncore_m2m]
  unc_m2m_tracker_cycles_ne.ch1
       [Tracker Cycles Not Empty; Channel 1. Unit: uncore_m2m]
  unc_m2m_tracker_cycles_ne.ch2
       [Tracker Cycles Not Empty; Channel 2. Unit: uncore_m2m]
  unc_m2m_tracker_inserts.ch0
       [Tracker Inserts; Channel 0. Unit: uncore_m2m]
  unc_m2m_tracker_inserts.ch1
       [Tracker Inserts; Channel 1. Unit: uncore_m2m]
  unc_m2m_tracker_inserts.ch2
       [Tracker Inserts; Channel 2. Unit: uncore_m2m]
  unc_m2m_tracker_occupancy.ch0
       [Tracker Occupancy; Channel 0. Unit: uncore_m2m]
  unc_m2m_tracker_occupancy.ch1
       [Tracker Occupancy; Channel 1. Unit: uncore_m2m]
  unc_m2m_tracker_occupancy.ch2
       [Tracker Occupancy; Channel 2. Unit: uncore_m2m]
  unc_m2m_tracker_pending_occupancy
       [Data Pending Occupancy. Unit: uncore_m2m]
  unc_m2m_txc_ad_credit_occupancy
       [AD Egress (to CMS) Credits Occupancy. Unit: uncore_m2m]
  unc_m2m_txc_ad_credits_acquired
       [AD Egress (to CMS) Credit Acquired. Unit: uncore_m2m]
  unc_m2m_txc_ad_cycles_full
       [AD Egress (to CMS) Full. Unit: uncore_m2m]
  unc_m2m_txc_ad_cycles_ne
       [AD Egress (to CMS) Not Empty. Unit: uncore_m2m]
  unc_m2m_txc_ad_inserts
       [AD Egress (to CMS) Allocations. Unit: uncore_m2m]
  unc_m2m_txc_ad_no_credit_cycles
       [Cycles with No AD Egress (to CMS) Credits. Unit: uncore_m2m]
  unc_m2m_txc_ad_no_credit_stalled
       [Cycles Stalled with No AD Egress (to CMS) Credits. Unit: uncore_m2m]
  unc_m2m_txc_ad_occupancy
       [AD Egress (to CMS) Occupancy. Unit: uncore_m2m]
  unc_m2m_txc_ak.crd_cbo
       [Outbound Ring Transactions on AK; CRD Transactions to Cbo. Unit:
        uncore_m2m]
  unc_m2m_txc_ak.ndr
       [Outbound Ring Transactions on AK; NDR Transactions. Unit: uncore_m2m]
  unc_m2m_txc_ak_credit_occupancy.cms0
       [AK Egress (to CMS) Credits Occupancy; Common Mesh Stop - Near Side.
        Unit: uncore_m2m]
  unc_m2m_txc_ak_credit_occupancy.cms1
       [AK Egress (to CMS) Credits Occupancy; Common Mesh Stop - Far Side.
        Unit: uncore_m2m]
  unc_m2m_txc_ak_credits_acquired.cms0
       [AK Egress (to CMS) Credit Acquired; Common Mesh Stop - Near Side.
        Unit: uncore_m2m]
  unc_m2m_txc_ak_credits_acquired.cms1
       [AK Egress (to CMS) Credit Acquired; Common Mesh Stop - Far Side. Unit:
        uncore_m2m]
  unc_m2m_txc_ak_cycles_full.all
       [AK Egress (to CMS) Full; All. Unit: uncore_m2m]
  unc_m2m_txc_ak_cycles_full.cms0
       [AK Egress (to CMS) Full; Common Mesh Stop - Near Side. Unit:
        uncore_m2m]
  unc_m2m_txc_ak_cycles_full.cms1
       [AK Egress (to CMS) Full; Common Mesh Stop - Far Side. Unit: uncore_m2m]
  unc_m2m_txc_ak_cycles_full.rdcrd0
       [AK Egress (to CMS) Full; Read Credit Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_cycles_full.rdcrd1
       [AK Egress (to CMS) Full; Read Credit Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_cycles_full.wrcmp0
       [AK Egress (to CMS) Full; Write Compare Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_cycles_full.wrcmp1
       [AK Egress (to CMS) Full; Write Compare Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_cycles_full.wrcrd0
       [AK Egress (to CMS) Full; Write Credit Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_cycles_full.wrcrd1
       [AK Egress (to CMS) Full; Write Credit Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_cycles_ne.all
       [AK Egress (to CMS) Not Empty; All. Unit: uncore_m2m]
  unc_m2m_txc_ak_cycles_ne.cms0
       [AK Egress (to CMS) Not Empty; Common Mesh Stop - Near Side. Unit:
        uncore_m2m]
  unc_m2m_txc_ak_cycles_ne.cms1
       [AK Egress (to CMS) Not Empty; Common Mesh Stop - Far Side. Unit:
        uncore_m2m]
  unc_m2m_txc_ak_cycles_ne.rdcrd
       [AK Egress (to CMS) Not Empty; Read Credit Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_cycles_ne.wrcmp
       [AK Egress (to CMS) Not Empty; Write Compare Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_cycles_ne.wrcrd
       [AK Egress (to CMS) Not Empty; Write Credit Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_inserts.all
       [AK Egress (to CMS) Allocations; All. Unit: uncore_m2m]
  unc_m2m_txc_ak_inserts.cms0
       [AK Egress (to CMS) Allocations; Common Mesh Stop - Near Side. Unit:
        uncore_m2m]
  unc_m2m_txc_ak_inserts.cms1
       [AK Egress (to CMS) Allocations; Common Mesh Stop - Far Side. Unit:
        uncore_m2m]
  unc_m2m_txc_ak_inserts.pref_rd_cam_hit
       [AK Egress (to CMS) Allocations; Prefetch Read Cam Hit. Unit:
        uncore_m2m]
  unc_m2m_txc_ak_inserts.rdcrd
       [AK Egress (to CMS) Allocations; Read Credit Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_inserts.wrcmp
       [AK Egress (to CMS) Allocations; Write Compare Request. Unit:
        uncore_m2m]
  unc_m2m_txc_ak_inserts.wrcrd
       [AK Egress (to CMS) Allocations; Write Credit Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_no_credit_cycles.cms0
       [Cycles with No AK Egress (to CMS) Credits; Common Mesh Stop - Near
        Side. Unit: uncore_m2m]
  unc_m2m_txc_ak_no_credit_cycles.cms1
       [Cycles with No AK Egress (to CMS) Credits; Common Mesh Stop - Far
        Side. Unit: uncore_m2m]
  unc_m2m_txc_ak_no_credit_stalled.cms0
       [Cycles Stalled with No AK Egress (to CMS) Credits; Common Mesh Stop -
        Near Side. Unit: uncore_m2m]
  unc_m2m_txc_ak_no_credit_stalled.cms1
       [Cycles Stalled with No AK Egress (to CMS) Credits; Common Mesh Stop -
        Far Side. Unit: uncore_m2m]
  unc_m2m_txc_ak_occupancy.all
       [AK Egress (to CMS) Occupancy; All. Unit: uncore_m2m]
  unc_m2m_txc_ak_occupancy.cms0
       [AK Egress (to CMS) Occupancy; Common Mesh Stop - Near Side. Unit:
        uncore_m2m]
  unc_m2m_txc_ak_occupancy.cms1
       [AK Egress (to CMS) Occupancy; Common Mesh Stop - Far Side. Unit:
        uncore_m2m]
  unc_m2m_txc_ak_occupancy.rdcrd
       [AK Egress (to CMS) Occupancy; Read Credit Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_occupancy.wrcmp
       [AK Egress (to CMS) Occupancy; Write Compare Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_occupancy.wrcrd
       [AK Egress (to CMS) Occupancy; Write Credit Request. Unit: uncore_m2m]
  unc_m2m_txc_ak_sideband.rd
       [AK Egress (to CMS) Sideband. Unit: uncore_m2m]
  unc_m2m_txc_ak_sideband.wr
       [AK Egress (to CMS) Sideband. Unit: uncore_m2m]
  unc_m2m_txc_bl.drs_cache
       [Outbound DRS Ring Transactions to Cache; Data to Cache. Unit:
        uncore_m2m]
  unc_m2m_txc_bl.drs_core
       [Outbound DRS Ring Transactions to Cache; Data to Core. Unit:
        uncore_m2m]
  unc_m2m_txc_bl.drs_upi
       [Outbound DRS Ring Transactions to Cache; Data to QPI. Unit: uncore_m2m]
  unc_m2m_txc_bl_credit_occupancy.cms0
       [BL Egress (to CMS) Credits Occupancy; Common Mesh Stop - Near Side.
        Unit: uncore_m2m]
  unc_m2m_txc_bl_credit_occupancy.cms1
       [BL Egress (to CMS) Credits Occupancy; Common Mesh Stop - Far Side.
        Unit: uncore_m2m]
  unc_m2m_txc_bl_credits_acquired.cms0
       [BL Egress (to CMS) Credit Acquired; Common Mesh Stop - Near Side.
        Unit: uncore_m2m]
  unc_m2m_txc_bl_credits_acquired.cms1
       [BL Egress (to CMS) Credit Acquired; Common Mesh Stop - Far Side. Unit:
        uncore_m2m]
  unc_m2m_txc_bl_cycles_full.all
       [BL Egress (to CMS) Full; All. Unit: uncore_m2m]
  unc_m2m_txc_bl_cycles_full.cms0
       [BL Egress (to CMS) Full; Common Mesh Stop - Near Side. Unit:
        uncore_m2m]
  unc_m2m_txc_bl_cycles_full.cms1
       [BL Egress (to CMS) Full; Common Mesh Stop - Far Side. Unit: uncore_m2m]
  unc_m2m_txc_bl_cycles_ne.all
       [BL Egress (to CMS) Not Empty; All. Unit: uncore_m2m]
  unc_m2m_txc_bl_cycles_ne.cms0
       [BL Egress (to CMS) Not Empty; Common Mesh Stop - Near Side. Unit:
        uncore_m2m]
  unc_m2m_txc_bl_cycles_ne.cms1
       [BL Egress (to CMS) Not Empty; Common Mesh Stop - Far Side. Unit:
        uncore_m2m]
  unc_m2m_txc_bl_inserts.all
       [BL Egress (to CMS) Allocations; All. Unit: uncore_m2m]
  unc_m2m_txc_bl_inserts.cms0
       [BL Egress (to CMS) Allocations; Common Mesh Stop - Near Side. Unit:
        uncore_m2m]
  unc_m2m_txc_bl_inserts.cms1
       [BL Egress (to CMS) Allocations; Common Mesh Stop - Far Side. Unit:
        uncore_m2m]
  unc_m2m_txc_bl_no_credit_cycles.cms0
       [Cycles with No BL Egress (to CMS) Credits; Common Mesh Stop - Near
        Side. Unit: uncore_m2m]
  unc_m2m_txc_bl_no_credit_cycles.cms1
       [Cycles with No BL Egress (to CMS) Credits; Common Mesh Stop - Far
        Side. Unit: uncore_m2m]
  unc_m2m_txc_bl_no_credit_stalled.cms0
       [Cycles Stalled with No BL Egress (to CMS) Credits; Common Mesh Stop -
        Near Side. Unit: uncore_m2m]
  unc_m2m_txc_bl_no_credit_stalled.cms1
       [Cycles Stalled with No BL Egress (to CMS) Credits; Common Mesh Stop -
        Far Side. Unit: uncore_m2m]
  unc_m2m_txc_bl_occupancy.all
       [BL Egress (to CMS) Occupancy; All. Unit: uncore_m2m]
  unc_m2m_txc_bl_occupancy.cms0
       [BL Egress (to CMS) Occupancy; Common Mesh Stop - Near Side. Unit:
        uncore_m2m]
  unc_m2m_txc_bl_occupancy.cms1
       [BL Egress (to CMS) Occupancy; Common Mesh Stop - Far Side. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_ads_used.ad_bnc
       [CMS Horizontal ADS Used; AD - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_ads_used.ad_crd
       [CMS Horizontal ADS Used; AD - Credit. Unit: uncore_m2m]
  unc_m2m_txr_horz_ads_used.ak_bnc
       [CMS Horizontal ADS Used; AK - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_ads_used.bl_bnc
       [CMS Horizontal ADS Used; BL - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_ads_used.bl_crd
       [CMS Horizontal ADS Used; BL - Credit. Unit: uncore_m2m]
  unc_m2m_txr_horz_bypass.ad_bnc
       [CMS Horizontal Bypass Used; AD - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_bypass.ad_crd
       [CMS Horizontal Bypass Used; AD - Credit. Unit: uncore_m2m]
  unc_m2m_txr_horz_bypass.ak_bnc
       [CMS Horizontal Bypass Used; AK - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_bypass.bl_bnc
       [CMS Horizontal Bypass Used; BL - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_bypass.bl_crd
       [CMS Horizontal Bypass Used; BL - Credit. Unit: uncore_m2m]
  unc_m2m_txr_horz_bypass.iv_bnc
       [CMS Horizontal Bypass Used; IV - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_cycles_full.ad_bnc
       [Cycles CMS Horizontal Egress Queue is Full; AD - Bounce. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_cycles_full.ad_crd
       [Cycles CMS Horizontal Egress Queue is Full; AD - Credit. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_cycles_full.ak_bnc
       [Cycles CMS Horizontal Egress Queue is Full; AK - Bounce. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_cycles_full.bl_bnc
       [Cycles CMS Horizontal Egress Queue is Full; BL - Bounce. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_cycles_full.bl_crd
       [Cycles CMS Horizontal Egress Queue is Full; BL - Credit. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_cycles_full.iv_bnc
       [Cycles CMS Horizontal Egress Queue is Full; IV - Bounce. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_cycles_ne.ad_bnc
       [Cycles CMS Horizontal Egress Queue is Not Empty; AD - Bounce. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_cycles_ne.ad_crd
       [Cycles CMS Horizontal Egress Queue is Not Empty; AD - Credit. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_cycles_ne.ak_bnc
       [Cycles CMS Horizontal Egress Queue is Not Empty; AK - Bounce. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_cycles_ne.bl_bnc
       [Cycles CMS Horizontal Egress Queue is Not Empty; BL - Bounce. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_cycles_ne.bl_crd
       [Cycles CMS Horizontal Egress Queue is Not Empty; BL - Credit. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_cycles_ne.iv_bnc
       [Cycles CMS Horizontal Egress Queue is Not Empty; IV - Bounce. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_inserts.ad_bnc
       [CMS Horizontal Egress Inserts; AD - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_inserts.ad_crd
       [CMS Horizontal Egress Inserts; AD - Credit. Unit: uncore_m2m]
  unc_m2m_txr_horz_inserts.ak_bnc
       [CMS Horizontal Egress Inserts; AK - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_inserts.bl_bnc
       [CMS Horizontal Egress Inserts; BL - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_inserts.bl_crd
       [CMS Horizontal Egress Inserts; BL - Credit. Unit: uncore_m2m]
  unc_m2m_txr_horz_inserts.iv_bnc
       [CMS Horizontal Egress Inserts; IV - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_nack.ad_bnc
       [CMS Horizontal Egress NACKs; AD - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_nack.ad_crd
       [CMS Horizontal Egress NACKs; AD - Credit. Unit: uncore_m2m]
  unc_m2m_txr_horz_nack.ak_bnc
       [CMS Horizontal Egress NACKs; AK - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_nack.bl_bnc
       [CMS Horizontal Egress NACKs; BL - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_nack.bl_crd
       [CMS Horizontal Egress NACKs; BL - Credit. Unit: uncore_m2m]
  unc_m2m_txr_horz_nack.iv_bnc
       [CMS Horizontal Egress NACKs; IV - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_occupancy.ad_bnc
       [CMS Horizontal Egress Occupancy; AD - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_occupancy.ad_crd
       [CMS Horizontal Egress Occupancy; AD - Credit. Unit: uncore_m2m]
  unc_m2m_txr_horz_occupancy.ak_bnc
       [CMS Horizontal Egress Occupancy; AK - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_occupancy.bl_bnc
       [CMS Horizontal Egress Occupancy; BL - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_occupancy.bl_crd
       [CMS Horizontal Egress Occupancy; BL - Credit. Unit: uncore_m2m]
  unc_m2m_txr_horz_occupancy.iv_bnc
       [CMS Horizontal Egress Occupancy; IV - Bounce. Unit: uncore_m2m]
  unc_m2m_txr_horz_starved.ad_bnc
       [CMS Horizontal Egress Injection Starvation; AD - Bounce. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_starved.ak_bnc
       [CMS Horizontal Egress Injection Starvation; AK - Bounce. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_starved.bl_bnc
       [CMS Horizontal Egress Injection Starvation; BL - Bounce. Unit:
        uncore_m2m]
  unc_m2m_txr_horz_starved.iv_bnc
       [CMS Horizontal Egress Injection Starvation; IV - Bounce. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_ads_used.ad_ag0
       [CMS Vertical ADS Used; AD - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_ads_used.ad_ag1
       [CMS Vertical ADS Used; AD - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_ads_used.ak_ag0
       [CMS Vertical ADS Used; AK - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_ads_used.ak_ag1
       [CMS Vertical ADS Used; AK - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_ads_used.bl_ag0
       [CMS Vertical ADS Used; BL - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_ads_used.bl_ag1
       [CMS Vertical ADS Used; BL - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_bypass.ad_ag0
       [CMS Vertical ADS Used; AD - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_bypass.ad_ag1
       [CMS Vertical ADS Used; AD - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_bypass.ak_ag0
       [CMS Vertical ADS Used; AK - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_bypass.ak_ag1
       [CMS Vertical ADS Used; AK - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_bypass.bl_ag0
       [CMS Vertical ADS Used; BL - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_bypass.bl_ag1
       [CMS Vertical ADS Used; BL - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_bypass.iv
       [CMS Vertical ADS Used; IV. Unit: uncore_m2m]
  unc_m2m_txr_vert_cycles_full.ad_ag0
       [Cycles CMS Vertical Egress Queue Is Full; AD - Agent 0. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_cycles_full.ad_ag1
       [Cycles CMS Vertical Egress Queue Is Full; AD - Agent 1. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_cycles_full.ak_ag0
       [Cycles CMS Vertical Egress Queue Is Full; AK - Agent 0. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_cycles_full.ak_ag1
       [Cycles CMS Vertical Egress Queue Is Full; AK - Agent 1. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_cycles_full.bl_ag0
       [Cycles CMS Vertical Egress Queue Is Full; BL - Agent 0. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_cycles_full.bl_ag1
       [Cycles CMS Vertical Egress Queue Is Full; BL - Agent 1. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_cycles_full.iv
       [Cycles CMS Vertical Egress Queue Is Full; IV. Unit: uncore_m2m]
  unc_m2m_txr_vert_cycles_ne.ad_ag0
       [Cycles CMS Vertical Egress Queue Is Not Empty; AD - Agent 0. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_cycles_ne.ad_ag1
       [Cycles CMS Vertical Egress Queue Is Not Empty; AD - Agent 1. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_cycles_ne.ak_ag0
       [Cycles CMS Vertical Egress Queue Is Not Empty; AK - Agent 0. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_cycles_ne.ak_ag1
       [Cycles CMS Vertical Egress Queue Is Not Empty; AK - Agent 1. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_cycles_ne.bl_ag0
       [Cycles CMS Vertical Egress Queue Is Not Empty; BL - Agent 0. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_cycles_ne.bl_ag1
       [Cycles CMS Vertical Egress Queue Is Not Empty; BL - Agent 1. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_cycles_ne.iv
       [Cycles CMS Vertical Egress Queue Is Not Empty; IV. Unit: uncore_m2m]
  unc_m2m_txr_vert_inserts.ad_ag0
       [CMS Vert Egress Allocations; AD - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_inserts.ad_ag1
       [CMS Vert Egress Allocations; AD - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_inserts.ak_ag0
       [CMS Vert Egress Allocations; AK - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_inserts.ak_ag1
       [CMS Vert Egress Allocations; AK - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_inserts.bl_ag0
       [CMS Vert Egress Allocations; BL - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_inserts.bl_ag1
       [CMS Vert Egress Allocations; BL - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_inserts.iv
       [CMS Vert Egress Allocations; IV. Unit: uncore_m2m]
  unc_m2m_txr_vert_nack.ad_ag0
       [CMS Vertical Egress NACKs; AD - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_nack.ad_ag1
       [CMS Vertical Egress NACKs; AD - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_nack.ak_ag0
       [CMS Vertical Egress NACKs; AK - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_nack.ak_ag1
       [CMS Vertical Egress NACKs; AK - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_nack.bl_ag0
       [CMS Vertical Egress NACKs; BL - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_nack.bl_ag1
       [CMS Vertical Egress NACKs; BL - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_nack.iv
       [CMS Vertical Egress NACKs; IV. Unit: uncore_m2m]
  unc_m2m_txr_vert_occupancy.ad_ag0
       [CMS Vert Egress Occupancy; AD - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_occupancy.ad_ag1
       [CMS Vert Egress Occupancy; AD - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_occupancy.ak_ag0
       [CMS Vert Egress Occupancy; AK - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_occupancy.ak_ag1
       [CMS Vert Egress Occupancy; AK - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_occupancy.bl_ag0
       [CMS Vert Egress Occupancy; BL - Agent 0. Unit: uncore_m2m]
  unc_m2m_txr_vert_occupancy.bl_ag1
       [CMS Vert Egress Occupancy; BL - Agent 1. Unit: uncore_m2m]
  unc_m2m_txr_vert_occupancy.iv
       [CMS Vert Egress Occupancy; IV. Unit: uncore_m2m]
  unc_m2m_txr_vert_starved.ad_ag0
       [CMS Vertical Egress Injection Starvation; AD - Agent 0. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_starved.ad_ag1
       [CMS Vertical Egress Injection Starvation; AD - Agent 1. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_starved.ak_ag0
       [CMS Vertical Egress Injection Starvation; AK - Agent 0. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_starved.ak_ag1
       [CMS Vertical Egress Injection Starvation; AK - Agent 1. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_starved.bl_ag0
       [CMS Vertical Egress Injection Starvation; BL - Agent 0. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_starved.bl_ag1
       [CMS Vertical Egress Injection Starvation; BL - Agent 1. Unit:
        uncore_m2m]
  unc_m2m_txr_vert_starved.iv
       [CMS Vertical Egress Injection Starvation; IV. Unit: uncore_m2m]
  unc_m2m_vert_ring_ad_in_use.dn_even
       [Vertical AD Ring In Use; Down and Even. Unit: uncore_m2m]
  unc_m2m_vert_ring_ad_in_use.dn_odd
       [Vertical AD Ring In Use; Down and Odd. Unit: uncore_m2m]
  unc_m2m_vert_ring_ad_in_use.up_even
       [Vertical AD Ring In Use; Up and Even. Unit: uncore_m2m]
  unc_m2m_vert_ring_ad_in_use.up_odd
       [Vertical AD Ring In Use; Up and Odd. Unit: uncore_m2m]
  unc_m2m_vert_ring_ak_in_use.dn_even
       [Vertical AK Ring In Use; Down and Even. Unit: uncore_m2m]
  unc_m2m_vert_ring_ak_in_use.dn_odd
       [Vertical AK Ring In Use; Down and Odd. Unit: uncore_m2m]
  unc_m2m_vert_ring_ak_in_use.up_even
       [Vertical AK Ring In Use; Up and Even. Unit: uncore_m2m]
  unc_m2m_vert_ring_ak_in_use.up_odd
       [Vertical AK Ring In Use; Up and Odd. Unit: uncore_m2m]
  unc_m2m_vert_ring_bl_in_use.dn_even
       [Vertical BL Ring in Use; Down and Even. Unit: uncore_m2m]
  unc_m2m_vert_ring_bl_in_use.dn_odd
       [Vertical BL Ring in Use; Down and Odd. Unit: uncore_m2m]
  unc_m2m_vert_ring_bl_in_use.up_even
       [Vertical BL Ring in Use; Up and Even. Unit: uncore_m2m]
  unc_m2m_vert_ring_bl_in_use.up_odd
       [Vertical BL Ring in Use; Up and Odd. Unit: uncore_m2m]
  unc_m2m_vert_ring_iv_in_use.dn
       [Vertical IV Ring in Use; Down. Unit: uncore_m2m]
  unc_m2m_vert_ring_iv_in_use.up
       [Vertical IV Ring in Use; Up. Unit: uncore_m2m]
  unc_m2m_wpq_cycles_reg_credits.chn0
       [M2M->iMC WPQ Cycles w/Credits - Regular; Channel 0. Unit: uncore_m2m]
  unc_m2m_wpq_cycles_reg_credits.chn1
       [M2M->iMC WPQ Cycles w/Credits - Regular; Channel 1. Unit: uncore_m2m]
  unc_m2m_wpq_cycles_reg_credits.chn2
       [M2M->iMC WPQ Cycles w/Credits - Regular; Channel 2. Unit: uncore_m2m]
  unc_m2m_wpq_cycles_spec_credits.chn0
       [M2M->iMC WPQ Cycles w/Credits - Special; Channel 0. Unit: uncore_m2m]
  unc_m2m_wpq_cycles_spec_credits.chn1
       [M2M->iMC WPQ Cycles w/Credits - Special; Channel 1. Unit: uncore_m2m]
  unc_m2m_wpq_cycles_spec_credits.chn2
       [M2M->iMC WPQ Cycles w/Credits - Special; Channel 2. Unit: uncore_m2m]
  unc_m2m_write_tracker_cycles_full.ch0
       [Write Tracker Cycles Full; Channel 0. Unit: uncore_m2m]
  unc_m2m_write_tracker_cycles_full.ch1
       [Write Tracker Cycles Full; Channel 1. Unit: uncore_m2m]
  unc_m2m_write_tracker_cycles_full.ch2
       [Write Tracker Cycles Full; Channel 2. Unit: uncore_m2m]
  unc_m2m_write_tracker_cycles_ne.ch0
       [Write Tracker Cycles Not Empty; Channel 0. Unit: uncore_m2m]
  unc_m2m_write_tracker_cycles_ne.ch1
       [Write Tracker Cycles Not Empty; Channel 1. Unit: uncore_m2m]
  unc_m2m_write_tracker_cycles_ne.ch2
       [Write Tracker Cycles Not Empty; Channel 2. Unit: uncore_m2m]
  unc_m2m_write_tracker_inserts.ch0
       [Write Tracker Inserts; Channel 0. Unit: uncore_m2m]
  unc_m2m_write_tracker_inserts.ch1
       [Write Tracker Inserts; Channel 1. Unit: uncore_m2m]
  unc_m2m_write_tracker_inserts.ch2
       [Write Tracker Inserts; Channel 2. Unit: uncore_m2m]
  unc_m2m_write_tracker_occupancy.ch0
       [Write Tracker Occupancy; Channel 0. Unit: uncore_m2m]
  unc_m2m_write_tracker_occupancy.ch1
       [Write Tracker Occupancy; Channel 1. Unit: uncore_m2m]
  unc_m2m_write_tracker_occupancy.ch2
       [Write Tracker Occupancy; Channel 2. Unit: uncore_m2m]
  unc_m3upi_ag0_ad_crd_acquired.tgr0
       [CMS Agent0 AD Credits Acquired; For Transgress 0. Unit: uncore_m3upi]
  unc_m3upi_ag0_ad_crd_acquired.tgr1
       [CMS Agent0 AD Credits Acquired; For Transgress 1. Unit: uncore_m3upi]
  unc_m3upi_ag0_ad_crd_acquired.tgr2
       [CMS Agent0 AD Credits Acquired; For Transgress 2. Unit: uncore_m3upi]
  unc_m3upi_ag0_ad_crd_acquired.tgr3
       [CMS Agent0 AD Credits Acquired; For Transgress 3. Unit: uncore_m3upi]
  unc_m3upi_ag0_ad_crd_acquired.tgr4
       [CMS Agent0 AD Credits Acquired; For Transgress 4. Unit: uncore_m3upi]
  unc_m3upi_ag0_ad_crd_acquired.tgr5
       [CMS Agent0 AD Credits Acquired; For Transgress 5. Unit: uncore_m3upi]
  unc_m3upi_ag0_ad_crd_occupancy.tgr0
       [CMS Agent0 AD Credits Occupancy; For Transgress 0. Unit: uncore_m3upi]
  unc_m3upi_ag0_ad_crd_occupancy.tgr1
       [CMS Agent0 AD Credits Occupancy; For Transgress 1. Unit: uncore_m3upi]
  unc_m3upi_ag0_ad_crd_occupancy.tgr2
       [CMS Agent0 AD Credits Occupancy; For Transgress 2. Unit: uncore_m3upi]
  unc_m3upi_ag0_ad_crd_occupancy.tgr3
       [CMS Agent0 AD Credits Occupancy; For Transgress 3. Unit: uncore_m3upi]
  unc_m3upi_ag0_ad_crd_occupancy.tgr4
       [CMS Agent0 AD Credits Occupancy; For Transgress 4. Unit: uncore_m3upi]
  unc_m3upi_ag0_ad_crd_occupancy.tgr5
       [CMS Agent0 AD Credits Occupancy; For Transgress 5. Unit: uncore_m3upi]
  unc_m3upi_ag0_bl_crd_acquired.tgr0
       [CMS Agent0 BL Credits Acquired; For Transgress 0. Unit: uncore_m3upi]
  unc_m3upi_ag0_bl_crd_acquired.tgr1
       [CMS Agent0 BL Credits Acquired; For Transgress 1. Unit: uncore_m3upi]
  unc_m3upi_ag0_bl_crd_acquired.tgr2
       [CMS Agent0 BL Credits Acquired; For Transgress 2. Unit: uncore_m3upi]
  unc_m3upi_ag0_bl_crd_acquired.tgr3
       [CMS Agent0 BL Credits Acquired; For Transgress 3. Unit: uncore_m3upi]
  unc_m3upi_ag0_bl_crd_acquired.tgr4
       [CMS Agent0 BL Credits Acquired; For Transgress 4. Unit: uncore_m3upi]
  unc_m3upi_ag0_bl_crd_acquired.tgr5
       [CMS Agent0 BL Credits Acquired; For Transgress 5. Unit: uncore_m3upi]
  unc_m3upi_ag0_bl_crd_occupancy.tgr0
       [CMS Agent0 BL Credits Occupancy; For Transgress 0. Unit: uncore_m3upi]
  unc_m3upi_ag0_bl_crd_occupancy.tgr1
       [CMS Agent0 BL Credits Occupancy; For Transgress 1. Unit: uncore_m3upi]
  unc_m3upi_ag0_bl_crd_occupancy.tgr2
       [CMS Agent0 BL Credits Occupancy; For Transgress 2. Unit: uncore_m3upi]
  unc_m3upi_ag0_bl_crd_occupancy.tgr3
       [CMS Agent0 BL Credits Occupancy; For Transgress 3. Unit: uncore_m3upi]
  unc_m3upi_ag0_bl_crd_occupancy.tgr4
       [CMS Agent0 BL Credits Occupancy; For Transgress 4. Unit: uncore_m3upi]
  unc_m3upi_ag0_bl_crd_occupancy.tgr5
       [CMS Agent0 BL Credits Occupancy; For Transgress 5. Unit: uncore_m3upi]
  unc_m3upi_ag1_ad_crd_acquired.tgr0
       [CMS Agent1 AD Credits Acquired; For Transgress 0. Unit: uncore_m3upi]
  unc_m3upi_ag1_ad_crd_acquired.tgr1
       [CMS Agent1 AD Credits Acquired; For Transgress 1. Unit: uncore_m3upi]
  unc_m3upi_ag1_ad_crd_acquired.tgr2
       [CMS Agent1 AD Credits Acquired; For Transgress 2. Unit: uncore_m3upi]
  unc_m3upi_ag1_ad_crd_acquired.tgr3
       [CMS Agent1 AD Credits Acquired; For Transgress 3. Unit: uncore_m3upi]
  unc_m3upi_ag1_ad_crd_acquired.tgr4
       [CMS Agent1 AD Credits Acquired; For Transgress 4. Unit: uncore_m3upi]
  unc_m3upi_ag1_ad_crd_acquired.tgr5
       [CMS Agent1 AD Credits Acquired; For Transgress 5. Unit: uncore_m3upi]
  unc_m3upi_ag1_ad_crd_occupancy.tgr0
       [CMS Agent1 AD Credits Occupancy; For Transgress 0. Unit: uncore_m3upi]
  unc_m3upi_ag1_ad_crd_occupancy.tgr1
       [CMS Agent1 AD Credits Occupancy; For Transgress 1. Unit: uncore_m3upi]
  unc_m3upi_ag1_ad_crd_occupancy.tgr2
       [CMS Agent1 AD Credits Occupancy; For Transgress 2. Unit: uncore_m3upi]
  unc_m3upi_ag1_ad_crd_occupancy.tgr3
       [CMS Agent1 AD Credits Occupancy; For Transgress 3. Unit: uncore_m3upi]
  unc_m3upi_ag1_ad_crd_occupancy.tgr4
       [CMS Agent1 AD Credits Occupancy; For Transgress 4. Unit: uncore_m3upi]
  unc_m3upi_ag1_ad_crd_occupancy.tgr5
       [CMS Agent1 AD Credits Occupancy; For Transgress 5. Unit: uncore_m3upi]
  unc_m3upi_ag1_bl_crd_occupancy.tgr0
       [CMS Agent1 BL Credits Occupancy; For Transgress 0. Unit: uncore_m3upi]
  unc_m3upi_ag1_bl_crd_occupancy.tgr1
       [CMS Agent1 BL Credits Occupancy; For Transgress 1. Unit: uncore_m3upi]
  unc_m3upi_ag1_bl_crd_occupancy.tgr2
       [CMS Agent1 BL Credits Occupancy; For Transgress 2. Unit: uncore_m3upi]
  unc_m3upi_ag1_bl_crd_occupancy.tgr3
       [CMS Agent1 BL Credits Occupancy; For Transgress 3. Unit: uncore_m3upi]
  unc_m3upi_ag1_bl_crd_occupancy.tgr4
       [CMS Agent1 BL Credits Occupancy; For Transgress 4. Unit: uncore_m3upi]
  unc_m3upi_ag1_bl_crd_occupancy.tgr5
       [CMS Agent1 BL Credits Occupancy; For Transgress 5. Unit: uncore_m3upi]
  unc_m3upi_ag1_bl_credits_acquired.tgr0
       [CMS Agent1 BL Credits Acquired; For Transgress 0. Unit: uncore_m3upi]
  unc_m3upi_ag1_bl_credits_acquired.tgr1
       [CMS Agent1 BL Credits Acquired; For Transgress 1. Unit: uncore_m3upi]
  unc_m3upi_ag1_bl_credits_acquired.tgr2
       [CMS Agent1 BL Credits Acquired; For Transgress 2. Unit: uncore_m3upi]
  unc_m3upi_ag1_bl_credits_acquired.tgr3
       [CMS Agent1 BL Credits Acquired; For Transgress 3. Unit: uncore_m3upi]
  unc_m3upi_ag1_bl_credits_acquired.tgr4
       [CMS Agent1 BL Credits Acquired; For Transgress 4. Unit: uncore_m3upi]
  unc_m3upi_ag1_bl_credits_acquired.tgr5
       [CMS Agent1 BL Credits Acquired; For Transgress 5. Unit: uncore_m3upi]
  unc_m3upi_cha_ad_credits_empty.req
       [CBox AD Credits Empty; Requests. Unit: uncore_m3upi]
  unc_m3upi_cha_ad_credits_empty.snp
       [CBox AD Credits Empty; Snoops. Unit: uncore_m3upi]
  unc_m3upi_cha_ad_credits_empty.vna
       [CBox AD Credits Empty; VNA Messages. Unit: uncore_m3upi]
  unc_m3upi_cha_ad_credits_empty.wb
       [CBox AD Credits Empty; Writebacks. Unit: uncore_m3upi]
  unc_m3upi_clockticks
       [Number of uclks in domain. Unit: uncore_m3upi]
  unc_m3upi_cms_clockticks
       [CMS Clockticks. Unit: uncore_m3upi]
  unc_m3upi_d2c_sent
       [D2C Sent. Unit: uncore_m3upi]
  unc_m3upi_d2u_sent
       [D2U Sent. Unit: uncore_m3upi]
  unc_m3upi_egress_ordering.iv_snoopgo_dn
       [Egress Blocking due to Ordering requirements; Down. Unit: uncore_m3upi]
  unc_m3upi_egress_ordering.iv_snoopgo_up
       [Egress Blocking due to Ordering requirements; Up. Unit: uncore_m3upi]
  unc_m3upi_fast_asserted.horz
       [FaST wire asserted; Horizontal. Unit: uncore_m3upi]
  unc_m3upi_fast_asserted.vert
       [FaST wire asserted; Vertical. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_ad_in_use.left_even
       [Horizontal AD Ring In Use; Left and Even. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_ad_in_use.left_odd
       [Horizontal AD Ring In Use; Left and Odd. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_ad_in_use.right_even
       [Horizontal AD Ring In Use; Right and Even. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_ad_in_use.right_odd
       [Horizontal AD Ring In Use; Right and Odd. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_ak_in_use.left_even
       [Horizontal AK Ring In Use; Left and Even. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_ak_in_use.left_odd
       [Horizontal AK Ring In Use; Left and Odd. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_ak_in_use.right_even
       [Horizontal AK Ring In Use; Right and Even. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_ak_in_use.right_odd
       [Horizontal AK Ring In Use; Right and Odd. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_bl_in_use.left_even
       [Horizontal BL Ring in Use; Left and Even. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_bl_in_use.left_odd
       [Horizontal BL Ring in Use; Left and Odd. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_bl_in_use.right_even
       [Horizontal BL Ring in Use; Right and Even. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_bl_in_use.right_odd
       [Horizontal BL Ring in Use; Right and Odd. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_iv_in_use.left
       [Horizontal IV Ring in Use; Left. Unit: uncore_m3upi]
  unc_m3upi_horz_ring_iv_in_use.right
       [Horizontal IV Ring in Use; Right. Unit: uncore_m3upi]
  unc_m3upi_m2_bl_credits_empty.iio0_iio1_ncb
       [M2 BL Credits Empty; IIO0 and IIO1 share the same ring destination. (1
        VN0 credit only). Unit: uncore_m3upi]
  unc_m3upi_m2_bl_credits_empty.iio2_ncb
       [M2 BL Credits Empty; IIO2. Unit: uncore_m3upi]
  unc_m3upi_m2_bl_credits_empty.iio3_ncb
       [M2 BL Credits Empty; IIO3. Unit: uncore_m3upi]
  unc_m3upi_m2_bl_credits_empty.iio4_ncb
       [M2 BL Credits Empty; IIO4. Unit: uncore_m3upi]
  unc_m3upi_m2_bl_credits_empty.iio5_ncb
       [M2 BL Credits Empty; IIO5. Unit: uncore_m3upi]
  unc_m3upi_m2_bl_credits_empty.ncs
       [M2 BL Credits Empty; All IIO targets for NCS are in single mask. ORs
        them together. Unit: uncore_m3upi]
  unc_m3upi_m2_bl_credits_empty.ncs_sel
       [M2 BL Credits Empty; Selected M2p BL NCS credits. Unit: uncore_m3upi]
  unc_m3upi_multi_slot_rcvd.ad_slot0
       [Multi Slot Flit Received; AD - Slot 0. Unit: uncore_m3upi]
  unc_m3upi_multi_slot_rcvd.ad_slot1
       [Multi Slot Flit Received; AD - Slot 1. Unit: uncore_m3upi]
  unc_m3upi_multi_slot_rcvd.ad_slot2
       [Multi Slot Flit Received; AD - Slot 2. Unit: uncore_m3upi]
  unc_m3upi_multi_slot_rcvd.ak_slot0
       [Multi Slot Flit Received; AK - Slot 0. Unit: uncore_m3upi]
  unc_m3upi_multi_slot_rcvd.ak_slot2
       [Multi Slot Flit Received; AK - Slot 2. Unit: uncore_m3upi]
  unc_m3upi_multi_slot_rcvd.bl_slot0
       [Multi Slot Flit Received; BL - Slot 0. Unit: uncore_m3upi]
  unc_m3upi_ring_bounces_horz.ad
       [Messages that bounced on the Horizontal Ring.; AD. Unit: uncore_m3upi]
  unc_m3upi_ring_bounces_horz.ak
       [Messages that bounced on the Horizontal Ring.; AK. Unit: uncore_m3upi]
  unc_m3upi_ring_bounces_horz.bl
       [Messages that bounced on the Horizontal Ring.; BL. Unit: uncore_m3upi]
  unc_m3upi_ring_bounces_horz.iv
       [Messages that bounced on the Horizontal Ring.; IV. Unit: uncore_m3upi]
  unc_m3upi_ring_bounces_vert.ad
       [Messages that bounced on the Vertical Ring.; AD. Unit: uncore_m3upi]
  unc_m3upi_ring_bounces_vert.ak
       [Messages that bounced on the Vertical Ring.; Acknowledgements to core.
        Unit: uncore_m3upi]
  unc_m3upi_ring_bounces_vert.bl
       [Messages that bounced on the Vertical Ring.; Data Responses to core.
        Unit: uncore_m3upi]
  unc_m3upi_ring_bounces_vert.iv
       [Messages that bounced on the Vertical Ring.; Snoops of processor's
        cache. Unit: uncore_m3upi]
  unc_m3upi_ring_sink_starved_horz.ad
       [Sink Starvation on Horizontal Ring; AD. Unit: uncore_m3upi]
  unc_m3upi_ring_sink_starved_horz.ak
       [Sink Starvation on Horizontal Ring; AK. Unit: uncore_m3upi]
  unc_m3upi_ring_sink_starved_horz.ak_ag1
       [Sink Starvation on Horizontal Ring; Acknowledgements to Agent 1. Unit:
        uncore_m3upi]
  unc_m3upi_ring_sink_starved_horz.bl
       [Sink Starvation on Horizontal Ring; BL. Unit: uncore_m3upi]
  unc_m3upi_ring_sink_starved_horz.iv
       [Sink Starvation on Horizontal Ring; IV. Unit: uncore_m3upi]
  unc_m3upi_ring_sink_starved_vert.ad
       [Sink Starvation on Vertical Ring; AD. Unit: uncore_m3upi]
  unc_m3upi_ring_sink_starved_vert.ak
       [Sink Starvation on Vertical Ring; Acknowledgements to core. Unit:
        uncore_m3upi]
  unc_m3upi_ring_sink_starved_vert.bl
       [Sink Starvation on Vertical Ring; Data Responses to core. Unit:
        uncore_m3upi]
  unc_m3upi_ring_sink_starved_vert.iv
       [Sink Starvation on Vertical Ring; Snoops of processor's cache. Unit:
        uncore_m3upi]
  unc_m3upi_ring_src_thrtl
       [Source Throttle. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn0.ad_req
       [Lost Arb for VN0; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn0.ad_rsp
       [Lost Arb for VN0; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn0.ad_snp
       [Lost Arb for VN0; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn0.bl_ncb
       [Lost Arb for VN0; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn0.bl_ncs
       [Lost Arb for VN0; NCS on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn0.bl_rsp
       [Lost Arb for VN0; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn0.bl_wb
       [Lost Arb for VN0; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn1.ad_req
       [Lost Arb for VN1; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn1.ad_rsp
       [Lost Arb for VN1; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn1.ad_snp
       [Lost Arb for VN1; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn1.bl_ncb
       [Lost Arb for VN1; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn1.bl_ncs
       [Lost Arb for VN1; NCS on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn1.bl_rsp
       [Lost Arb for VN1; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_lost_vn1.bl_wb
       [Lost Arb for VN1; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_misc.adbl_parallel_win
       [Arb Miscellaneous; AD, BL Parallel Win. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_misc.no_prog_ad_vn0
       [Arb Miscellaneous; No Progress on Pending AD VN0. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_misc.no_prog_ad_vn1
       [Arb Miscellaneous; No Progress on Pending AD VN1. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_misc.no_prog_bl_vn0
       [Arb Miscellaneous; No Progress on Pending BL VN0. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_misc.no_prog_bl_vn1
       [Arb Miscellaneous; No Progress on Pending BL VN1. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_misc.par_bias_vn0
       [Arb Miscellaneous; Parallel Bias to VN0. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_misc.par_bias_vn1
       [Arb Miscellaneous; Parallel Bias to VN1. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn0.ad_req
       [Can't Arb for VN0; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn0.ad_rsp
       [Can't Arb for VN0; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn0.ad_snp
       [Can't Arb for VN0; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn0.bl_ncb
       [Can't Arb for VN0; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn0.bl_ncs
       [Can't Arb for VN0; NCS on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn0.bl_rsp
       [Can't Arb for VN0; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn0.bl_wb
       [Can't Arb for VN0; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn1.ad_req
       [Can't Arb for VN1; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn1.ad_rsp
       [Can't Arb for VN1; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn1.ad_snp
       [Can't Arb for VN1; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn1.bl_ncb
       [Can't Arb for VN1; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn1.bl_ncs
       [Can't Arb for VN1; NCS on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn1.bl_rsp
       [Can't Arb for VN1; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_noad_req_vn1.bl_wb
       [Can't Arb for VN1; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn0.ad_req
       [No Credits to Arb for VN0; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn0.ad_rsp
       [No Credits to Arb for VN0; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn0.ad_snp
       [No Credits to Arb for VN0; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn0.bl_ncb
       [No Credits to Arb for VN0; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn0.bl_ncs
       [No Credits to Arb for VN0; NCS on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn0.bl_rsp
       [No Credits to Arb for VN0; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn0.bl_wb
       [No Credits to Arb for VN0; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn1.ad_req
       [No Credits to Arb for VN1; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn1.ad_rsp
       [No Credits to Arb for VN1; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn1.ad_snp
       [No Credits to Arb for VN1; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn1.bl_ncb
       [No Credits to Arb for VN1; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn1.bl_ncs
       [No Credits to Arb for VN1; NCS on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn1.bl_rsp
       [No Credits to Arb for VN1; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_arb_nocred_vn1.bl_wb
       [No Credits to Arb for VN1; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_bypassed.ad_s0_bl_arb
       [Ingress Queue Bypasses; AD to Slot 0 on BL Arb. Unit: uncore_m3upi]
  unc_m3upi_rxc_bypassed.ad_s0_idle
       [Ingress Queue Bypasses; AD to Slot 0 on Idle. Unit: uncore_m3upi]
  unc_m3upi_rxc_bypassed.ad_s1_bl_slot
       [Ingress Queue Bypasses; AD + BL to Slot 1. Unit: uncore_m3upi]
  unc_m3upi_rxc_bypassed.ad_s2_bl_slot
       [Ingress Queue Bypasses; AD + BL to Slot 2. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn0.ad_req
       [VN0 message lost contest for flit; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn0.ad_rsp
       [VN0 message lost contest for flit; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn0.ad_snp
       [VN0 message lost contest for flit; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn0.bl_ncb
       [VN0 message lost contest for flit; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn0.bl_ncs
       [VN0 message lost contest for flit; NCS on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn0.bl_rsp
       [VN0 message lost contest for flit; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn0.bl_wb
       [VN0 message lost contest for flit; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn1.ad_req
       [VN1 message lost contest for flit; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn1.ad_rsp
       [VN1 message lost contest for flit; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn1.ad_snp
       [VN1 message lost contest for flit; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn1.bl_ncb
       [VN1 message lost contest for flit; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn1.bl_ncs
       [VN1 message lost contest for flit; NCS on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn1.bl_rsp
       [VN1 message lost contest for flit; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_collision_vn1.bl_wb
       [VN1 message lost contest for flit; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_crd_misc.any_bgf_fifo
       [Miscellaneous Credit Events; Any In BGF FIFO. Unit: uncore_m3upi]
  unc_m3upi_rxc_crd_misc.any_bgf_path
       [Miscellaneous Credit Events; Any in BGF Path. Unit: uncore_m3upi]
  unc_m3upi_rxc_crd_misc.no_d2k_for_arb
       [Miscellaneous Credit Events; No D2K For Arb. Unit: uncore_m3upi]
  unc_m3upi_rxc_crd_occ.d2k_crd
       [Credit Occupancy; D2K Credits. Unit: uncore_m3upi]
  unc_m3upi_rxc_crd_occ.flits_in_fifo
       [Credit Occupancy; Packets in BGF FIFO. Unit: uncore_m3upi]
  unc_m3upi_rxc_crd_occ.flits_in_path
       [Credit Occupancy; Packets in BGF Path. Unit: uncore_m3upi]
  unc_m3upi_rxc_crd_occ.p1p_fifo
       [Credit Occupancy. Unit: uncore_m3upi]
  unc_m3upi_rxc_crd_occ.p1p_total
       [Credit Occupancy. Unit: uncore_m3upi]
  unc_m3upi_rxc_crd_occ.txq_crd
       [Credit Occupancy; Transmit Credits. Unit: uncore_m3upi]
  unc_m3upi_rxc_crd_occ.vna_in_use
       [Credit Occupancy; VNA In Use. Unit: uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn0.ad_req
       [VN0 Ingress (from CMS) Queue - Cycles Not Empty; REQ on AD. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn0.ad_rsp
       [VN0 Ingress (from CMS) Queue - Cycles Not Empty; RSP on AD. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn0.ad_snp
       [VN0 Ingress (from CMS) Queue - Cycles Not Empty; SNP on AD. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn0.bl_ncb
       [VN0 Ingress (from CMS) Queue - Cycles Not Empty; NCB on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn0.bl_ncs
       [VN0 Ingress (from CMS) Queue - Cycles Not Empty; NCS on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn0.bl_rsp
       [VN0 Ingress (from CMS) Queue - Cycles Not Empty; RSP on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn0.bl_wb
       [VN0 Ingress (from CMS) Queue - Cycles Not Empty; WB on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn1.ad_req
       [VN1 Ingress (from CMS) Queue - Cycles Not Empty; REQ on AD. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn1.ad_rsp
       [VN1 Ingress (from CMS) Queue - Cycles Not Empty; RSP on AD. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn1.ad_snp
       [VN1 Ingress (from CMS) Queue - Cycles Not Empty; SNP on AD. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn1.bl_ncb
       [VN1 Ingress (from CMS) Queue - Cycles Not Empty; NCB on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn1.bl_ncs
       [VN1 Ingress (from CMS) Queue - Cycles Not Empty; NCS on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn1.bl_rsp
       [VN1 Ingress (from CMS) Queue - Cycles Not Empty; RSP on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_cycles_ne_vn1.bl_wb
       [VN1 Ingress (from CMS) Queue - Cycles Not Empty; WB on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_flit_gen_hdr1.accum
       [Flit Gen - Header 1; Accumulate. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_gen_hdr1.accum_read
       [Flit Gen - Header 1; Accumulate Ready. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_gen_hdr1.accum_wasted
       [Flit Gen - Header 1; Accumulate Wasted. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_gen_hdr1.ahead_blocked
       [Flit Gen - Header 1; Run-Ahead - Blocked. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_gen_hdr1.ahead_msg
       [Flit Gen - Header 1; Run-Ahead - Message. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_gen_hdr1.par
       [Flit Gen - Header 1; Parallel Ok. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_gen_hdr1.par_flit
       [Flit Gen - Header 1; Parallel Flit Finished. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_gen_hdr1.par_msg
       [Flit Gen - Header 1; Parallel Message. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_gen_hdr2.rmstall
       [Flit Gen - Header 2; Rate-matching Stall. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_gen_hdr2.rmstall_nomsg
       [Flit Gen - Header 2; Rate-matching Stall - No Message. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_flit_not_sent.all
       [Header Not Sent; All. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_not_sent.no_bgf_crd
       [Header Not Sent; No BGF Credits. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_not_sent.no_bgf_no_msg
       [Header Not Sent; No BGF Credits + No Extra Message Slotted. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_flit_not_sent.no_txq_crd
       [Header Not Sent; No TxQ Credits. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_not_sent.no_txq_no_msg
       [Header Not Sent; No TxQ Credits + No Extra Message Slotted. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_flit_not_sent.one_taken
       [Header Not Sent; Sent - One Slot Taken. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_not_sent.three_taken
       [Header Not Sent; Sent - Three Slots Taken. Unit: uncore_m3upi]
  unc_m3upi_rxc_flit_not_sent.two_taken
       [Header Not Sent; Sent - Two Slots Taken. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_data_not_sent.all
       [Data Flit Not Sent; All. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_data_not_sent.no_bgf
       [Data Flit Not Sent; No BGF Credits. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_data_not_sent.no_txq
       [Data Flit Not Sent; No TxQ Credits. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_gen_bl.p0_wait
       [Generating BL Data Flit Sequence; Wait on Pump 0. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_gen_bl.p1_wait
       [Generating BL Data Flit Sequence; Wait on Pump 1. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_gen_bl.p1p_at_limit
       [Generating BL Data Flit Sequence. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_gen_bl.p1p_busy
       [Generating BL Data Flit Sequence. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_gen_bl.p1p_fifo_full
       [Generating BL Data Flit Sequence. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_gen_bl.p1p_hold_p0
       [Generating BL Data Flit Sequence. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_gen_bl.p1p_to_limbo
       [Generating BL Data Flit Sequence. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_misc
       [UNC_M3UPI_RxC_FLITS_MISC. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_sent.1_msg
       [Sent Header Flit; One Message. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_sent.1_msg_vnx
       [Sent Header Flit; One Message in non-VNA. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_sent.2_msgs
       [Sent Header Flit; Two Messages. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_sent.3_msgs
       [Sent Header Flit; Three Messages. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_sent.slots_1
       [Sent Header Flit. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_sent.slots_2
       [Sent Header Flit. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_sent.slots_3
       [Sent Header Flit. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_slot_bl.all
       [Slotting BL Message Into Header Flit; All. Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_slot_bl.need_data
       [Slotting BL Message Into Header Flit; Needs Data Flit. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_flits_slot_bl.p0_wait
       [Slotting BL Message Into Header Flit; Wait on Pump 0. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_flits_slot_bl.p1_not_req
       [Slotting BL Message Into Header Flit; Don't Need Pump 1. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_flits_slot_bl.p1_not_req_but_bubble
       [Slotting BL Message Into Header Flit; Don't Need Pump 1 - Bubble.
        Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_slot_bl.p1_not_req_not_avail
       [Slotting BL Message Into Header Flit; Don't Need Pump 1 - Not Avail.
        Unit: uncore_m3upi]
  unc_m3upi_rxc_flits_slot_bl.p1_wait
       [Slotting BL Message Into Header Flit; Wait on Pump 1. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_held.cant_slot_ad
       [Message Held; Can't Slot AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_held.cant_slot_bl
       [Message Held; Can't Slot BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_held.parallel_ad_lost
       [Message Held; Parallel AD Lost. Unit: uncore_m3upi]
  unc_m3upi_rxc_held.parallel_attempt
       [Message Held; Parallel Attempt. Unit: uncore_m3upi]
  unc_m3upi_rxc_held.parallel_bl_lost
       [Message Held; Parallel BL Lost. Unit: uncore_m3upi]
  unc_m3upi_rxc_held.parallel_success
       [Message Held; Parallel Success. Unit: uncore_m3upi]
  unc_m3upi_rxc_held.vn0
       [Message Held; VN0. Unit: uncore_m3upi]
  unc_m3upi_rxc_held.vn1
       [Message Held; VN1. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn0.ad_req
       [VN0 Ingress (from CMS) Queue - Inserts; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn0.ad_rsp
       [VN0 Ingress (from CMS) Queue - Inserts; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn0.ad_snp
       [VN0 Ingress (from CMS) Queue - Inserts; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn0.bl_ncb
       [VN0 Ingress (from CMS) Queue - Inserts; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn0.bl_ncs
       [VN0 Ingress (from CMS) Queue - Inserts; NCS on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn0.bl_rsp
       [VN0 Ingress (from CMS) Queue - Inserts; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn0.bl_wb
       [VN0 Ingress (from CMS) Queue - Inserts; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn1.ad_req
       [VN1 Ingress (from CMS) Queue - Inserts; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn1.ad_rsp
       [VN1 Ingress (from CMS) Queue - Inserts; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn1.ad_snp
       [VN1 Ingress (from CMS) Queue - Inserts; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn1.bl_ncb
       [VN1 Ingress (from CMS) Queue - Inserts; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn1.bl_ncs
       [VN1 Ingress (from CMS) Queue - Inserts; NCS on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn1.bl_rsp
       [VN1 Ingress (from CMS) Queue - Inserts; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_inserts_vn1.bl_wb
       [VN1 Ingress (from CMS) Queue - Inserts; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn0.ad_req
       [VN0 Ingress (from CMS) Queue - Occupancy; REQ on AD. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn0.ad_rsp
       [VN0 Ingress (from CMS) Queue - Occupancy; RSP on AD. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn0.ad_snp
       [VN0 Ingress (from CMS) Queue - Occupancy; SNP on AD. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn0.bl_ncb
       [VN0 Ingress (from CMS) Queue - Occupancy; NCB on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn0.bl_ncs
       [VN0 Ingress (from CMS) Queue - Occupancy; NCS on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn0.bl_rsp
       [VN0 Ingress (from CMS) Queue - Occupancy; RSP on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn0.bl_wb
       [VN0 Ingress (from CMS) Queue - Occupancy; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn1.ad_req
       [VN1 Ingress (from CMS) Queue - Occupancy; REQ on AD. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn1.ad_rsp
       [VN1 Ingress (from CMS) Queue - Occupancy; RSP on AD. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn1.ad_snp
       [VN1 Ingress (from CMS) Queue - Occupancy; SNP on AD. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn1.bl_ncb
       [VN1 Ingress (from CMS) Queue - Occupancy; NCB on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn1.bl_ncs
       [VN1 Ingress (from CMS) Queue - Occupancy; NCS on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn1.bl_rsp
       [VN1 Ingress (from CMS) Queue - Occupancy; RSP on BL. Unit:
        uncore_m3upi]
  unc_m3upi_rxc_occupancy_vn1.bl_wb
       [VN1 Ingress (from CMS) Queue - Occupancy; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn0.ad_req
       [VN0 message can't slot into flit; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn0.ad_rsp
       [VN0 message can't slot into flit; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn0.ad_snp
       [VN0 message can't slot into flit; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn0.bl_ncb
       [VN0 message can't slot into flit; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn0.bl_ncs
       [VN0 message can't slot into flit; NCS on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn0.bl_rsp
       [VN0 message can't slot into flit; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn0.bl_wb
       [VN0 message can't slot into flit; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn1.ad_req
       [VN1 message can't slot into flit; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn1.ad_rsp
       [VN1 message can't slot into flit; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn1.ad_snp
       [VN1 message can't slot into flit; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn1.bl_ncb
       [VN1 message can't slot into flit; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn1.bl_ncs
       [VN1 message can't slot into flit; NCS on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn1.bl_rsp
       [VN1 message can't slot into flit; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_packing_miss_vn1.bl_wb
       [VN1 message can't slot into flit; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_rxc_smi3_pftch.arb_lost
       [SMI3 Prefetch Messages; Lost Arbitration. Unit: uncore_m3upi]
  unc_m3upi_rxc_smi3_pftch.arrived
       [SMI3 Prefetch Messages; Arrived. Unit: uncore_m3upi]
  unc_m3upi_rxc_smi3_pftch.drop_old
       [SMI3 Prefetch Messages; Dropped - Old. Unit: uncore_m3upi]
  unc_m3upi_rxc_smi3_pftch.drop_wrap
       [SMI3 Prefetch Messages; Dropped - Wrap. Unit: uncore_m3upi]
  unc_m3upi_rxc_smi3_pftch.slotted
       [SMI3 Prefetch Messages; Slotted. Unit: uncore_m3upi]
  unc_m3upi_rxc_vna_crd.any_in_use
       [Remote VNA Credits; Any In Use. Unit: uncore_m3upi]
  unc_m3upi_rxc_vna_crd.corrected
       [Remote VNA Credits; Corrected. Unit: uncore_m3upi]
  unc_m3upi_rxc_vna_crd.lt1
       [Remote VNA Credits; Level < 1. Unit: uncore_m3upi]
  unc_m3upi_rxc_vna_crd.lt4
       [Remote VNA Credits; Level < 4. Unit: uncore_m3upi]
  unc_m3upi_rxc_vna_crd.lt5
       [Remote VNA Credits; Level < 5. Unit: uncore_m3upi]
  unc_m3upi_rxc_vna_crd.used
       [Remote VNA Credits; Used. Unit: uncore_m3upi]
  unc_m3upi_rxr_busy_starved.ad_bnc
       [Transgress Injection Starvation; AD - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_busy_starved.ad_crd
       [Transgress Injection Starvation; AD - Credit. Unit: uncore_m3upi]
  unc_m3upi_rxr_busy_starved.bl_bnc
       [Transgress Injection Starvation; BL - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_busy_starved.bl_crd
       [Transgress Injection Starvation; BL - Credit. Unit: uncore_m3upi]
  unc_m3upi_rxr_bypass.ad_bnc
       [Transgress Ingress Bypass; AD - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_bypass.ad_crd
       [Transgress Ingress Bypass; AD - Credit. Unit: uncore_m3upi]
  unc_m3upi_rxr_bypass.ak_bnc
       [Transgress Ingress Bypass; AK - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_bypass.bl_bnc
       [Transgress Ingress Bypass; BL - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_bypass.bl_crd
       [Transgress Ingress Bypass; BL - Credit. Unit: uncore_m3upi]
  unc_m3upi_rxr_bypass.iv_bnc
       [Transgress Ingress Bypass; IV - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_crd_starved.ad_bnc
       [Transgress Injection Starvation; AD - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_crd_starved.ad_crd
       [Transgress Injection Starvation; AD - Credit. Unit: uncore_m3upi]
  unc_m3upi_rxr_crd_starved.ak_bnc
       [Transgress Injection Starvation; AK - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_crd_starved.bl_bnc
       [Transgress Injection Starvation; BL - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_crd_starved.bl_crd
       [Transgress Injection Starvation; BL - Credit. Unit: uncore_m3upi]
  unc_m3upi_rxr_crd_starved.ifv
       [Transgress Injection Starvation; IFV - Credit. Unit: uncore_m3upi]
  unc_m3upi_rxr_crd_starved.iv_bnc
       [Transgress Injection Starvation; IV - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_inserts.ad_bnc
       [Transgress Ingress Allocations; AD - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_inserts.ad_crd
       [Transgress Ingress Allocations; AD - Credit. Unit: uncore_m3upi]
  unc_m3upi_rxr_inserts.ak_bnc
       [Transgress Ingress Allocations; AK - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_inserts.bl_bnc
       [Transgress Ingress Allocations; BL - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_inserts.bl_crd
       [Transgress Ingress Allocations; BL - Credit. Unit: uncore_m3upi]
  unc_m3upi_rxr_inserts.iv_bnc
       [Transgress Ingress Allocations; IV - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_occupancy.ad_bnc
       [Transgress Ingress Occupancy; AD - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_occupancy.ad_crd
       [Transgress Ingress Occupancy; AD - Credit. Unit: uncore_m3upi]
  unc_m3upi_rxr_occupancy.ak_bnc
       [Transgress Ingress Occupancy; AK - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_occupancy.bl_bnc
       [Transgress Ingress Occupancy; BL - Bounce. Unit: uncore_m3upi]
  unc_m3upi_rxr_occupancy.bl_crd
       [Transgress Ingress Occupancy; BL - Credit. Unit: uncore_m3upi]
  unc_m3upi_rxr_occupancy.iv_bnc
       [Transgress Ingress Occupancy; IV - Bounce. Unit: uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_ad_ag0.tgr0
       [Stall on No AD Agent0 Transgress Credits; For Transgress 0. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_ad_ag0.tgr1
       [Stall on No AD Agent0 Transgress Credits; For Transgress 1. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_ad_ag0.tgr2
       [Stall on No AD Agent0 Transgress Credits; For Transgress 2. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_ad_ag0.tgr3
       [Stall on No AD Agent0 Transgress Credits; For Transgress 3. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_ad_ag0.tgr4
       [Stall on No AD Agent0 Transgress Credits; For Transgress 4. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_ad_ag0.tgr5
       [Stall on No AD Agent0 Transgress Credits; For Transgress 5. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_ad_ag1.tgr0
       [Stall on No AD Agent1 Transgress Credits; For Transgress 0. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_ad_ag1.tgr1
       [Stall on No AD Agent1 Transgress Credits; For Transgress 1. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_ad_ag1.tgr2
       [Stall on No AD Agent1 Transgress Credits; For Transgress 2. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_ad_ag1.tgr3
       [Stall on No AD Agent1 Transgress Credits; For Transgress 3. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_ad_ag1.tgr4
       [Stall on No AD Agent1 Transgress Credits; For Transgress 4. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_ad_ag1.tgr5
       [Stall on No AD Agent1 Transgress Credits; For Transgress 5. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_bl_ag0.tgr0
       [Stall on No BL Agent0 Transgress Credits; For Transgress 0. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_bl_ag0.tgr1
       [Stall on No BL Agent0 Transgress Credits; For Transgress 1. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_bl_ag0.tgr2
       [Stall on No BL Agent0 Transgress Credits; For Transgress 2. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_bl_ag0.tgr3
       [Stall on No BL Agent0 Transgress Credits; For Transgress 3. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_bl_ag0.tgr4
       [Stall on No BL Agent0 Transgress Credits; For Transgress 4. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_bl_ag0.tgr5
       [Stall on No BL Agent0 Transgress Credits; For Transgress 5. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_bl_ag1.tgr0
       [Stall on No BL Agent1 Transgress Credits; For Transgress 0. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_bl_ag1.tgr1
       [Stall on No BL Agent1 Transgress Credits; For Transgress 1. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_bl_ag1.tgr2
       [Stall on No BL Agent1 Transgress Credits; For Transgress 2. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_bl_ag1.tgr3
       [Stall on No BL Agent1 Transgress Credits; For Transgress 3. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_bl_ag1.tgr4
       [Stall on No BL Agent1 Transgress Credits; For Transgress 4. Unit:
        uncore_m3upi]
  unc_m3upi_stall_no_txr_horz_crd_bl_ag1.tgr5
       [Stall on No BL Agent1 Transgress Credits; For Transgress 5. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_arb_fail.vn0_req
       [Failed ARB for AD; VN0 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_arb_fail.vn0_rsp
       [Failed ARB for AD; VN0 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_arb_fail.vn0_snp
       [Failed ARB for AD; VN0 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_arb_fail.vn0_wb
       [Failed ARB for AD; VN0 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_arb_fail.vn1_req
       [Failed ARB for AD; VN1 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_arb_fail.vn1_rsp
       [Failed ARB for AD; VN1 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_arb_fail.vn1_snp
       [Failed ARB for AD; VN1 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_arb_fail.vn1_wb
       [Failed ARB for AD; VN1 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_bypass.ad_slot0
       [AD FlowQ Bypass. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_bypass.ad_slot1
       [AD FlowQ Bypass. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_bypass.ad_slot2
       [AD FlowQ Bypass. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_bypass.bl_early_rsp
       [AD FlowQ Bypass. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_cycles_ne.vn0_req
       [AD Flow Q Not Empty; VN0 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_cycles_ne.vn0_rsp
       [AD Flow Q Not Empty; VN0 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_cycles_ne.vn0_snp
       [AD Flow Q Not Empty; VN0 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_cycles_ne.vn0_wb
       [AD Flow Q Not Empty; VN0 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_cycles_ne.vn1_req
       [AD Flow Q Not Empty; VN1 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_cycles_ne.vn1_rsp
       [AD Flow Q Not Empty; VN1 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_cycles_ne.vn1_snp
       [AD Flow Q Not Empty; VN1 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_cycles_ne.vn1_wb
       [AD Flow Q Not Empty; VN1 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_inserts.vn0_req
       [AD Flow Q Inserts; VN0 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_inserts.vn0_rsp
       [AD Flow Q Inserts; VN0 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_inserts.vn0_snp
       [AD Flow Q Inserts; VN0 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_inserts.vn0_wb
       [AD Flow Q Inserts; VN0 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_inserts.vn1_req
       [AD Flow Q Inserts; VN1 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_inserts.vn1_rsp
       [AD Flow Q Inserts; VN1 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_inserts.vn1_snp
       [AD Flow Q Inserts; VN1 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_occupancy.vn0_req
       [AD Flow Q Occupancy; VN0 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_occupancy.vn0_rsp
       [AD Flow Q Occupancy; VN0 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_occupancy.vn0_snp
       [AD Flow Q Occupancy; VN0 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_occupancy.vn0_wb
       [AD Flow Q Occupancy; VN0 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_occupancy.vn1_req
       [AD Flow Q Occupancy; VN1 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_occupancy.vn1_rsp
       [AD Flow Q Occupancy; VN1 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_flq_occupancy.vn1_snp
       [AD Flow Q Occupancy; VN1 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_snpf_grp1_vn1.vn0_cha
       [Number of Snoop Targets; CHA on VN0. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_snpf_grp1_vn1.vn0_non_idle
       [Number of Snoop Targets; Non Idle cycles on VN0. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_snpf_grp1_vn1.vn0_peer_upi0
       [Number of Snoop Targets; Peer UPI0 on VN0. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_snpf_grp1_vn1.vn0_peer_upi1
       [Number of Snoop Targets; Peer UPI1 on VN0. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_snpf_grp1_vn1.vn1_cha
       [Number of Snoop Targets; CHA on VN1. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_snpf_grp1_vn1.vn1_non_idle
       [Number of Snoop Targets; Non Idle cycles on VN1. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_snpf_grp1_vn1.vn1_peer_upi0
       [Number of Snoop Targets; Peer UPI0 on VN1. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_snpf_grp1_vn1.vn1_peer_upi1
       [Number of Snoop Targets; Peer UPI1 on VN1. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_snpf_grp2_vn1.vn0_snpfp_nonsnp
       [Snoop Arbitration; FlowQ Won. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_snpf_grp2_vn1.vn0_snpfp_vn2snp
       [Snoop Arbitration; FlowQ SnpF Won. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_snpf_grp2_vn1.vn1_snpfp_nonsnp
       [Snoop Arbitration; FlowQ Won. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_snpf_grp2_vn1.vn1_snpfp_vn0snp
       [Snoop Arbitration; FlowQ SnpF Won. Unit: uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_crd_avail.vn0_req
       [Speculative ARB for AD - Credit Available; VN0 REQ Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_crd_avail.vn0_snp
       [Speculative ARB for AD - Credit Available; VN0 SNP Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_crd_avail.vn0_wb
       [Speculative ARB for AD - Credit Available; VN0 WB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_crd_avail.vn1_req
       [Speculative ARB for AD - Credit Available; VN1 REQ Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_crd_avail.vn1_snp
       [Speculative ARB for AD - Credit Available; VN1 SNP Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_crd_avail.vn1_wb
       [Speculative ARB for AD - Credit Available; VN1 WB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_new_msg.vn0_req
       [Speculative ARB for AD - New Message; VN0 REQ Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_new_msg.vn0_snp
       [Speculative ARB for AD - New Message; VN0 SNP Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_new_msg.vn0_wb
       [Speculative ARB for AD - New Message; VN0 WB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_new_msg.vn1_req
       [Speculative ARB for AD - New Message; VN1 REQ Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_new_msg.vn1_snp
       [Speculative ARB for AD - New Message; VN1 SNP Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_new_msg.vn1_wb
       [Speculative ARB for AD - New Message; VN1 WB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_no_other_pend.vn0_req
       [Speculative ARB for AD - No Credit; VN0 REQ Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_no_other_pend.vn0_rsp
       [Speculative ARB for AD - No Credit; VN0 RSP Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_no_other_pend.vn0_snp
       [Speculative ARB for AD - No Credit; VN0 SNP Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_no_other_pend.vn0_wb
       [Speculative ARB for AD - No Credit; VN0 WB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_no_other_pend.vn1_req
       [Speculative ARB for AD - No Credit; VN1 REQ Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_no_other_pend.vn1_rsp
       [Speculative ARB for AD - No Credit; VN1 RSP Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_no_other_pend.vn1_snp
       [Speculative ARB for AD - No Credit; VN1 SNP Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ad_spec_arb_no_other_pend.vn1_wb
       [Speculative ARB for AD - No Credit; VN1 WB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_ak_flq_inserts
       [AK Flow Q Inserts. Unit: uncore_m3upi]
  unc_m3upi_txc_ak_flq_occupancy
       [AK Flow Q Occupancy. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_arb_fail.vn0_ncb
       [Failed ARB for BL; VN0 NCB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_arb_fail.vn0_ncs
       [Failed ARB for BL; VN0 NCS Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_arb_fail.vn0_rsp
       [Failed ARB for BL; VN0 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_arb_fail.vn0_wb
       [Failed ARB for BL; VN0 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_arb_fail.vn1_ncb
       [Failed ARB for BL; VN1 NCS Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_arb_fail.vn1_ncs
       [Failed ARB for BL; VN1 NCB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_arb_fail.vn1_rsp
       [Failed ARB for BL; VN1 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_arb_fail.vn1_wb
       [Failed ARB for BL; VN1 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_cycles_ne.vn0_req
       [BL Flow Q Not Empty; VN0 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_cycles_ne.vn0_rsp
       [BL Flow Q Not Empty; VN0 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_cycles_ne.vn0_snp
       [BL Flow Q Not Empty; VN0 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_cycles_ne.vn0_wb
       [BL Flow Q Not Empty; VN0 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_cycles_ne.vn1_req
       [BL Flow Q Not Empty; VN1 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_cycles_ne.vn1_rsp
       [BL Flow Q Not Empty; VN1 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_cycles_ne.vn1_snp
       [BL Flow Q Not Empty; VN1 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_cycles_ne.vn1_wb
       [BL Flow Q Not Empty; VN1 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_inserts.vn0_ncb
       [BL Flow Q Inserts; VN0 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_inserts.vn0_ncs
       [BL Flow Q Inserts; VN0 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_inserts.vn0_rsp
       [BL Flow Q Inserts; VN0 NCS Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_inserts.vn0_wb
       [BL Flow Q Inserts; VN0 NCB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_inserts.vn1_ncb
       [BL Flow Q Inserts; VN1 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_inserts.vn1_ncs
       [BL Flow Q Inserts; VN1 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_inserts.vn1_rsp
       [BL Flow Q Inserts; VN1_NCB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_inserts.vn1_wb
       [BL Flow Q Inserts; VN1_NCS Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_occupancy.vn0_ncb
       [BL Flow Q Occupancy; VN0 NCB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_occupancy.vn0_ncs
       [BL Flow Q Occupancy; VN0 NCS Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_occupancy.vn0_rsp
       [BL Flow Q Occupancy; VN0 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_occupancy.vn0_wb
       [BL Flow Q Occupancy; VN0 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_occupancy.vn1_ncb
       [BL Flow Q Occupancy; VN1_NCS Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_occupancy.vn1_ncs
       [BL Flow Q Occupancy; VN1_NCB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_occupancy.vn1_rsp
       [BL Flow Q Occupancy; VN1 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_flq_occupancy.vn1_wb
       [BL Flow Q Occupancy; VN1 WB Messages. Unit: uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_new_msg.vn0_ncb
       [Speculative ARB for BL - New Message; VN0 WB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_new_msg.vn0_ncs
       [Speculative ARB for BL - New Message; VN0 NCS Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_new_msg.vn0_wb
       [Speculative ARB for BL - New Message; VN0 WB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_new_msg.vn1_ncb
       [Speculative ARB for BL - New Message; VN1 WB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_new_msg.vn1_ncs
       [Speculative ARB for BL - New Message; VN1 NCB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_new_msg.vn1_wb
       [Speculative ARB for BL - New Message; VN1 RSP Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_no_other_pend.vn0_ncb
       [Speculative ARB for AD Failed - No Credit; VN0 NCB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_no_other_pend.vn0_ncs
       [Speculative ARB for AD Failed - No Credit; VN0 NCS Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_no_other_pend.vn0_rsp
       [Speculative ARB for AD Failed - No Credit; VN0 RSP Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_no_other_pend.vn0_wb
       [Speculative ARB for AD Failed - No Credit; VN0 WB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_no_other_pend.vn1_ncb
       [Speculative ARB for AD Failed - No Credit; VN1 NCS Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_no_other_pend.vn1_ncs
       [Speculative ARB for AD Failed - No Credit; VN1 NCB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_no_other_pend.vn1_rsp
       [Speculative ARB for AD Failed - No Credit; VN1 RSP Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txc_bl_spec_arb_no_other_pend.vn1_wb
       [Speculative ARB for AD Failed - No Credit; VN1 WB Messages. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_ads_used.ad_bnc
       [CMS Horizontal ADS Used; AD - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_ads_used.ad_crd
       [CMS Horizontal ADS Used; AD - Credit. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_ads_used.ak_bnc
       [CMS Horizontal ADS Used; AK - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_ads_used.bl_bnc
       [CMS Horizontal ADS Used; BL - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_ads_used.bl_crd
       [CMS Horizontal ADS Used; BL - Credit. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_bypass.ad_bnc
       [CMS Horizontal Bypass Used; AD - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_bypass.ad_crd
       [CMS Horizontal Bypass Used; AD - Credit. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_bypass.ak_bnc
       [CMS Horizontal Bypass Used; AK - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_bypass.bl_bnc
       [CMS Horizontal Bypass Used; BL - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_bypass.bl_crd
       [CMS Horizontal Bypass Used; BL - Credit. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_bypass.iv_bnc
       [CMS Horizontal Bypass Used; IV - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_cycles_full.ad_bnc
       [Cycles CMS Horizontal Egress Queue is Full; AD - Bounce. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_cycles_full.ad_crd
       [Cycles CMS Horizontal Egress Queue is Full; AD - Credit. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_cycles_full.ak_bnc
       [Cycles CMS Horizontal Egress Queue is Full; AK - Bounce. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_cycles_full.bl_bnc
       [Cycles CMS Horizontal Egress Queue is Full; BL - Bounce. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_cycles_full.bl_crd
       [Cycles CMS Horizontal Egress Queue is Full; BL - Credit. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_cycles_full.iv_bnc
       [Cycles CMS Horizontal Egress Queue is Full; IV - Bounce. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_cycles_ne.ad_bnc
       [Cycles CMS Horizontal Egress Queue is Not Empty; AD - Bounce. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_cycles_ne.ad_crd
       [Cycles CMS Horizontal Egress Queue is Not Empty; AD - Credit. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_cycles_ne.ak_bnc
       [Cycles CMS Horizontal Egress Queue is Not Empty; AK - Bounce. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_cycles_ne.bl_bnc
       [Cycles CMS Horizontal Egress Queue is Not Empty; BL - Bounce. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_cycles_ne.bl_crd
       [Cycles CMS Horizontal Egress Queue is Not Empty; BL - Credit. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_cycles_ne.iv_bnc
       [Cycles CMS Horizontal Egress Queue is Not Empty; IV - Bounce. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_inserts.ad_bnc
       [CMS Horizontal Egress Inserts; AD - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_inserts.ad_crd
       [CMS Horizontal Egress Inserts; AD - Credit. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_inserts.ak_bnc
       [CMS Horizontal Egress Inserts; AK - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_inserts.bl_bnc
       [CMS Horizontal Egress Inserts; BL - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_inserts.bl_crd
       [CMS Horizontal Egress Inserts; BL - Credit. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_inserts.iv_bnc
       [CMS Horizontal Egress Inserts; IV - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_nack.ad_bnc
       [CMS Horizontal Egress NACKs; AD - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_nack.ad_crd
       [CMS Horizontal Egress NACKs; AD - Credit. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_nack.ak_bnc
       [CMS Horizontal Egress NACKs; AK - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_nack.bl_bnc
       [CMS Horizontal Egress NACKs; BL - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_nack.bl_crd
       [CMS Horizontal Egress NACKs; BL - Credit. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_nack.iv_bnc
       [CMS Horizontal Egress NACKs; IV - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_occupancy.ad_bnc
       [CMS Horizontal Egress Occupancy; AD - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_occupancy.ad_crd
       [CMS Horizontal Egress Occupancy; AD - Credit. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_occupancy.ak_bnc
       [CMS Horizontal Egress Occupancy; AK - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_occupancy.bl_bnc
       [CMS Horizontal Egress Occupancy; BL - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_occupancy.bl_crd
       [CMS Horizontal Egress Occupancy; BL - Credit. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_occupancy.iv_bnc
       [CMS Horizontal Egress Occupancy; IV - Bounce. Unit: uncore_m3upi]
  unc_m3upi_txr_horz_starved.ad_bnc
       [CMS Horizontal Egress Injection Starvation; AD - Bounce. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_starved.ak_bnc
       [CMS Horizontal Egress Injection Starvation; AK - Bounce. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_starved.bl_bnc
       [CMS Horizontal Egress Injection Starvation; BL - Bounce. Unit:
        uncore_m3upi]
  unc_m3upi_txr_horz_starved.iv_bnc
       [CMS Horizontal Egress Injection Starvation; IV - Bounce. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_ads_used.ad_ag0
       [CMS Vertical ADS Used; AD - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_ads_used.ad_ag1
       [CMS Vertical ADS Used; AD - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_ads_used.ak_ag0
       [CMS Vertical ADS Used; AK - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_ads_used.ak_ag1
       [CMS Vertical ADS Used; AK - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_ads_used.bl_ag0
       [CMS Vertical ADS Used; BL - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_ads_used.bl_ag1
       [CMS Vertical ADS Used; BL - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_bypass.ad_ag0
       [CMS Vertical ADS Used; AD - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_bypass.ad_ag1
       [CMS Vertical ADS Used; AD - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_bypass.ak_ag0
       [CMS Vertical ADS Used; AK - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_bypass.ak_ag1
       [CMS Vertical ADS Used; AK - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_bypass.bl_ag0
       [CMS Vertical ADS Used; BL - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_bypass.bl_ag1
       [CMS Vertical ADS Used; BL - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_bypass.iv
       [CMS Vertical ADS Used; IV. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_cycles_full.ad_ag0
       [Cycles CMS Vertical Egress Queue Is Full; AD - Agent 0. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_cycles_full.ad_ag1
       [Cycles CMS Vertical Egress Queue Is Full; AD - Agent 1. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_cycles_full.ak_ag0
       [Cycles CMS Vertical Egress Queue Is Full; AK - Agent 0. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_cycles_full.ak_ag1
       [Cycles CMS Vertical Egress Queue Is Full; AK - Agent 1. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_cycles_full.bl_ag0
       [Cycles CMS Vertical Egress Queue Is Full; BL - Agent 0. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_cycles_full.bl_ag1
       [Cycles CMS Vertical Egress Queue Is Full; BL - Agent 1. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_cycles_full.iv
       [Cycles CMS Vertical Egress Queue Is Full; IV. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_cycles_ne.ad_ag0
       [Cycles CMS Vertical Egress Queue Is Not Empty; AD - Agent 0. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_cycles_ne.ad_ag1
       [Cycles CMS Vertical Egress Queue Is Not Empty; AD - Agent 1. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_cycles_ne.ak_ag0
       [Cycles CMS Vertical Egress Queue Is Not Empty; AK - Agent 0. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_cycles_ne.ak_ag1
       [Cycles CMS Vertical Egress Queue Is Not Empty; AK - Agent 1. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_cycles_ne.bl_ag0
       [Cycles CMS Vertical Egress Queue Is Not Empty; BL - Agent 0. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_cycles_ne.bl_ag1
       [Cycles CMS Vertical Egress Queue Is Not Empty; BL - Agent 1. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_cycles_ne.iv
       [Cycles CMS Vertical Egress Queue Is Not Empty; IV. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_inserts.ad_ag0
       [CMS Vert Egress Allocations; AD - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_inserts.ad_ag1
       [CMS Vert Egress Allocations; AD - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_inserts.ak_ag0
       [CMS Vert Egress Allocations; AK - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_inserts.ak_ag1
       [CMS Vert Egress Allocations; AK - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_inserts.bl_ag0
       [CMS Vert Egress Allocations; BL - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_inserts.bl_ag1
       [CMS Vert Egress Allocations; BL - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_inserts.iv
       [CMS Vert Egress Allocations; IV. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_nack.ad_ag0
       [CMS Vertical Egress NACKs; AD - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_nack.ad_ag1
       [CMS Vertical Egress NACKs; AD - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_nack.ak_ag0
       [CMS Vertical Egress NACKs; AK - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_nack.ak_ag1
       [CMS Vertical Egress NACKs; AK - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_nack.bl_ag0
       [CMS Vertical Egress NACKs; BL - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_nack.bl_ag1
       [CMS Vertical Egress NACKs; BL - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_nack.iv
       [CMS Vertical Egress NACKs; IV. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_occupancy.ad_ag0
       [CMS Vert Egress Occupancy; AD - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_occupancy.ad_ag1
       [CMS Vert Egress Occupancy; AD - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_occupancy.ak_ag0
       [CMS Vert Egress Occupancy; AK - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_occupancy.ak_ag1
       [CMS Vert Egress Occupancy; AK - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_occupancy.bl_ag0
       [CMS Vert Egress Occupancy; BL - Agent 0. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_occupancy.bl_ag1
       [CMS Vert Egress Occupancy; BL - Agent 1. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_occupancy.iv
       [CMS Vert Egress Occupancy; IV. Unit: uncore_m3upi]
  unc_m3upi_txr_vert_starved.ad_ag0
       [CMS Vertical Egress Injection Starvation; AD - Agent 0. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_starved.ad_ag1
       [CMS Vertical Egress Injection Starvation; AD - Agent 1. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_starved.ak_ag0
       [CMS Vertical Egress Injection Starvation; AK - Agent 0. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_starved.ak_ag1
       [CMS Vertical Egress Injection Starvation; AK - Agent 1. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_starved.bl_ag0
       [CMS Vertical Egress Injection Starvation; BL - Agent 0. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_starved.bl_ag1
       [CMS Vertical Egress Injection Starvation; BL - Agent 1. Unit:
        uncore_m3upi]
  unc_m3upi_txr_vert_starved.iv
       [CMS Vertical Egress Injection Starvation; IV. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_ad_credits_empty.vn0_req
       [UPI0 AD Credits Empty; VN0 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_ad_credits_empty.vn0_rsp
       [UPI0 AD Credits Empty; VN0 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_ad_credits_empty.vn0_snp
       [UPI0 AD Credits Empty; VN0 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_ad_credits_empty.vn1_req
       [UPI0 AD Credits Empty; VN1 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_ad_credits_empty.vn1_rsp
       [UPI0 AD Credits Empty; VN1 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_ad_credits_empty.vn1_snp
       [UPI0 AD Credits Empty; VN1 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_ad_credits_empty.vna
       [UPI0 AD Credits Empty; VNA. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_bl_credits_empty.vn0_ncs_ncb
       [UPI0 BL Credits Empty; VN0 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_bl_credits_empty.vn0_rsp
       [UPI0 BL Credits Empty; VN0 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_bl_credits_empty.vn0_wb
       [UPI0 BL Credits Empty; VN0 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_bl_credits_empty.vn1_ncs_ncb
       [UPI0 BL Credits Empty; VN1 RSP Messages. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_bl_credits_empty.vn1_rsp
       [UPI0 BL Credits Empty; VN1 REQ Messages. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_bl_credits_empty.vn1_wb
       [UPI0 BL Credits Empty; VN1 SNP Messages. Unit: uncore_m3upi]
  unc_m3upi_upi_peer_bl_credits_empty.vna
       [UPI0 BL Credits Empty; VNA. Unit: uncore_m3upi]
  unc_m3upi_upi_prefetch_spawn
       [Prefetches generated by the flow control queue of the M3UPI unit.
        Unit: uncore_m3upi]
  unc_m3upi_vert_ring_ad_in_use.dn_even
       [Vertical AD Ring In Use; Down and Even. Unit: uncore_m3upi]
  unc_m3upi_vert_ring_ad_in_use.dn_odd
       [Vertical AD Ring In Use; Down and Odd. Unit: uncore_m3upi]
  unc_m3upi_vert_ring_ad_in_use.up_even
       [Vertical AD Ring In Use; Up and Even. Unit: uncore_m3upi]
  unc_m3upi_vert_ring_ad_in_use.up_odd
       [Vertical AD Ring In Use; Up and Odd. Unit: uncore_m3upi]
  unc_m3upi_vert_ring_ak_in_use.dn_even
       [Vertical AK Ring In Use; Down and Even. Unit: uncore_m3upi]
  unc_m3upi_vert_ring_ak_in_use.dn_odd
       [Vertical AK Ring In Use; Down and Odd. Unit: uncore_m3upi]
  unc_m3upi_vert_ring_ak_in_use.up_even
       [Vertical AK Ring In Use; Up and Even. Unit: uncore_m3upi]
  unc_m3upi_vert_ring_ak_in_use.up_odd
       [Vertical AK Ring In Use; Up and Odd. Unit: uncore_m3upi]
  unc_m3upi_vert_ring_bl_in_use.dn_even
       [Vertical BL Ring in Use; Down and Even. Unit: uncore_m3upi]
  unc_m3upi_vert_ring_bl_in_use.dn_odd
       [Vertical BL Ring in Use; Down and Odd. Unit: uncore_m3upi]
  unc_m3upi_vert_ring_bl_in_use.up_even
       [Vertical BL Ring in Use; Up and Even. Unit: uncore_m3upi]
  unc_m3upi_vert_ring_bl_in_use.up_odd
       [Vertical BL Ring in Use; Up and Odd. Unit: uncore_m3upi]
  unc_m3upi_vert_ring_iv_in_use.dn
       [Vertical IV Ring in Use; Down. Unit: uncore_m3upi]
  unc_m3upi_vert_ring_iv_in_use.up
       [Vertical IV Ring in Use; Up. Unit: uncore_m3upi]
  unc_m3upi_vn0_credits_used.ncb
       [VN0 Credit Used; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_vn0_credits_used.ncs
       [VN0 Credit Used; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_vn0_credits_used.req
       [VN0 Credit Used; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_vn0_credits_used.rsp
       [VN0 Credit Used; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_vn0_credits_used.snp
       [VN0 Credit Used; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_vn0_credits_used.wb
       [VN0 Credit Used; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_vn0_no_credits.ncb
       [VN0 No Credits; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_vn0_no_credits.ncs
       [VN0 No Credits; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_vn0_no_credits.req
       [VN0 No Credits; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_vn0_no_credits.rsp
       [VN0 No Credits; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_vn0_no_credits.snp
       [VN0 No Credits; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_vn0_no_credits.wb
       [VN0 No Credits; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_vn1_credits_used.ncb
       [VN1 Credit Used; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_vn1_credits_used.ncs
       [VN1 Credit Used; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_vn1_credits_used.req
       [VN1 Credit Used; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_vn1_credits_used.rsp
       [VN1 Credit Used; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_vn1_credits_used.snp
       [VN1 Credit Used; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_vn1_credits_used.wb
       [VN1 Credit Used; RSP on BL. Unit: uncore_m3upi]
  unc_m3upi_vn1_no_credits.ncb
       [VN1 No Credits; WB on BL. Unit: uncore_m3upi]
  unc_m3upi_vn1_no_credits.ncs
       [VN1 No Credits; NCB on BL. Unit: uncore_m3upi]
  unc_m3upi_vn1_no_credits.req
       [VN1 No Credits; REQ on AD. Unit: uncore_m3upi]
  unc_m3upi_vn1_no_credits.rsp
       [VN1 No Credits; RSP on AD. Unit: uncore_m3upi]
  unc_m3upi_vn1_no_credits.snp
       [VN1 No Credits; SNP on AD. Unit: uncore_m3upi]
  unc_m3upi_vn1_no_credits.wb
       [VN1 No Credits; RSP on BL. Unit: uncore_m3upi]
  unc_u_clockticks
       [Clockticks in the UBOX using a dedicated 48-bit Fixed Counter. Unit:
        uncore_ubox]
  unc_u_event_msg.doorbell_rcvd
       [Message Received. Unit: uncore_ubox]
  unc_u_event_msg.int_prio
       [Message Received. Unit: uncore_ubox]
  unc_u_event_msg.ipi_rcvd
       [Message Received; IPI. Unit: uncore_ubox]
  unc_u_event_msg.msi_rcvd
       [Message Received; MSI. Unit: uncore_ubox]
  unc_u_event_msg.vlw_rcvd
       [Message Received; VLW. Unit: uncore_ubox]
  unc_u_lock_cycles
       [IDI Lock/SplitLock Cycles. Unit: uncore_ubox]
  unc_u_phold_cycles.assert_to_ack
       [Cycles PHOLD Assert to Ack; Assert to ACK. Unit: uncore_ubox]
  unc_u_racu_drng.pftch_buf_empty
       [UNC_U_RACU_DRNG.PFTCH_BUF_EMPTY. Unit: uncore_ubox]
  unc_u_racu_drng.rdrand
       [UNC_U_RACU_DRNG.RDRAND. Unit: uncore_ubox]
  unc_u_racu_drng.rdseed
       [UNC_U_RACU_DRNG.RDSEED. Unit: uncore_ubox]
  unc_u_racu_requests
       [RACU Request. Unit: uncore_ubox]
  unc_upi_clockticks
       [Clocks of the Intel(R) Ultra Path Interconnect (UPI). Unit: uncore_upi]
  unc_upi_direct_attempts.d2c
       [Data Response packets that go direct to core. Unit: uncore_upi]
  unc_upi_direct_attempts.d2u
       [Data Response packets that go direct to Intel(R) UPI. Unit: uncore_upi]
  unc_upi_flowq_no_vna_crd.ad_vna_eq0
       [UNC_UPI_FLOWQ_NO_VNA_CRD.AD_VNA_EQ0. Unit: uncore_upi]
  unc_upi_flowq_no_vna_crd.ad_vna_eq1
       [UNC_UPI_FLOWQ_NO_VNA_CRD.AD_VNA_EQ1. Unit: uncore_upi]
  unc_upi_flowq_no_vna_crd.ad_vna_eq2
       [UNC_UPI_FLOWQ_NO_VNA_CRD.AD_VNA_EQ2. Unit: uncore_upi]
  unc_upi_flowq_no_vna_crd.ak_vna_eq0
       [UNC_UPI_FLOWQ_NO_VNA_CRD.AK_VNA_EQ0. Unit: uncore_upi]
  unc_upi_flowq_no_vna_crd.ak_vna_eq1
       [UNC_UPI_FLOWQ_NO_VNA_CRD.AK_VNA_EQ1. Unit: uncore_upi]
  unc_upi_flowq_no_vna_crd.ak_vna_eq2
       [UNC_UPI_FLOWQ_NO_VNA_CRD.AK_VNA_EQ2. Unit: uncore_upi]
  unc_upi_flowq_no_vna_crd.ak_vna_eq3
       [UNC_UPI_FLOWQ_NO_VNA_CRD.AK_VNA_EQ3. Unit: uncore_upi]
  unc_upi_flowq_no_vna_crd.bl_vna_eq0
       [UNC_UPI_FLOWQ_NO_VNA_CRD.BL_VNA_EQ0. Unit: uncore_upi]
  unc_upi_l1_power_cycles
       [Cycles Intel(R) UPI is in L1 power mode (shutdown). Unit: uncore_upi]
  unc_upi_m3_byp_blocked.bgf_crd
       [UNC_UPI_M3_BYP_BLOCKED.BGF_CRD. Unit: uncore_upi]
  unc_upi_m3_byp_blocked.flowq_ad_vna_le2
       [UNC_UPI_M3_BYP_BLOCKED.FLOWQ_AD_VNA_LE2. Unit: uncore_upi]
  unc_upi_m3_byp_blocked.flowq_ak_vna_le3
       [UNC_UPI_M3_BYP_BLOCKED.FLOWQ_AK_VNA_LE3. Unit: uncore_upi]
  unc_upi_m3_byp_blocked.flowq_bl_vna_eq0
       [UNC_UPI_M3_BYP_BLOCKED.FLOWQ_BL_VNA_EQ0. Unit: uncore_upi]
  unc_upi_m3_byp_blocked.gv_block
       [UNC_UPI_M3_BYP_BLOCKED.GV_BLOCK. Unit: uncore_upi]
  unc_upi_m3_crd_return_blocked
       [UNC_UPI_M3_CRD_RETURN_BLOCKED. Unit: uncore_upi]
  unc_upi_m3_rxq_blocked.bgf_crd
       [UNC_UPI_M3_RXQ_BLOCKED.BGF_CRD. Unit: uncore_upi]
  unc_upi_m3_rxq_blocked.flowq_ad_vna_btw_2_thresh
       [UNC_UPI_M3_RXQ_BLOCKED.FLOWQ_AD_VNA_BTW_2_THRESH. Unit: uncore_upi]
  unc_upi_m3_rxq_blocked.flowq_ad_vna_le2
       [UNC_UPI_M3_RXQ_BLOCKED.FLOWQ_AD_VNA_LE2. Unit: uncore_upi]
  unc_upi_m3_rxq_blocked.flowq_ak_vna_le3
       [UNC_UPI_M3_RXQ_BLOCKED.FLOWQ_AK_VNA_LE3. Unit: uncore_upi]
  unc_upi_m3_rxq_blocked.flowq_bl_vna_btw_0_thresh
       [UNC_UPI_M3_RXQ_BLOCKED.FLOWQ_BL_VNA_BTW_0_THRESH. Unit: uncore_upi]
  unc_upi_m3_rxq_blocked.flowq_bl_vna_eq0
       [UNC_UPI_M3_RXQ_BLOCKED.FLOWQ_BL_VNA_EQ0. Unit: uncore_upi]
  unc_upi_m3_rxq_blocked.gv_block
       [UNC_UPI_M3_RXQ_BLOCKED.GV_BLOCK. Unit: uncore_upi]
  unc_upi_phy_init_cycles
       [Cycles where phy is not in L0, L0c, L0p, L1. Unit: uncore_upi]
  unc_upi_power_l1_nack
       [L1 Req Nack. Unit: uncore_upi]
  unc_upi_power_l1_req
       [L1 Req (same as L1 Ack). Unit: uncore_upi]
  unc_upi_req_slot2_from_m3.ack
       [UNC_UPI_REQ_SLOT2_FROM_M3.ACK. Unit: uncore_upi]
  unc_upi_req_slot2_from_m3.vn0
       [UNC_UPI_REQ_SLOT2_FROM_M3.VN0. Unit: uncore_upi]
  unc_upi_req_slot2_from_m3.vn1
       [UNC_UPI_REQ_SLOT2_FROM_M3.VN1. Unit: uncore_upi]
  unc_upi_req_slot2_from_m3.vna
       [UNC_UPI_REQ_SLOT2_FROM_M3.VNA. Unit: uncore_upi]
  unc_upi_rxl0_power_cycles
       [Cycles in L0. Receive side. Unit: uncore_upi]
  unc_upi_rxl0p_power_cycles
       [Cycles the Rx of the Intel(R) UPI is in L0p power mode. Unit:
        uncore_upi]
  unc_upi_rxl_basic_hdr_match.ncb
       [Matches on Receive path of a UPI Port; Non-Coherent Bypass. Unit:
        uncore_upi]
  unc_upi_rxl_basic_hdr_match.ncb_opc
       [Matches on Receive path of a UPI Port; Non-Coherent Bypass. Unit:
        uncore_upi]
  unc_upi_rxl_basic_hdr_match.ncs
       [Matches on Receive path of a UPI Port; Non-Coherent Standard. Unit:
        uncore_upi]
  unc_upi_rxl_basic_hdr_match.ncs_opc
       [Matches on Receive path of a UPI Port; Non-Coherent Standard. Unit:
        uncore_upi]
  unc_upi_rxl_basic_hdr_match.req
       [Matches on Receive path of a UPI Port; Request. Unit: uncore_upi]
  unc_upi_rxl_basic_hdr_match.req_opc
       [Matches on Receive path of a UPI Port; Request Opcode. Unit:
        uncore_upi]
  unc_upi_rxl_basic_hdr_match.rsp_data
       [Matches on Receive path of a UPI Port; Response - Data. Unit:
        uncore_upi]
  unc_upi_rxl_basic_hdr_match.rsp_data_opc
       [Matches on Receive path of a UPI Port; Response - Data. Unit:
        uncore_upi]
  unc_upi_rxl_basic_hdr_match.rsp_nodata
       [Matches on Receive path of a UPI Port; Response - No Data. Unit:
        uncore_upi]
  unc_upi_rxl_basic_hdr_match.rsp_nodata_opc
       [Matches on Receive path of a UPI Port; Response - No Data. Unit:
        uncore_upi]
  unc_upi_rxl_basic_hdr_match.rspcnflt
       [Matches on Receive path of a UPI Port; Response - Conflict. Unit:
        uncore_upi]
  unc_upi_rxl_basic_hdr_match.rspi
       [Matches on Receive path of a UPI Port; Response - Invalid. Unit:
        uncore_upi]
  unc_upi_rxl_basic_hdr_match.snp
       [Matches on Receive path of a UPI Port; Snoop. Unit: uncore_upi]
  unc_upi_rxl_basic_hdr_match.snp_opc
       [Matches on Receive path of a UPI Port; Snoop Opcode. Unit: uncore_upi]
  unc_upi_rxl_basic_hdr_match.wb
       [Matches on Receive path of a UPI Port; Writeback. Unit: uncore_upi]
  unc_upi_rxl_basic_hdr_match.wb_opc
       [Matches on Receive path of a UPI Port; Writeback. Unit: uncore_upi]
  unc_upi_rxl_bypassed.slot0
       [FLITs received which bypassed the Slot0 Receive Buffer. Unit:
        uncore_upi]
  unc_upi_rxl_bypassed.slot1
       [FLITs received which bypassed the Slot0 Receive Buffer. Unit:
        uncore_upi]
  unc_upi_rxl_bypassed.slot2
       [FLITs received which bypassed the Slot0 Receive Buffer. Unit:
        uncore_upi]
  unc_upi_rxl_crc_errors
       [CRC Errors Detected. Unit: uncore_upi]
  unc_upi_rxl_crc_llr_req_transmit
       [LLR Requests Sent. Unit: uncore_upi]
  unc_upi_rxl_credits_consumed_vn0
       [VN0 Credit Consumed. Unit: uncore_upi]
  unc_upi_rxl_credits_consumed_vn1
       [VN1 Credit Consumed. Unit: uncore_upi]
  unc_upi_rxl_credits_consumed_vna
       [VNA Credit Consumed. Unit: uncore_upi]
  unc_upi_rxl_flits.all_data
       [Valid data FLITs received from any slot. Unit: uncore_upi]
  unc_upi_rxl_flits.all_null
       [Null FLITs received from any slot. Unit: uncore_upi]
  unc_upi_rxl_flits.data
       [Valid Flits Received; Data. Unit: uncore_upi]
  unc_upi_rxl_flits.idle
       [Valid Flits Received; Idle. Unit: uncore_upi]
  unc_upi_rxl_flits.llcrd
       [Valid Flits Received; LLCRD Not Empty. Unit: uncore_upi]
  unc_upi_rxl_flits.llctrl
       [Valid Flits Received; LLCTRL. Unit: uncore_upi]
  unc_upi_rxl_flits.non_data
       [Protocol header and credit FLITs received from any slot. Unit:
        uncore_upi]
  unc_upi_rxl_flits.prothdr
       [Valid Flits Received; Protocol Header. Unit: uncore_upi]
  unc_upi_rxl_flits.slot0
       [Valid Flits Received; Slot 0. Unit: uncore_upi]
  unc_upi_rxl_flits.slot1
       [Valid Flits Received; Slot 1. Unit: uncore_upi]
  unc_upi_rxl_flits.slot2
       [Valid Flits Received; Slot 2. Unit: uncore_upi]
  unc_upi_rxl_inserts.slot0
       [RxQ Flit Buffer Allocations; Slot 0. Unit: uncore_upi]
  unc_upi_rxl_inserts.slot1
       [RxQ Flit Buffer Allocations; Slot 1. Unit: uncore_upi]
  unc_upi_rxl_inserts.slot2
       [RxQ Flit Buffer Allocations; Slot 2. Unit: uncore_upi]
  unc_upi_rxl_occupancy.slot0
       [RxQ Occupancy - All Packets; Slot 0. Unit: uncore_upi]
  unc_upi_rxl_occupancy.slot1
       [RxQ Occupancy - All Packets; Slot 1. Unit: uncore_upi]
  unc_upi_rxl_occupancy.slot2
       [RxQ Occupancy - All Packets; Slot 2. Unit: uncore_upi]
  unc_upi_rxl_slot_bypass.s0_rxq1
       [UNC_UPI_RxL_SLOT_BYPASS.S0_RXQ1. Unit: uncore_upi]
  unc_upi_rxl_slot_bypass.s0_rxq2
       [UNC_UPI_RxL_SLOT_BYPASS.S0_RXQ2. Unit: uncore_upi]
  unc_upi_rxl_slot_bypass.s1_rxq0
       [UNC_UPI_RxL_SLOT_BYPASS.S1_RXQ0. Unit: uncore_upi]
  unc_upi_rxl_slot_bypass.s1_rxq2
       [UNC_UPI_RxL_SLOT_BYPASS.S1_RXQ2. Unit: uncore_upi]
  unc_upi_rxl_slot_bypass.s2_rxq0
       [UNC_UPI_RxL_SLOT_BYPASS.S2_RXQ0. Unit: uncore_upi]
  unc_upi_rxl_slot_bypass.s2_rxq1
       [UNC_UPI_RxL_SLOT_BYPASS.S2_RXQ1. Unit: uncore_upi]
  unc_upi_txl0_power_cycles
       [Cycles in L0. Transmit side. Unit: uncore_upi]
  unc_upi_txl0p_clk_active.cfg_ctl
       [UNC_UPI_TxL0P_CLK_ACTIVE.CFG_CTL. Unit: uncore_upi]
  unc_upi_txl0p_clk_active.dfx
       [UNC_UPI_TxL0P_CLK_ACTIVE.DFX. Unit: uncore_upi]
  unc_upi_txl0p_clk_active.retry
       [UNC_UPI_TxL0P_CLK_ACTIVE.RETRY. Unit: uncore_upi]
  unc_upi_txl0p_clk_active.rxq
       [UNC_UPI_TxL0P_CLK_ACTIVE.RXQ. Unit: uncore_upi]
  unc_upi_txl0p_clk_active.rxq_bypass
       [UNC_UPI_TxL0P_CLK_ACTIVE.RXQ_BYPASS. Unit: uncore_upi]
  unc_upi_txl0p_clk_active.rxq_cred
       [UNC_UPI_TxL0P_CLK_ACTIVE.RXQ_CRED. Unit: uncore_upi]
  unc_upi_txl0p_clk_active.spare
       [UNC_UPI_TxL0P_CLK_ACTIVE.SPARE. Unit: uncore_upi]
  unc_upi_txl0p_clk_active.txq
       [UNC_UPI_TxL0P_CLK_ACTIVE.TXQ. Unit: uncore_upi]
  unc_upi_txl0p_power_cycles
       [Cycles in which the Tx of the Intel(R) Ultra Path Interconnect (UPI)
        is in L0p power mode. Unit: uncore_upi]
  unc_upi_txl0p_power_cycles_ll_enter
       [UNC_UPI_TxL0P_POWER_CYCLES_LL_ENTER. Unit: uncore_upi]
  unc_upi_txl0p_power_cycles_m3_exit
       [UNC_UPI_TxL0P_POWER_CYCLES_M3_EXIT. Unit: uncore_upi]
  unc_upi_txl_basic_hdr_match.ncb
       [Matches on Transmit path of a UPI Port; Non-Coherent Bypass. Unit:
        uncore_upi]
  unc_upi_txl_basic_hdr_match.ncb_opc
       [Matches on Transmit path of a UPI Port; Non-Coherent Bypass. Unit:
        uncore_upi]
  unc_upi_txl_basic_hdr_match.ncs
       [Matches on Transmit path of a UPI Port; Non-Coherent Standard. Unit:
        uncore_upi]
  unc_upi_txl_basic_hdr_match.ncs_opc
       [Matches on Transmit path of a UPI Port; Non-Coherent Standard. Unit:
        uncore_upi]
  unc_upi_txl_basic_hdr_match.req
       [Matches on Transmit path of a UPI Port; Request. Unit: uncore_upi]
  unc_upi_txl_basic_hdr_match.req_opc
       [Matches on Transmit path of a UPI Port; Request Opcode. Unit:
        uncore_upi]
  unc_upi_txl_basic_hdr_match.rsp_data
       [Matches on Transmit path of a UPI Port; Response - Data. Unit:
        uncore_upi]
  unc_upi_txl_basic_hdr_match.rsp_data_opc
       [Matches on Transmit path of a UPI Port; Response - Data. Unit:
        uncore_upi]
  unc_upi_txl_basic_hdr_match.rsp_nodata
       [Matches on Transmit path of a UPI Port; Response - No Data. Unit:
        uncore_upi]
  unc_upi_txl_basic_hdr_match.rsp_nodata_opc
       [Matches on Transmit path of a UPI Port; Response - No Data. Unit:
        uncore_upi]
  unc_upi_txl_basic_hdr_match.rspcnflt
       [Matches on Transmit path of a UPI Port; Response - Conflict. Unit:
        uncore_upi]
  unc_upi_txl_basic_hdr_match.rspi
       [Matches on Transmit path of a UPI Port; Response - Invalid. Unit:
        uncore_upi]
  unc_upi_txl_basic_hdr_match.snp
       [Matches on Transmit path of a UPI Port; Snoop. Unit: uncore_upi]
  unc_upi_txl_basic_hdr_match.snp_opc
       [Matches on Transmit path of a UPI Port; Snoop Opcode. Unit: uncore_upi]
  unc_upi_txl_basic_hdr_match.wb
       [Matches on Transmit path of a UPI Port; Writeback. Unit: uncore_upi]
  unc_upi_txl_basic_hdr_match.wb_opc
       [Matches on Transmit path of a UPI Port; Writeback. Unit: uncore_upi]
  unc_upi_txl_bypassed
       [FLITs that bypassed the TxL Buffer. Unit: uncore_upi]
  unc_upi_txl_flits.all_data
       [Valid data FLITs transmitted via any slot. Unit: uncore_upi]
  unc_upi_txl_flits.all_null
       [Null FLITs transmitted from any slot. Unit: uncore_upi]
  unc_upi_txl_flits.data
       [Valid Flits Sent; Data. Unit: uncore_upi]
  unc_upi_txl_flits.idle
       [Idle FLITs transmitted. Unit: uncore_upi]
  unc_upi_txl_flits.llcrd
       [Valid Flits Sent; LLCRD Not Empty. Unit: uncore_upi]
  unc_upi_txl_flits.llctrl
       [Valid Flits Sent; LLCTRL. Unit: uncore_upi]
  unc_upi_txl_flits.non_data
       [Protocol header and credit FLITs transmitted across any slot. Unit:
        uncore_upi]
  unc_upi_txl_flits.prothdr
       [Valid Flits Sent; Protocol Header. Unit: uncore_upi]
  unc_upi_txl_flits.slot0
       [Valid Flits Sent; Slot 0. Unit: uncore_upi]
  unc_upi_txl_flits.slot1
       [Valid Flits Sent; Slot 1. Unit: uncore_upi]
  unc_upi_txl_flits.slot2
       [Valid Flits Sent; Slot 2. Unit: uncore_upi]
  unc_upi_txl_inserts
       [Tx Flit Buffer Allocations. Unit: uncore_upi]
  unc_upi_txl_occupancy
       [Tx Flit Buffer Occupancy. Unit: uncore_upi]
  unc_upi_vna_credit_return_blocked_vn01
       [UNC_UPI_VNA_CREDIT_RETURN_BLOCKED_VN01. Unit: uncore_upi]
  unc_upi_vna_credit_return_occupancy
       [VNA Credits Pending Return - Occupancy. Unit: uncore_upi]
  upi_data_bandwidth_tx
       [UPI interconnect send bandwidth for payload. Derived from
        unc_upi_txl_flits.all_data. Unit: uncore_upi]

uncore io:
  llc_misses.pcie_read
       [PCI Express bandwidth reading at IIO. Derived from
        unc_iio_data_req_of_cpu.mem_read.part0. Unit: uncore_iio]
  llc_misses.pcie_write
       [PCI Express bandwidth writing at IIO. Derived from
        unc_iio_data_req_of_cpu.mem_write.part0. Unit: uncore_iio]
  unc_iio_clockticks
       [Clockticks of the IIO Traffic Controller. Unit: uncore_iio]
  unc_iio_comp_buf_inserts.cmpd.all_parts
       [PCIe Completion Buffer Inserts of completions with data: Part 0-3.
        Unit: uncore_iio]
  unc_iio_comp_buf_inserts.cmpd.part0
       [PCIe Completion Buffer Inserts of completions with data: Part 0. Unit:
        uncore_iio]
  unc_iio_comp_buf_inserts.cmpd.part1
       [PCIe Completion Buffer Inserts of completions with data: Part 1. Unit:
        uncore_iio]
  unc_iio_comp_buf_inserts.cmpd.part2
       [PCIe Completion Buffer Inserts of completions with data: Part 2. Unit:
        uncore_iio]
  unc_iio_comp_buf_inserts.cmpd.part3
       [PCIe Completion Buffer Inserts of completions with data: Part 3. Unit:
        uncore_iio]
  unc_iio_comp_buf_inserts.port0
       [PCIe Completion Buffer Inserts; Port 0. Unit: uncore_iio]
  unc_iio_comp_buf_inserts.port1
       [PCIe Completion Buffer Inserts; Port 1. Unit: uncore_iio]
  unc_iio_comp_buf_inserts.port2
       [PCIe Completion Buffer Inserts; Port 2. Unit: uncore_iio]
  unc_iio_comp_buf_inserts.port3
       [PCIe Completion Buffer Inserts; Port 3. Unit: uncore_iio]
  unc_iio_comp_buf_occupancy.cmpd.all_parts
       [PCIe Completion Buffer occupancy of completions with data: Part 0-3.
        Unit: uncore_iio]
  unc_iio_comp_buf_occupancy.cmpd.part0
       [PCIe Completion Buffer occupancy of completions with data: Part 0.
        Unit: uncore_iio]
  unc_iio_comp_buf_occupancy.cmpd.part1
       [PCIe Completion Buffer occupancy of completions with data: Part 1.
        Unit: uncore_iio]
  unc_iio_comp_buf_occupancy.cmpd.part2
       [PCIe Completion Buffer occupancy of completions with data: Part 2.
        Unit: uncore_iio]
  unc_iio_comp_buf_occupancy.cmpd.part3
       [PCIe Completion Buffer occupancy of completions with data: Part 3.
        Unit: uncore_iio]
  unc_iio_data_req_by_cpu.cfg_read.part0
       [Data requested by the CPU; Core reading from Card's PCICFG space.
        Unit: uncore_iio]
  unc_iio_data_req_by_cpu.cfg_read.part1
       [Data requested by the CPU; Core reading from Card's PCICFG space.
        Unit: uncore_iio]
  unc_iio_data_req_by_cpu.cfg_read.part2
       [Data requested by the CPU; Core reading from Card's PCICFG space.
        Unit: uncore_iio]
  unc_iio_data_req_by_cpu.cfg_read.part3
       [Data requested by the CPU; Core reading from Card's PCICFG space.
        Unit: uncore_iio]
  unc_iio_data_req_by_cpu.cfg_read.vtd0
       [Data requested by the CPU; Core reading from Card's PCICFG space.
        Unit: uncore_iio]
  unc_iio_data_req_by_cpu.cfg_read.vtd1
       [Data requested by the CPU; Core reading from Card's PCICFG space.
        Unit: uncore_iio]
  unc_iio_data_req_by_cpu.cfg_write.part0
       [Data requested by the CPU; Core writing to Card's PCICFG space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.cfg_write.part1
       [Data requested by the CPU; Core writing to Card's PCICFG space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.cfg_write.part2
       [Data requested by the CPU; Core writing to Card's PCICFG space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.cfg_write.part3
       [Data requested by the CPU; Core writing to Card's PCICFG space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.cfg_write.vtd0
       [Data requested by the CPU; Core writing to Card's PCICFG space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.cfg_write.vtd1
       [Data requested by the CPU; Core writing to Card's PCICFG space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.io_read.part0
       [Data requested by the CPU; Core reading from Card's IO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.io_read.part1
       [Data requested by the CPU; Core reading from Card's IO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.io_read.part2
       [Data requested by the CPU; Core reading from Card's IO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.io_read.part3
       [Data requested by the CPU; Core reading from Card's IO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.io_read.vtd0
       [Data requested by the CPU; Core reading from Card's IO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.io_read.vtd1
       [Data requested by the CPU; Core reading from Card's IO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.io_write.part0
       [Data requested by the CPU; Core writing to Card's IO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.io_write.part1
       [Data requested by the CPU; Core writing to Card's IO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.io_write.part2
       [Data requested by the CPU; Core writing to Card's IO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.io_write.part3
       [Data requested by the CPU; Core writing to Card's IO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.io_write.vtd0
       [Data requested by the CPU; Core writing to Card's IO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.io_write.vtd1
       [Data requested by the CPU; Core writing to Card's IO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.mem_read.part0
       [Read request for 4 bytes made by the CPU to IIO Part0. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.mem_read.part1
       [Read request for 4 bytes made by the CPU to IIO Part1. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.mem_read.part2
       [Read request for 4 bytes made by the CPU to IIO Part2. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.mem_read.part3
       [Read request for 4 bytes made by the CPU to IIO Part3. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.mem_read.vtd0
       [Data requested by the CPU; Core reading from Card's MMIO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.mem_read.vtd1
       [Data requested by the CPU; Core reading from Card's MMIO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.mem_write.part0
       [Write request of 4 bytes made to IIO Part0 by the CPU. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.mem_write.part1
       [Write request of 4 bytes made to IIO Part1 by the CPU. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.mem_write.part2
       [Write request of 4 bytes made to IIO Part2 by the CPU. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.mem_write.part3
       [Write request of 4 bytes made to IIO Part3 by the CPU. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.mem_write.vtd0
       [Data requested by the CPU; Core writing to Card's MMIO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.mem_write.vtd1
       [Data requested by the CPU; Core writing to Card's MMIO space. Unit:
        uncore_iio]
  unc_iio_data_req_by_cpu.peer_read.part0
       [Peer to peer read request for 4 bytes made by a different IIO unit to
        IIO Part0. Unit: uncore_iio]
  unc_iio_data_req_by_cpu.peer_read.part1
       [Peer to peer read request for 4 bytes made by a different IIO unit to
        IIO Part1. Unit: uncore_iio]
  unc_iio_data_req_by_cpu.peer_read.part2
       [Peer to peer read request for 4 bytes made by a different IIO unit to
        IIO Part2. Unit: uncore_iio]
  unc_iio_data_req_by_cpu.peer_read.part3
       [Peer to peer read request for 4 bytes made by a different IIO unit to
        IIO Part3. Unit: uncore_iio]
  unc_iio_data_req_by_cpu.peer_read.vtd0
       [Data requested by the CPU; Another card (different IIO stack) reading
        from this card. Unit: uncore_iio]
  unc_iio_data_req_by_cpu.peer_read.vtd1
       [Data requested by the CPU; Another card (different IIO stack) reading
        from this card. Unit: uncore_iio]
  unc_iio_data_req_by_cpu.peer_write.part0
       [Peer to peer write request of 4 bytes made to IIO Part0 by a different
        IIO unit. Unit: uncore_iio]
  unc_iio_data_req_by_cpu.peer_write.part1
       [Peer to peer write request of 4 bytes made to IIO Part1 by a different
        IIO unit. Unit: uncore_iio]
  unc_iio_data_req_by_cpu.peer_write.part2
       [Peer to peer write request of 4 bytes made to IIO Part2 by a different
        IIO unit. Unit: uncore_iio]
  unc_iio_data_req_by_cpu.peer_write.part3
       [Peer to peer write request of 4 bytes made to IIO Part3 by a different
        IIO unit. Unit: uncore_iio]
  unc_iio_data_req_by_cpu.peer_write.vtd0
       [Data requested by the CPU; Another card (different IIO stack) writing
        to this card. Unit: uncore_iio]
  unc_iio_data_req_by_cpu.peer_write.vtd1
       [Data requested by the CPU; Another card (different IIO stack) writing
        to this card. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.atomic.part0
       [Data requested of the CPU; Atomic requests targeting DRAM. Unit:
        uncore_iio]
  unc_iio_data_req_of_cpu.atomic.part1
       [Data requested of the CPU; Atomic requests targeting DRAM. Unit:
        uncore_iio]
  unc_iio_data_req_of_cpu.atomic.part2
       [Data requested of the CPU; Atomic requests targeting DRAM. Unit:
        uncore_iio]
  unc_iio_data_req_of_cpu.atomic.part3
       [Data requested of the CPU; Atomic requests targeting DRAM. Unit:
        uncore_iio]
  unc_iio_data_req_of_cpu.atomic.vtd0
       [Data requested of the CPU; Atomic requests targeting DRAM. Unit:
        uncore_iio]
  unc_iio_data_req_of_cpu.atomic.vtd1
       [Data requested of the CPU; Atomic requests targeting DRAM. Unit:
        uncore_iio]
  unc_iio_data_req_of_cpu.atomiccmp.part0
       [Data requested of the CPU; Completion of atomic requests targeting
        DRAM. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.atomiccmp.part1
       [Data requested of the CPU; Completion of atomic requests targeting
        DRAM. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.atomiccmp.part2
       [Data requested of the CPU; Completion of atomic requests targeting
        DRAM. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.atomiccmp.part3
       [Data requested of the CPU; Completion of atomic requests targeting
        DRAM. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.mem_read.part0
       [PCI Express bandwidth reading at IIO, part 0. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.mem_read.part1
       [PCI Express bandwidth reading at IIO, part 1. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.mem_read.part2
       [PCI Express bandwidth reading at IIO, part 2. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.mem_read.part3
       [PCI Express bandwidth reading at IIO, part 3. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.mem_read.vtd0
       [Data requested of the CPU; Card reading from DRAM. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.mem_read.vtd1
       [Data requested of the CPU; Card reading from DRAM. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.mem_write.part0
       [PCI Express bandwidth writing at IIO, part 0. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.mem_write.part1
       [PCI Express bandwidth writing at IIO, part 1. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.mem_write.part2
       [PCI Express bandwidth writing at IIO, part 2. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.mem_write.part3
       [PCI Express bandwidth writing at IIO, part 3. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.mem_write.vtd0
       [Data requested of the CPU; Card writing to DRAM. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.mem_write.vtd1
       [Data requested of the CPU; Card writing to DRAM. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.msg.part0
       [Data requested of the CPU; Messages. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.msg.part1
       [Data requested of the CPU; Messages. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.msg.part2
       [Data requested of the CPU; Messages. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.msg.part3
       [Data requested of the CPU; Messages. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.msg.vtd0
       [Data requested of the CPU; Messages. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.msg.vtd1
       [Data requested of the CPU; Messages. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.peer_read.part0
       [Peer to peer read request for 4 bytes made by IIO Part0 to an IIO
        target. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.peer_read.part1
       [Peer to peer read request for 4 bytes made by IIO Part1 to an IIO
        target. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.peer_read.part2
       [Peer to peer read request for 4 bytes made by IIO Part2 to an IIO
        target. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.peer_read.part3
       [Peer to peer read request for 4 bytes made by IIO Part3 to an IIO
        target. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.peer_read.vtd0
       [Data requested of the CPU; Card reading from another Card (same or
        different stack). Unit: uncore_iio]
  unc_iio_data_req_of_cpu.peer_read.vtd1
       [Data requested of the CPU; Card reading from another Card (same or
        different stack). Unit: uncore_iio]
  unc_iio_data_req_of_cpu.peer_write.part0
       [Peer to peer write request of 4 bytes made by IIO Part0 to an IIO
        target. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.peer_write.part1
       [Peer to peer write request of 4 bytes made by IIO Part0 to an IIO
        target. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.peer_write.part2
       [Peer to peer write request of 4 bytes made by IIO Part0 to an IIO
        target. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.peer_write.part3
       [Peer to peer write request of 4 bytes made by IIO Part0 to an IIO
        target. Unit: uncore_iio]
  unc_iio_data_req_of_cpu.peer_write.vtd0
       [Data requested of the CPU; Card writing to another Card (same or
        different stack). Unit: uncore_iio]
  unc_iio_data_req_of_cpu.peer_write.vtd1
       [Data requested of the CPU; Card writing to another Card (same or
        different stack). Unit: uncore_iio]
  unc_iio_link_num_corr_err
       [Num Link Correctable Errors. Unit: uncore_iio]
  unc_iio_link_num_retries
       [Num Link Retries. Unit: uncore_iio]
  unc_iio_mask_match
       [Number packets that passed the Mask/Match Filter. Unit: uncore_iio]
  unc_iio_mask_match_and.bus0
       [AND Mask/match for debug bus; Non-PCIE bus. Unit: uncore_iio]
  unc_iio_mask_match_and.bus0_bus1
       [AND Mask/match for debug bus; Non-PCIE bus and PCIE bus. Unit:
        uncore_iio]
  unc_iio_mask_match_and.bus0_not_bus1
       [AND Mask/match for debug bus; Non-PCIE bus and !(PCIE bus). Unit:
        uncore_iio]
  unc_iio_mask_match_and.bus1
       [AND Mask/match for debug bus; PCIE bus. Unit: uncore_iio]
  unc_iio_mask_match_and.not_bus0_bus1
       [AND Mask/match for debug bus; !(Non-PCIE bus) and PCIE bus. Unit:
        uncore_iio]
  unc_iio_mask_match_and.not_bus0_not_bus1
       [AND Mask/match for debug bus. Unit: uncore_iio]
  unc_iio_mask_match_or.bus0
       [OR Mask/match for debug bus; Non-PCIE bus. Unit: uncore_iio]
  unc_iio_mask_match_or.bus0_bus1
       [OR Mask/match for debug bus; Non-PCIE bus and PCIE bus. Unit:
        uncore_iio]
  unc_iio_mask_match_or.bus0_not_bus1
       [OR Mask/match for debug bus; Non-PCIE bus and !(PCIE bus). Unit:
        uncore_iio]
  unc_iio_mask_match_or.bus1
       [OR Mask/match for debug bus; PCIE bus. Unit: uncore_iio]
  unc_iio_mask_match_or.not_bus0_bus1
       [OR Mask/match for debug bus; !(Non-PCIE bus) and PCIE bus. Unit:
        uncore_iio]
  unc_iio_mask_match_or.not_bus0_not_bus1
       [OR Mask/match for debug bus; !(Non-PCIE bus) and !(PCIE bus). Unit:
        uncore_iio]
  unc_iio_nothing
       [Counting disabled. Unit: uncore_iio]
  unc_iio_symbol_times
       [Symbol Times on Link. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.cfg_read.part0
       [Number Transactions requested by the CPU; Core reading from Card's
        PCICFG space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.cfg_read.part1
       [Number Transactions requested by the CPU; Core reading from Card's
        PCICFG space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.cfg_read.part2
       [Number Transactions requested by the CPU; Core reading from Card's
        PCICFG space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.cfg_read.part3
       [Number Transactions requested by the CPU; Core reading from Card's
        PCICFG space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.cfg_read.vtd0
       [Number Transactions requested by the CPU; Core reading from Card's
        PCICFG space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.cfg_read.vtd1
       [Number Transactions requested by the CPU; Core reading from Card's
        PCICFG space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.cfg_write.part0
       [Number Transactions requested by the CPU; Core writing to Card's
        PCICFG space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.cfg_write.part1
       [Number Transactions requested by the CPU; Core writing to Card's
        PCICFG space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.cfg_write.part2
       [Number Transactions requested by the CPU; Core writing to Card's
        PCICFG space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.cfg_write.part3
       [Number Transactions requested by the CPU; Core writing to Card's
        PCICFG space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.cfg_write.vtd0
       [Number Transactions requested by the CPU; Core writing to Card's
        PCICFG space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.cfg_write.vtd1
       [Number Transactions requested by the CPU; Core writing to Card's
        PCICFG space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.io_read.part0
       [Number Transactions requested by the CPU; Core reading from Card's IO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.io_read.part1
       [Number Transactions requested by the CPU; Core reading from Card's IO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.io_read.part2
       [Number Transactions requested by the CPU; Core reading from Card's IO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.io_read.part3
       [Number Transactions requested by the CPU; Core reading from Card's IO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.io_read.vtd0
       [Number Transactions requested by the CPU; Core reading from Card's IO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.io_read.vtd1
       [Number Transactions requested by the CPU; Core reading from Card's IO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.io_write.part0
       [Number Transactions requested by the CPU; Core writing to Card's IO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.io_write.part1
       [Number Transactions requested by the CPU; Core writing to Card's IO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.io_write.part2
       [Number Transactions requested by the CPU; Core writing to Card's IO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.io_write.part3
       [Number Transactions requested by the CPU; Core writing to Card's IO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.io_write.vtd0
       [Number Transactions requested by the CPU; Core writing to Card's IO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.io_write.vtd1
       [Number Transactions requested by the CPU; Core writing to Card's IO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.mem_read.part0
       [Read request for up to a 64 byte transaction is made by the CPU to IIO
        Part0. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.mem_read.part1
       [Read request for up to a 64 byte transaction is made by the CPU to IIO
        Part1. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.mem_read.part2
       [Read request for up to a 64 byte transaction is made by the CPU to IIO
        Part2. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.mem_read.part3
       [Read request for up to a 64 byte transaction is made by the CPU to IIO
        Part3. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.mem_read.vtd0
       [Number Transactions requested by the CPU; Core reading from Card's
        MMIO space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.mem_read.vtd1
       [Number Transactions requested by the CPU; Core reading from Card's
        MMIO space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.mem_write.part0
       [Write request of up to a 64 byte transaction is made to IIO Part0 by
        the CPU. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.mem_write.part1
       [Write request of up to a 64 byte transaction is made to IIO Part1 by
        the CPU. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.mem_write.part2
       [Write request of up to a 64 byte transaction is made to IIO Part2 by
        the CPU. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.mem_write.part3
       [Write request of up to a 64 byte transaction is made to IIO Part3 by
        the CPU. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.mem_write.vtd0
       [Number Transactions requested by the CPU; Core writing to Card's MMIO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.mem_write.vtd1
       [Number Transactions requested by the CPU; Core writing to Card's MMIO
        space. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.peer_read.part0
       [Peer to peer read request for up to a 64 byte transaction is made by a
        different IIO unit to IIO Part0. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.peer_read.part1
       [Peer to peer read request for up to a 64 byte transaction is made by a
        different IIO unit to IIO Part1. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.peer_read.part2
       [Peer to peer read request for up to a 64 byte transaction is made by a
        different IIO unit to IIO Part2. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.peer_read.part3
       [Peer to peer read request for up to a 64 byte transaction is made by a
        different IIO unit to IIO Part3. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.peer_read.vtd0
       [Number Transactions requested by the CPU; Another card (different IIO
        stack) reading from this card. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.peer_read.vtd1
       [Number Transactions requested by the CPU; Another card (different IIO
        stack) reading from this card. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.peer_write.part0
       [Peer to peer write request of up to a 64 byte transaction is made to
        IIO Part0 by a different IIO unit. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.peer_write.part1
       [Peer to peer write request of up to a 64 byte transaction is made to
        IIO Part1 by a different IIO unit. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.peer_write.part2
       [Peer to peer write request of up to a 64 byte transaction is made to
        IIO Part2 by a different IIO unit. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.peer_write.part3
       [Peer to peer write request of up to a 64 byte transaction is made to
        IIO Part3 by a different IIO unit. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.peer_write.vtd0
       [Number Transactions requested by the CPU; Another card (different IIO
        stack) writing to this card. Unit: uncore_iio]
  unc_iio_txn_req_by_cpu.peer_write.vtd1
       [Number Transactions requested by the CPU; Another card (different IIO
        stack) writing to this card. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.atomic.part0
       [Number Transactions requested of the CPU; Atomic requests targeting
        DRAM. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.atomic.part1
       [Number Transactions requested of the CPU; Atomic requests targeting
        DRAM. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.atomic.part2
       [Number Transactions requested of the CPU; Atomic requests targeting
        DRAM. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.atomic.part3
       [Number Transactions requested of the CPU; Atomic requests targeting
        DRAM. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.atomic.vtd0
       [Number Transactions requested of the CPU; Atomic requests targeting
        DRAM. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.atomic.vtd1
       [Number Transactions requested of the CPU; Atomic requests targeting
        DRAM. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.atomiccmp.part0
       [Number Transactions requested of the CPU; Completion of atomic
        requests targeting DRAM. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.atomiccmp.part1
       [Number Transactions requested of the CPU; Completion of atomic
        requests targeting DRAM. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.atomiccmp.part2
       [Number Transactions requested of the CPU; Completion of atomic
        requests targeting DRAM. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.atomiccmp.part3
       [Number Transactions requested of the CPU; Completion of atomic
        requests targeting DRAM. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.mem_read.part0
       [Read request for up to a 64 byte transaction is made by IIO Part0 to
        Memory. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.mem_read.part1
       [Read request for up to a 64 byte transaction is made by IIO Part1 to
        Memory. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.mem_read.part2
       [Read request for up to a 64 byte transaction is made by IIO Part2 to
        Memory. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.mem_read.part3
       [Read request for up to a 64 byte transaction is made by IIO Part3 to
        Memory. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.mem_read.vtd0
       [Number Transactions requested of the CPU; Card reading from DRAM.
        Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.mem_read.vtd1
       [Number Transactions requested of the CPU; Card reading from DRAM.
        Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.mem_write.part0
       [Write request of up to a 64 byte transaction is made by IIO Part0 to
        Memory. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.mem_write.part1
       [Write request of up to a 64 byte transaction is made by IIO Part1 to
        Memory. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.mem_write.part2
       [Write request of up to a 64 byte transaction is made by IIO Part2 to
        Memory. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.mem_write.part3
       [Write request of up to a 64 byte transaction is made by IIO Part3 to
        Memory. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.mem_write.vtd0
       [Number Transactions requested of the CPU; Card writing to DRAM. Unit:
        uncore_iio]
  unc_iio_txn_req_of_cpu.mem_write.vtd1
       [Number Transactions requested of the CPU; Card writing to DRAM. Unit:
        uncore_iio]
  unc_iio_txn_req_of_cpu.msg.part0
       [Number Transactions requested of the CPU; Messages. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.msg.part1
       [Number Transactions requested of the CPU; Messages. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.msg.part2
       [Number Transactions requested of the CPU; Messages. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.msg.part3
       [Number Transactions requested of the CPU; Messages. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.msg.vtd0
       [Number Transactions requested of the CPU; Messages. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.msg.vtd1
       [Number Transactions requested of the CPU; Messages. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.peer_read.part0
       [Peer to peer read request of up to a 64 byte transaction is made by
        IIO Part0 to an IIO target. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.peer_read.part1
       [Peer to peer read request of up to a 64 byte transaction is made by
        IIO Part1 to an IIO target. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.peer_read.part2
       [Peer to peer read request of up to a 64 byte transaction is made by
        IIO Part2 to an IIO target. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.peer_read.part3
       [Peer to peer read request of up to a 64 byte transaction is made by
        IIO Part3 to an IIO target. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.peer_read.vtd0
       [Number Transactions requested of the CPU; Card reading from another
        Card (same or different stack). Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.peer_read.vtd1
       [Number Transactions requested of the CPU; Card reading from another
        Card (same or different stack). Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.peer_write.part0
       [Peer to peer write request of up to a 64 byte transaction is made by
        IIO Part0 to an IIO target. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.peer_write.part1
       [Peer to peer write request of up to a 64 byte transaction is made by
        IIO Part1 to an IIO target. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.peer_write.part2
       [Peer to peer write request of up to a 64 byte transaction is made by
        IIO Part2 to an IIO target. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.peer_write.part3
       [Peer to peer write request of up to a 64 byte transaction is made by
        IIO Part3 to an IIO target. Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.peer_write.vtd0
       [Number Transactions requested of the CPU; Card writing to another Card
        (same or different stack). Unit: uncore_iio]
  unc_iio_txn_req_of_cpu.peer_write.vtd1
       [Number Transactions requested of the CPU; Card writing to another Card
        (same or different stack). Unit: uncore_iio]
  unc_iio_vtd_access.ctxt_miss
       [VTd Access; context cache miss. Unit: uncore_iio]
  unc_iio_vtd_access.l1_miss
       [VTd Access; L1 miss. Unit: uncore_iio]
  unc_iio_vtd_access.l2_miss
       [VTd Access; L2 miss. Unit: uncore_iio]
  unc_iio_vtd_access.l3_miss
       [VTd Access; L3 miss. Unit: uncore_iio]
  unc_iio_vtd_access.l4_page_hit
       [VTd Access; Vtd hit. Unit: uncore_iio]
  unc_iio_vtd_access.tlb1_miss
       [VTd Access; TLB miss. Unit: uncore_iio]
  unc_iio_vtd_access.tlb_full
       [VTd Access; TLB is full. Unit: uncore_iio]
  unc_iio_vtd_access.tlb_miss
       [VTd Access; TLB miss. Unit: uncore_iio]
  unc_iio_vtd_occupancy
       [VTd Occupancy. Unit: uncore_iio]

uncore memory:
  llc_misses.mem_read
       [read requests to memory controller. Derived from unc_m_cas_count.rd.
        Unit: uncore_imc]
  llc_misses.mem_write
       [write requests to memory controller. Derived from unc_m_cas_count.wr.
        Unit: uncore_imc]
  unc_m_act_count.byp
       [DRAM Activate Count; Activate due to Bypass. Unit: uncore_imc]
  unc_m_act_count.rd
       [DRAM Activate Count; Activate due to Read. Unit: uncore_imc]
  unc_m_act_count.wr
       [DRAM Page Activate commands sent due to a write request. Unit:
        uncore_imc]
  unc_m_byp_cmds.act
       [ACT command issued by 2 cycle bypass. Unit: uncore_imc]
  unc_m_byp_cmds.cas
       [CAS command issued by 2 cycle bypass. Unit: uncore_imc]
  unc_m_byp_cmds.pre
       [PRE command issued by 2 cycle bypass. Unit: uncore_imc]
  unc_m_cas_count.all
       [All DRAM CAS Commands issued. Unit: uncore_imc]
  unc_m_cas_count.rd
       [All DRAM Read CAS Commands issued (including underfills). Unit:
        uncore_imc]
  unc_m_cas_count.rd_isoch
       [DRAM CAS (Column Address Strobe) Commands.; Read CAS issued in Read
        ISOCH Mode. Unit: uncore_imc]
  unc_m_cas_count.rd_reg
       [All DRAM Read CAS Commands issued (does not include underfills). Unit:
        uncore_imc]
  unc_m_cas_count.rd_rmm
       [DRAM CAS (Column Address Strobe) Commands.; Read CAS issued in RMM.
        Unit: uncore_imc]
  unc_m_cas_count.rd_underfill
       [DRAM Underfill Read CAS Commands issued. Unit: uncore_imc]
  unc_m_cas_count.rd_wmm
       [DRAM CAS (Column Address Strobe) Commands.; Read CAS issued in WMM.
        Unit: uncore_imc]
  unc_m_cas_count.wr
       [All DRAM Write CAS commands issued. Unit: uncore_imc]
  unc_m_cas_count.wr_isoch
       [DRAM CAS (Column Address Strobe) Commands.; Read CAS issued in Write
        ISOCH Mode. Unit: uncore_imc]
  unc_m_cas_count.wr_rmm
       [DRAM CAS (Column Address Strobe) Commands.; DRAM WR_CAS (w/ and w/out
        auto-pre) in Read Major Mode. Unit: uncore_imc]
  unc_m_cas_count.wr_wmm
       [DRAM CAS (Column Address Strobe) Commands.; DRAM WR_CAS (w/ and w/out
        auto-pre) in Write Major Mode. Unit: uncore_imc]
  unc_m_clockticks
       [Memory controller clock ticks. Unit: uncore_imc]
  unc_m_clockticks_f
       [Clockticks in the Memory Controller using a dedicated 48-bit Fixed
        Counter. Unit: uncore_imc]
  unc_m_dram_pre_all
       [DRAM Precharge All Commands. Unit: uncore_imc]
  unc_m_dram_refresh.high
       [Number of DRAM Refreshes Issued. Unit: uncore_imc]
  unc_m_dram_refresh.panic
       [Number of DRAM Refreshes Issued. Unit: uncore_imc]
  unc_m_ecc_correctable_errors
       [ECC Correctable Errors. Unit: uncore_imc]
  unc_m_major_modes.isoch
       [Cycles in a Major Mode; Isoch Major Mode. Unit: uncore_imc]
  unc_m_major_modes.partial
       [Cycles in a Major Mode; Partial Major Mode. Unit: uncore_imc]
  unc_m_major_modes.read
       [Cycles in a Major Mode; Read Major Mode. Unit: uncore_imc]
  unc_m_major_modes.write
       [Cycles in a Major Mode; Write Major Mode. Unit: uncore_imc]
  unc_m_power_channel_dlloff
       [Channel DLLOFF Cycles. Unit: uncore_imc]
  unc_m_power_channel_ppd
       [Cycles where DRAM ranks are in power down (CKE) mode. Unit: uncore_imc]
  unc_m_power_cke_cycles.rank0
       [CKE_ON_CYCLES by Rank; DIMM ID. Unit: uncore_imc]
  unc_m_power_cke_cycles.rank1
       [CKE_ON_CYCLES by Rank; DIMM ID. Unit: uncore_imc]
  unc_m_power_cke_cycles.rank2
       [CKE_ON_CYCLES by Rank; DIMM ID. Unit: uncore_imc]
  unc_m_power_cke_cycles.rank3
       [CKE_ON_CYCLES by Rank; DIMM ID. Unit: uncore_imc]
  unc_m_power_cke_cycles.rank4
       [CKE_ON_CYCLES by Rank; DIMM ID. Unit: uncore_imc]
  unc_m_power_cke_cycles.rank5
       [CKE_ON_CYCLES by Rank; DIMM ID. Unit: uncore_imc]
  unc_m_power_cke_cycles.rank6
       [CKE_ON_CYCLES by Rank; DIMM ID. Unit: uncore_imc]
  unc_m_power_cke_cycles.rank7
       [CKE_ON_CYCLES by Rank; DIMM ID. Unit: uncore_imc]
  unc_m_power_critical_throttle_cycles
       [Critical Throttle Cycles. Unit: uncore_imc]
  unc_m_power_pcu_throttling
       [UNC_M_POWER_PCU_THROTTLING. Unit: uncore_imc]
  unc_m_power_self_refresh
       [Cycles Memory is in self refresh power mode. Unit: uncore_imc]
  unc_m_power_throttle_cycles.rank0
       [Throttle Cycles for Rank 0; DIMM ID. Unit: uncore_imc]
  unc_m_power_throttle_cycles.rank1
       [Throttle Cycles for Rank 0; DIMM ID. Unit: uncore_imc]
  unc_m_power_throttle_cycles.rank2
       [Throttle Cycles for Rank 0; DIMM ID. Unit: uncore_imc]
  unc_m_power_throttle_cycles.rank3
       [Throttle Cycles for Rank 0; DIMM ID. Unit: uncore_imc]
  unc_m_power_throttle_cycles.rank4
       [Throttle Cycles for Rank 0; DIMM ID. Unit: uncore_imc]
  unc_m_power_throttle_cycles.rank5
       [Throttle Cycles for Rank 0; DIMM ID. Unit: uncore_imc]
  unc_m_power_throttle_cycles.rank6
       [Throttle Cycles for Rank 0; DIMM ID. Unit: uncore_imc]
  unc_m_power_throttle_cycles.rank7
       [Throttle Cycles for Rank 0; DIMM ID. Unit: uncore_imc]
  unc_m_pre_count.byp
       [DRAM Precharge commands.; Precharge due to bypass. Unit: uncore_imc]
  unc_m_pre_count.page_close
       [DRAM Precharge commands.; Precharge due to timer expiration. Unit:
        uncore_imc]
  unc_m_pre_count.page_miss
       [Pre-charges due to page misses. Unit: uncore_imc]
  unc_m_pre_count.rd
       [Pre-charge for reads. Unit: uncore_imc]
  unc_m_pre_count.wr
       [Pre-charge for writes. Unit: uncore_imc]
  unc_m_preemption.rd_preempt_rd
       [Read Preemption Count; Read over Read Preemption. Unit: uncore_imc]
  unc_m_preemption.rd_preempt_wr
       [Read Preemption Count; Read over Write Preemption. Unit: uncore_imc]
  unc_m_rd_cas_prio.high
       [Read CAS issued with HIGH priority. Unit: uncore_imc]
  unc_m_rd_cas_prio.low
       [Read CAS issued with LOW priority. Unit: uncore_imc]
  unc_m_rd_cas_prio.med
       [Read CAS issued with MEDIUM priority. Unit: uncore_imc]
  unc_m_rd_cas_prio.panic
       [Read CAS issued with PANIC NON ISOCH priority (starved). Unit:
        uncore_imc]
  unc_m_rd_cas_rank0.allbanks
       [RD_CAS Access to Rank 0; All Banks. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank0
       [RD_CAS Access to Rank 0; Bank 0. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank1
       [RD_CAS Access to Rank 0; Bank 1. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank10
       [RD_CAS Access to Rank 0; Bank 10. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank11
       [RD_CAS Access to Rank 0; Bank 11. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank12
       [RD_CAS Access to Rank 0; Bank 12. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank13
       [RD_CAS Access to Rank 0; Bank 13. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank14
       [RD_CAS Access to Rank 0; Bank 14. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank15
       [RD_CAS Access to Rank 0; Bank 15. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank2
       [RD_CAS Access to Rank 0; Bank 2. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank3
       [RD_CAS Access to Rank 0; Bank 3. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank4
       [RD_CAS Access to Rank 0; Bank 4. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank5
       [RD_CAS Access to Rank 0; Bank 5. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank6
       [RD_CAS Access to Rank 0; Bank 6. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank7
       [RD_CAS Access to Rank 0; Bank 7. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank8
       [RD_CAS Access to Rank 0; Bank 8. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bank9
       [RD_CAS Access to Rank 0; Bank 9. Unit: uncore_imc]
  unc_m_rd_cas_rank0.bankg0
       [RD_CAS Access to Rank 0; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_rd_cas_rank0.bankg1
       [RD_CAS Access to Rank 0; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_rd_cas_rank0.bankg2
       [RD_CAS Access to Rank 0; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_rd_cas_rank0.bankg3
       [RD_CAS Access to Rank 0; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_rd_cas_rank1.allbanks
       [RD_CAS Access to Rank 1; All Banks. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank0
       [RD_CAS Access to Rank 1; Bank 0. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank1
       [RD_CAS Access to Rank 1; Bank 1. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank10
       [RD_CAS Access to Rank 1; Bank 10. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank11
       [RD_CAS Access to Rank 1; Bank 11. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank12
       [RD_CAS Access to Rank 1; Bank 12. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank13
       [RD_CAS Access to Rank 1; Bank 13. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank14
       [RD_CAS Access to Rank 1; Bank 14. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank15
       [RD_CAS Access to Rank 1; Bank 15. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank2
       [RD_CAS Access to Rank 1; Bank 2. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank3
       [RD_CAS Access to Rank 1; Bank 3. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank4
       [RD_CAS Access to Rank 1; Bank 4. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank5
       [RD_CAS Access to Rank 1; Bank 5. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank6
       [RD_CAS Access to Rank 1; Bank 6. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank7
       [RD_CAS Access to Rank 1; Bank 7. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank8
       [RD_CAS Access to Rank 1; Bank 8. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bank9
       [RD_CAS Access to Rank 1; Bank 9. Unit: uncore_imc]
  unc_m_rd_cas_rank1.bankg0
       [RD_CAS Access to Rank 1; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_rd_cas_rank1.bankg1
       [RD_CAS Access to Rank 1; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_rd_cas_rank1.bankg2
       [RD_CAS Access to Rank 1; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_rd_cas_rank1.bankg3
       [RD_CAS Access to Rank 1; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_rd_cas_rank2.allbanks
       [RD_CAS Access to Rank 2; All Banks. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank0
       [RD_CAS Access to Rank 2; Bank 0. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank1
       [RD_CAS Access to Rank 2; Bank 1. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank10
       [RD_CAS Access to Rank 2; Bank 10. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank11
       [RD_CAS Access to Rank 2; Bank 11. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank12
       [RD_CAS Access to Rank 2; Bank 12. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank13
       [RD_CAS Access to Rank 2; Bank 13. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank14
       [RD_CAS Access to Rank 2; Bank 14. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank15
       [RD_CAS Access to Rank 2; Bank 15. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank2
       [RD_CAS Access to Rank 2; Bank 2. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank3
       [RD_CAS Access to Rank 2; Bank 3. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank4
       [RD_CAS Access to Rank 2; Bank 4. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank5
       [RD_CAS Access to Rank 2; Bank 5. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank6
       [RD_CAS Access to Rank 2; Bank 6. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank7
       [RD_CAS Access to Rank 2; Bank 7. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank8
       [RD_CAS Access to Rank 2; Bank 8. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bank9
       [RD_CAS Access to Rank 2; Bank 9. Unit: uncore_imc]
  unc_m_rd_cas_rank2.bankg0
       [RD_CAS Access to Rank 2; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_rd_cas_rank2.bankg1
       [RD_CAS Access to Rank 2; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_rd_cas_rank2.bankg2
       [RD_CAS Access to Rank 2; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_rd_cas_rank2.bankg3
       [RD_CAS Access to Rank 2; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_rd_cas_rank3.allbanks
       [RD_CAS Access to Rank 3; All Banks. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank0
       [RD_CAS Access to Rank 3; Bank 0. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank1
       [RD_CAS Access to Rank 3; Bank 1. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank10
       [RD_CAS Access to Rank 3; Bank 10. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank11
       [RD_CAS Access to Rank 3; Bank 11. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank12
       [RD_CAS Access to Rank 3; Bank 12. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank13
       [RD_CAS Access to Rank 3; Bank 13. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank14
       [RD_CAS Access to Rank 3; Bank 14. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank15
       [RD_CAS Access to Rank 3; Bank 15. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank2
       [RD_CAS Access to Rank 3; Bank 2. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank3
       [RD_CAS Access to Rank 3; Bank 3. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank4
       [RD_CAS Access to Rank 3; Bank 4. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank5
       [RD_CAS Access to Rank 3; Bank 5. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank6
       [RD_CAS Access to Rank 3; Bank 6. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank7
       [RD_CAS Access to Rank 3; Bank 7. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank8
       [RD_CAS Access to Rank 3; Bank 8. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bank9
       [RD_CAS Access to Rank 3; Bank 9. Unit: uncore_imc]
  unc_m_rd_cas_rank3.bankg0
       [RD_CAS Access to Rank 3; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_rd_cas_rank3.bankg1
       [RD_CAS Access to Rank 3; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_rd_cas_rank3.bankg2
       [RD_CAS Access to Rank 3; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_rd_cas_rank3.bankg3
       [RD_CAS Access to Rank 3; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_rd_cas_rank4.allbanks
       [RD_CAS Access to Rank 4; All Banks. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank0
       [RD_CAS Access to Rank 4; Bank 0. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank1
       [RD_CAS Access to Rank 4; Bank 1. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank10
       [RD_CAS Access to Rank 4; Bank 10. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank11
       [RD_CAS Access to Rank 4; Bank 11. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank12
       [RD_CAS Access to Rank 4; Bank 12. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank13
       [RD_CAS Access to Rank 4; Bank 13. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank14
       [RD_CAS Access to Rank 4; Bank 14. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank15
       [RD_CAS Access to Rank 4; Bank 15. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank2
       [RD_CAS Access to Rank 4; Bank 2. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank3
       [RD_CAS Access to Rank 4; Bank 3. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank4
       [RD_CAS Access to Rank 4; Bank 4. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank5
       [RD_CAS Access to Rank 4; Bank 5. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank6
       [RD_CAS Access to Rank 4; Bank 6. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank7
       [RD_CAS Access to Rank 4; Bank 7. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank8
       [RD_CAS Access to Rank 4; Bank 8. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bank9
       [RD_CAS Access to Rank 4; Bank 9. Unit: uncore_imc]
  unc_m_rd_cas_rank4.bankg0
       [RD_CAS Access to Rank 4; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_rd_cas_rank4.bankg1
       [RD_CAS Access to Rank 4; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_rd_cas_rank4.bankg2
       [RD_CAS Access to Rank 4; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_rd_cas_rank4.bankg3
       [RD_CAS Access to Rank 4; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_rd_cas_rank5.allbanks
       [RD_CAS Access to Rank 5; All Banks. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank0
       [RD_CAS Access to Rank 5; Bank 0. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank1
       [RD_CAS Access to Rank 5; Bank 1. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank10
       [RD_CAS Access to Rank 5; Bank 10. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank11
       [RD_CAS Access to Rank 5; Bank 11. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank12
       [RD_CAS Access to Rank 5; Bank 12. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank13
       [RD_CAS Access to Rank 5; Bank 13. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank14
       [RD_CAS Access to Rank 5; Bank 14. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank15
       [RD_CAS Access to Rank 5; Bank 15. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank2
       [RD_CAS Access to Rank 5; Bank 2. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank3
       [RD_CAS Access to Rank 5; Bank 3. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank4
       [RD_CAS Access to Rank 5; Bank 4. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank5
       [RD_CAS Access to Rank 5; Bank 5. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank6
       [RD_CAS Access to Rank 5; Bank 6. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank7
       [RD_CAS Access to Rank 5; Bank 7. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank8
       [RD_CAS Access to Rank 5; Bank 8. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bank9
       [RD_CAS Access to Rank 5; Bank 9. Unit: uncore_imc]
  unc_m_rd_cas_rank5.bankg0
       [RD_CAS Access to Rank 5; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_rd_cas_rank5.bankg1
       [RD_CAS Access to Rank 5; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_rd_cas_rank5.bankg2
       [RD_CAS Access to Rank 5; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_rd_cas_rank5.bankg3
       [RD_CAS Access to Rank 5; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_rd_cas_rank6.allbanks
       [RD_CAS Access to Rank 6; All Banks. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank0
       [RD_CAS Access to Rank 6; Bank 0. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank1
       [RD_CAS Access to Rank 6; Bank 1. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank10
       [RD_CAS Access to Rank 6; Bank 10. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank11
       [RD_CAS Access to Rank 6; Bank 11. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank12
       [RD_CAS Access to Rank 6; Bank 12. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank13
       [RD_CAS Access to Rank 6; Bank 13. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank14
       [RD_CAS Access to Rank 6; Bank 14. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank15
       [RD_CAS Access to Rank 6; Bank 15. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank2
       [RD_CAS Access to Rank 6; Bank 2. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank3
       [RD_CAS Access to Rank 6; Bank 3. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank4
       [RD_CAS Access to Rank 6; Bank 4. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank5
       [RD_CAS Access to Rank 6; Bank 5. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank6
       [RD_CAS Access to Rank 6; Bank 6. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank7
       [RD_CAS Access to Rank 6; Bank 7. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank8
       [RD_CAS Access to Rank 6; Bank 8. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bank9
       [RD_CAS Access to Rank 6; Bank 9. Unit: uncore_imc]
  unc_m_rd_cas_rank6.bankg0
       [RD_CAS Access to Rank 6; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_rd_cas_rank6.bankg1
       [RD_CAS Access to Rank 6; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_rd_cas_rank6.bankg2
       [RD_CAS Access to Rank 6; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_rd_cas_rank6.bankg3
       [RD_CAS Access to Rank 6; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_rd_cas_rank7.allbanks
       [RD_CAS Access to Rank 7; All Banks. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank0
       [RD_CAS Access to Rank 7; Bank 0. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank1
       [RD_CAS Access to Rank 7; Bank 1. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank10
       [RD_CAS Access to Rank 7; Bank 10. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank11
       [RD_CAS Access to Rank 7; Bank 11. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank12
       [RD_CAS Access to Rank 7; Bank 12. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank13
       [RD_CAS Access to Rank 7; Bank 13. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank14
       [RD_CAS Access to Rank 7; Bank 14. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank15
       [RD_CAS Access to Rank 7; Bank 15. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank2
       [RD_CAS Access to Rank 7; Bank 2. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank3
       [RD_CAS Access to Rank 7; Bank 3. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank4
       [RD_CAS Access to Rank 7; Bank 4. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank5
       [RD_CAS Access to Rank 7; Bank 5. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank6
       [RD_CAS Access to Rank 7; Bank 6. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank7
       [RD_CAS Access to Rank 7; Bank 7. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank8
       [RD_CAS Access to Rank 7; Bank 8. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bank9
       [RD_CAS Access to Rank 7; Bank 9. Unit: uncore_imc]
  unc_m_rd_cas_rank7.bankg0
       [RD_CAS Access to Rank 7; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_rd_cas_rank7.bankg1
       [RD_CAS Access to Rank 7; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_rd_cas_rank7.bankg2
       [RD_CAS Access to Rank 7; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_rd_cas_rank7.bankg3
       [RD_CAS Access to Rank 7; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_rpq_cycles_full
       [Read Pending Queue Full Cycles. Unit: uncore_imc]
  unc_m_rpq_cycles_ne
       [Read Pending Queue Not Empty. Unit: uncore_imc]
  unc_m_rpq_inserts
       [Read Pending Queue Allocations. Unit: uncore_imc]
  unc_m_rpq_occupancy
       [Read Pending Queue Occupancy. Unit: uncore_imc]
  unc_m_wmm_to_rmm.low_thresh
       [Transition from WMM to RMM because of low threshold; Transition from
        WMM to RMM because of starve counter. Unit: uncore_imc]
  unc_m_wmm_to_rmm.starve
       [Transition from WMM to RMM because of low threshold. Unit: uncore_imc]
  unc_m_wmm_to_rmm.vmse_retry
       [Transition from WMM to RMM because of low threshold. Unit: uncore_imc]
  unc_m_wpq_cycles_full
       [Write Pending Queue Full Cycles. Unit: uncore_imc]
  unc_m_wpq_cycles_ne
       [Write Pending Queue Not Empty. Unit: uncore_imc]
  unc_m_wpq_inserts
       [Write Pending Queue Allocations. Unit: uncore_imc]
  unc_m_wpq_occupancy
       [Write Pending Queue Occupancy. Unit: uncore_imc]
  unc_m_wpq_read_hit
       [Write Pending Queue CAM Match. Unit: uncore_imc]
  unc_m_wpq_write_hit
       [Write Pending Queue CAM Match. Unit: uncore_imc]
  unc_m_wr_cas_rank0.allbanks
       [WR_CAS Access to Rank 0; All Banks. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank0
       [WR_CAS Access to Rank 0; Bank 0. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank1
       [WR_CAS Access to Rank 0; Bank 1. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank10
       [WR_CAS Access to Rank 0; Bank 10. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank11
       [WR_CAS Access to Rank 0; Bank 11. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank12
       [WR_CAS Access to Rank 0; Bank 12. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank13
       [WR_CAS Access to Rank 0; Bank 13. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank14
       [WR_CAS Access to Rank 0; Bank 14. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank15
       [WR_CAS Access to Rank 0; Bank 15. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank2
       [WR_CAS Access to Rank 0; Bank 2. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank3
       [WR_CAS Access to Rank 0; Bank 3. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank4
       [WR_CAS Access to Rank 0; Bank 4. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank5
       [WR_CAS Access to Rank 0; Bank 5. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank6
       [WR_CAS Access to Rank 0; Bank 6. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank7
       [WR_CAS Access to Rank 0; Bank 7. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank8
       [WR_CAS Access to Rank 0; Bank 8. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bank9
       [WR_CAS Access to Rank 0; Bank 9. Unit: uncore_imc]
  unc_m_wr_cas_rank0.bankg0
       [WR_CAS Access to Rank 0; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_wr_cas_rank0.bankg1
       [WR_CAS Access to Rank 0; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_wr_cas_rank0.bankg2
       [WR_CAS Access to Rank 0; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_wr_cas_rank0.bankg3
       [WR_CAS Access to Rank 0; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_wr_cas_rank1.allbanks
       [WR_CAS Access to Rank 1; All Banks. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank0
       [WR_CAS Access to Rank 1; Bank 0. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank1
       [WR_CAS Access to Rank 1; Bank 1. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank10
       [WR_CAS Access to Rank 1; Bank 10. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank11
       [WR_CAS Access to Rank 1; Bank 11. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank12
       [WR_CAS Access to Rank 1; Bank 12. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank13
       [WR_CAS Access to Rank 1; Bank 13. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank14
       [WR_CAS Access to Rank 1; Bank 14. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank15
       [WR_CAS Access to Rank 1; Bank 15. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank2
       [WR_CAS Access to Rank 1; Bank 2. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank3
       [WR_CAS Access to Rank 1; Bank 3. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank4
       [WR_CAS Access to Rank 1; Bank 4. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank5
       [WR_CAS Access to Rank 1; Bank 5. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank6
       [WR_CAS Access to Rank 1; Bank 6. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank7
       [WR_CAS Access to Rank 1; Bank 7. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank8
       [WR_CAS Access to Rank 1; Bank 8. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bank9
       [WR_CAS Access to Rank 1; Bank 9. Unit: uncore_imc]
  unc_m_wr_cas_rank1.bankg0
       [WR_CAS Access to Rank 1; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_wr_cas_rank1.bankg1
       [WR_CAS Access to Rank 1; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_wr_cas_rank1.bankg2
       [WR_CAS Access to Rank 1; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_wr_cas_rank1.bankg3
       [WR_CAS Access to Rank 1; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_wr_cas_rank2.allbanks
       [WR_CAS Access to Rank 2; All Banks. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank0
       [WR_CAS Access to Rank 2; Bank 0. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank1
       [WR_CAS Access to Rank 2; Bank 1. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank10
       [WR_CAS Access to Rank 2; Bank 10. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank11
       [WR_CAS Access to Rank 2; Bank 11. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank12
       [WR_CAS Access to Rank 2; Bank 12. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank13
       [WR_CAS Access to Rank 2; Bank 13. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank14
       [WR_CAS Access to Rank 2; Bank 14. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank15
       [WR_CAS Access to Rank 2; Bank 15. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank2
       [WR_CAS Access to Rank 2; Bank 2. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank3
       [WR_CAS Access to Rank 2; Bank 3. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank4
       [WR_CAS Access to Rank 2; Bank 4. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank5
       [WR_CAS Access to Rank 2; Bank 5. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank6
       [WR_CAS Access to Rank 2; Bank 6. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank7
       [WR_CAS Access to Rank 2; Bank 7. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank8
       [WR_CAS Access to Rank 2; Bank 8. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bank9
       [WR_CAS Access to Rank 2; Bank 9. Unit: uncore_imc]
  unc_m_wr_cas_rank2.bankg0
       [WR_CAS Access to Rank 2; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_wr_cas_rank2.bankg1
       [WR_CAS Access to Rank 2; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_wr_cas_rank2.bankg2
       [WR_CAS Access to Rank 2; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_wr_cas_rank2.bankg3
       [WR_CAS Access to Rank 2; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_wr_cas_rank3.allbanks
       [WR_CAS Access to Rank 3; All Banks. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank0
       [WR_CAS Access to Rank 3; Bank 0. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank1
       [WR_CAS Access to Rank 3; Bank 1. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank10
       [WR_CAS Access to Rank 3; Bank 10. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank11
       [WR_CAS Access to Rank 3; Bank 11. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank12
       [WR_CAS Access to Rank 3; Bank 12. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank13
       [WR_CAS Access to Rank 3; Bank 13. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank14
       [WR_CAS Access to Rank 3; Bank 14. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank15
       [WR_CAS Access to Rank 3; Bank 15. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank2
       [WR_CAS Access to Rank 3; Bank 2. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank3
       [WR_CAS Access to Rank 3; Bank 3. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank4
       [WR_CAS Access to Rank 3; Bank 4. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank5
       [WR_CAS Access to Rank 3; Bank 5. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank6
       [WR_CAS Access to Rank 3; Bank 6. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank7
       [WR_CAS Access to Rank 3; Bank 7. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank8
       [WR_CAS Access to Rank 3; Bank 8. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bank9
       [WR_CAS Access to Rank 3; Bank 9. Unit: uncore_imc]
  unc_m_wr_cas_rank3.bankg0
       [WR_CAS Access to Rank 3; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_wr_cas_rank3.bankg1
       [WR_CAS Access to Rank 3; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_wr_cas_rank3.bankg2
       [WR_CAS Access to Rank 3; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_wr_cas_rank3.bankg3
       [WR_CAS Access to Rank 3; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_wr_cas_rank4.allbanks
       [WR_CAS Access to Rank 4; All Banks. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank0
       [WR_CAS Access to Rank 4; Bank 0. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank1
       [WR_CAS Access to Rank 4; Bank 1. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank10
       [WR_CAS Access to Rank 4; Bank 10. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank11
       [WR_CAS Access to Rank 4; Bank 11. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank12
       [WR_CAS Access to Rank 4; Bank 12. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank13
       [WR_CAS Access to Rank 4; Bank 13. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank14
       [WR_CAS Access to Rank 4; Bank 14. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank15
       [WR_CAS Access to Rank 4; Bank 15. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank2
       [WR_CAS Access to Rank 4; Bank 2. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank3
       [WR_CAS Access to Rank 4; Bank 3. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank4
       [WR_CAS Access to Rank 4; Bank 4. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank5
       [WR_CAS Access to Rank 4; Bank 5. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank6
       [WR_CAS Access to Rank 4; Bank 6. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank7
       [WR_CAS Access to Rank 4; Bank 7. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank8
       [WR_CAS Access to Rank 4; Bank 8. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bank9
       [WR_CAS Access to Rank 4; Bank 9. Unit: uncore_imc]
  unc_m_wr_cas_rank4.bankg0
       [WR_CAS Access to Rank 4; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_wr_cas_rank4.bankg1
       [WR_CAS Access to Rank 4; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_wr_cas_rank4.bankg2
       [WR_CAS Access to Rank 4; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_wr_cas_rank4.bankg3
       [WR_CAS Access to Rank 4; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_wr_cas_rank5.allbanks
       [WR_CAS Access to Rank 5; All Banks. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank0
       [WR_CAS Access to Rank 5; Bank 0. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank1
       [WR_CAS Access to Rank 5; Bank 1. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank10
       [WR_CAS Access to Rank 5; Bank 10. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank11
       [WR_CAS Access to Rank 5; Bank 11. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank12
       [WR_CAS Access to Rank 5; Bank 12. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank13
       [WR_CAS Access to Rank 5; Bank 13. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank14
       [WR_CAS Access to Rank 5; Bank 14. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank15
       [WR_CAS Access to Rank 5; Bank 15. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank2
       [WR_CAS Access to Rank 5; Bank 2. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank3
       [WR_CAS Access to Rank 5; Bank 3. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank4
       [WR_CAS Access to Rank 5; Bank 4. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank5
       [WR_CAS Access to Rank 5; Bank 5. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank6
       [WR_CAS Access to Rank 5; Bank 6. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank7
       [WR_CAS Access to Rank 5; Bank 7. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank8
       [WR_CAS Access to Rank 5; Bank 8. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bank9
       [WR_CAS Access to Rank 5; Bank 9. Unit: uncore_imc]
  unc_m_wr_cas_rank5.bankg0
       [WR_CAS Access to Rank 5; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_wr_cas_rank5.bankg1
       [WR_CAS Access to Rank 5; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_wr_cas_rank5.bankg2
       [WR_CAS Access to Rank 5; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_wr_cas_rank5.bankg3
       [WR_CAS Access to Rank 5; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_wr_cas_rank6.allbanks
       [WR_CAS Access to Rank 6; All Banks. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank0
       [WR_CAS Access to Rank 6; Bank 0. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank1
       [WR_CAS Access to Rank 6; Bank 1. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank10
       [WR_CAS Access to Rank 6; Bank 10. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank11
       [WR_CAS Access to Rank 6; Bank 11. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank12
       [WR_CAS Access to Rank 6; Bank 12. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank13
       [WR_CAS Access to Rank 6; Bank 13. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank14
       [WR_CAS Access to Rank 6; Bank 14. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank15
       [WR_CAS Access to Rank 6; Bank 15. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank2
       [WR_CAS Access to Rank 6; Bank 2. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank3
       [WR_CAS Access to Rank 6; Bank 3. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank4
       [WR_CAS Access to Rank 6; Bank 4. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank5
       [WR_CAS Access to Rank 6; Bank 5. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank6
       [WR_CAS Access to Rank 6; Bank 6. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank7
       [WR_CAS Access to Rank 6; Bank 7. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank8
       [WR_CAS Access to Rank 6; Bank 8. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bank9
       [WR_CAS Access to Rank 6; Bank 9. Unit: uncore_imc]
  unc_m_wr_cas_rank6.bankg0
       [WR_CAS Access to Rank 6; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_wr_cas_rank6.bankg1
       [WR_CAS Access to Rank 6; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_wr_cas_rank6.bankg2
       [WR_CAS Access to Rank 6; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_wr_cas_rank6.bankg3
       [WR_CAS Access to Rank 6; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_wr_cas_rank7.allbanks
       [WR_CAS Access to Rank 7; All Banks. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank0
       [WR_CAS Access to Rank 7; Bank 0. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank1
       [WR_CAS Access to Rank 7; Bank 1. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank10
       [WR_CAS Access to Rank 7; Bank 10. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank11
       [WR_CAS Access to Rank 7; Bank 11. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank12
       [WR_CAS Access to Rank 7; Bank 12. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank13
       [WR_CAS Access to Rank 7; Bank 13. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank14
       [WR_CAS Access to Rank 7; Bank 14. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank15
       [WR_CAS Access to Rank 7; Bank 15. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank2
       [WR_CAS Access to Rank 7; Bank 2. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank3
       [WR_CAS Access to Rank 7; Bank 3. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank4
       [WR_CAS Access to Rank 7; Bank 4. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank5
       [WR_CAS Access to Rank 7; Bank 5. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank6
       [WR_CAS Access to Rank 7; Bank 6. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank7
       [WR_CAS Access to Rank 7; Bank 7. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank8
       [WR_CAS Access to Rank 7; Bank 8. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bank9
       [WR_CAS Access to Rank 7; Bank 9. Unit: uncore_imc]
  unc_m_wr_cas_rank7.bankg0
       [WR_CAS Access to Rank 7; Bank Group 0 (Banks 0-3). Unit: uncore_imc]
  unc_m_wr_cas_rank7.bankg1
       [WR_CAS Access to Rank 7; Bank Group 1 (Banks 4-7). Unit: uncore_imc]
  unc_m_wr_cas_rank7.bankg2
       [WR_CAS Access to Rank 7; Bank Group 2 (Banks 8-11). Unit: uncore_imc]
  unc_m_wr_cas_rank7.bankg3
       [WR_CAS Access to Rank 7; Bank Group 3 (Banks 12-15). Unit: uncore_imc]
  unc_m_wrong_mm
       [Not getting the requested Major Mode. Unit: uncore_imc]

uncore power:
  unc_p_clockticks
       [pclk Cycles. Unit: uncore_pcu]
  unc_p_core_transition_cycles
       [UNC_P_CORE_TRANSITION_CYCLES. Unit: uncore_pcu]
  unc_p_demotions
       [UNC_P_DEMOTIONS. Unit: uncore_pcu]
  unc_p_fivr_ps_ps0_cycles
       [Phase Shed 0 Cycles. Unit: uncore_pcu]
  unc_p_fivr_ps_ps1_cycles
       [Phase Shed 1 Cycles. Unit: uncore_pcu]
  unc_p_fivr_ps_ps2_cycles
       [Phase Shed 2 Cycles. Unit: uncore_pcu]
  unc_p_fivr_ps_ps3_cycles
       [Phase Shed 3 Cycles. Unit: uncore_pcu]
  unc_p_freq_max_limit_thermal_cycles
       [Thermal Strongest Upper Limit Cycles. Unit: uncore_pcu]
  unc_p_freq_max_power_cycles
       [Power Strongest Upper Limit Cycles. Unit: uncore_pcu]
  unc_p_freq_min_io_p_cycles
       [IO P Limit Strongest Lower Limit Cycles. Unit: uncore_pcu]
  unc_p_freq_trans_cycles
       [Cycles spent changing Frequency. Unit: uncore_pcu]
  unc_p_mcp_prochot_cycles
       [UNC_P_MCP_PROCHOT_CYCLES. Unit: uncore_pcu]
  unc_p_memory_phase_shedding_cycles
       [Memory Phase Shedding Cycles. Unit: uncore_pcu]
  unc_p_pkg_residency_c0_cycles
       [Package C State Residency - C0. Unit: uncore_pcu]
  unc_p_pkg_residency_c2e_cycles
       [Package C State Residency - C2E. Unit: uncore_pcu]
  unc_p_pkg_residency_c3_cycles
       [Package C State Residency - C3. Unit: uncore_pcu]
  unc_p_pkg_residency_c6_cycles
       [Package C State Residency - C6. Unit: uncore_pcu]
  unc_p_pmax_throttled_cycles
       [UNC_P_PMAX_THROTTLED_CYCLES. Unit: uncore_pcu]
  unc_p_power_state_occupancy.cores_c0
       [Number of cores in C-State; C0 and C1. Unit: uncore_pcu]
  unc_p_power_state_occupancy.cores_c3
       [Number of cores in C-State; C3. Unit: uncore_pcu]
  unc_p_power_state_occupancy.cores_c6
       [Number of cores in C-State; C6 and C7. Unit: uncore_pcu]
  unc_p_prochot_external_cycles
       [External Prochot. Unit: uncore_pcu]
  unc_p_prochot_internal_cycles
       [Internal Prochot. Unit: uncore_pcu]
  unc_p_total_transition_cycles
       [Total Core C State Transition Cycles. Unit: uncore_pcu]
  unc_p_vr_hot_cycles
       [VR Hot. Unit: uncore_pcu]

virtual memory:
  dtlb_load_misses.miss_causes_a_walk
       [Load misses in all DTLB levels that cause page walks]
  dtlb_load_misses.stlb_hit
       [Loads that miss the DTLB and hit the STLB]
  dtlb_load_misses.walk_active
       [Cycles when at least one PMH is busy with a page walk for a load. EPT
        page walk duration are excluded in Skylake]
  dtlb_load_misses.walk_completed
       [Load miss in all TLB levels causes a page walk that completes. (All
        page sizes)]
  dtlb_load_misses.walk_completed_1g
       [Page walk completed due to a demand data load to a 1G page]
  dtlb_load_misses.walk_completed_2m_4m
       [Page walk completed due to a demand data load to a 2M/4M page]
  dtlb_load_misses.walk_completed_4k
       [Page walk completed due to a demand data load to a 4K page]
  dtlb_load_misses.walk_pending
       [Counts 1 per cycle for each PMH that is busy with a page walk for a
        load. EPT page walk duration are excluded in Skylake]
  dtlb_store_misses.miss_causes_a_walk
       [Store misses in all DTLB levels that cause page walks]
  dtlb_store_misses.stlb_hit
       [Stores that miss the DTLB and hit the STLB]
  dtlb_store_misses.walk_active
       [Cycles when at least one PMH is busy with a page walk for a store. EPT
        page walk duration are excluded in Skylake]
  dtlb_store_misses.walk_completed
       [Store misses in all TLB levels causes a page walk that completes. (All
        page sizes)]
  dtlb_store_misses.walk_completed_1g
       [Page walk completed due to a demand data store to a 1G page]
  dtlb_store_misses.walk_completed_2m_4m
       [Page walk completed due to a demand data store to a 2M/4M page]
  dtlb_store_misses.walk_completed_4k
       [Page walk completed due to a demand data store to a 4K page]
  dtlb_store_misses.walk_pending
       [Counts 1 per cycle for each PMH that is busy with a page walk for a
        store. EPT page walk duration are excluded in Skylake]
  ept.walk_pending
       [Counts 1 per cycle for each PMH that is busy with a EPT (Extended Page
        Table) walk for any request type]
  itlb.itlb_flush
       [Flushing of the Instruction TLB (ITLB) pages, includes 4k/2M/4M pages]
  itlb_misses.miss_causes_a_walk
       [Misses at all ITLB levels that cause page walks]
  itlb_misses.stlb_hit
       [Instruction fetch requests that miss the ITLB and hit the STLB]
  itlb_misses.walk_active
       [Cycles when at least one PMH is busy with a page walk for code
        (instruction fetch) request. EPT page walk duration are excluded in
        Skylake]
  itlb_misses.walk_completed
       [Code miss in all TLB levels causes a page walk that completes. (All
        page sizes)]
  itlb_misses.walk_completed_1g
       [Code miss in all TLB levels causes a page walk that completes. (1G)]
  itlb_misses.walk_completed_2m_4m
       [Code miss in all TLB levels causes a page walk that completes. (2M/4M)]
  itlb_misses.walk_completed_4k
       [Code miss in all TLB levels causes a page walk that completes. (4K)]
  itlb_misses.walk_pending
       [Counts 1 per cycle for each PMH that is busy with a page walk for an
        instruction fetch request. EPT page walk duration are excluded in
        Skylake]
  tlb_flush.dtlb_thread
       [DTLB flush attempts of the thread-specific entries]
  tlb_flush.stlb_any
       [STLB flush attempts]
  rNNN                                               [Raw hardware event descriptor]
  cpu/t1=v1[,t2=v2,t3 ...]/modifier                  [Raw hardware event descriptor]
       [(see 'man perf-list' on how to encode it)]
  mem:<addr>[/len][:access]                          [Hardware breakpoint]

Metric Groups:

Backend: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_core_bound
       [This metric represents fraction of slots where Core non-memory issues
        were of a bottleneck]
  tma_info_core_ilp
       [Instruction-Level-Parallelism (average number of uops executed when
        there is execution) per-core]
  tma_info_memory_l2mpki
       [L2 cache true misses per kilo instruction for retired demand loads]
  tma_memory_bound
       [This metric represents fraction of slots the Memory subsystem within
        the Backend was a bottleneck]

Bad: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_bad_spec_branch_misprediction_cost
       [Branch Misprediction Cost: Fraction of TMA slots wasted per
        non-speculative branch misprediction (retired JEClear)]
  tma_info_bad_spec_ipmisp_indirect
       [Instructions per retired mispredicts for indirect CALL or JMP branches
        (lower number means higher occurrence rate)]
  tma_info_bad_spec_ipmispredict
       [Number of Instructions per non-speculative Branch Misprediction
        (JEClear) (lower number means higher occurrence rate)]
  tma_info_bottleneck_mispredictions
       [Total pipeline cost of Branch Misprediction related bottlenecks]
  tma_info_branches_callret
       [Fraction of branches that are CALL or RET]
  tma_info_branches_cond_nt
       [Fraction of branches that are non-taken conditionals]
  tma_info_branches_cond_tk
       [Fraction of branches that are taken conditionals]
  tma_info_branches_jump
       [Fraction of branches that are unconditional (direct or indirect) jumps]
  tma_info_core_ipmispredict
       [Number of Instructions per non-speculative Branch Misprediction
        (JEClear)]

BadSpec:
  tma_branch_mispredicts
       [This metric represents fraction of slots the CPU has wasted due to
        Branch Misprediction]
  tma_clears_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers as a result of Machine Clears]
  tma_info_bad_spec_ipmispredict
       [Number of Instructions per non-speculative Branch Misprediction
        (JEClear) (lower number means higher occurrence rate)]
  tma_info_bottleneck_mispredictions
       [Total pipeline cost of Branch Misprediction related bottlenecks]
  tma_info_core_ipmispredict
       [Number of Instructions per non-speculative Branch Misprediction
        (JEClear)]
  tma_machine_clears
       [This metric represents fraction of slots the CPU has wasted due to
        Machine Clears]
  tma_mispredicts_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers as a result of Branch Misprediction at execution stage]

BigFoot: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_icache_misses
       [This metric represents fraction of cycles the CPU was stalled due to
        instruction cache misses]
  tma_info_bottleneck_big_code
       [Total pipeline cost of instruction fetch related bottlenecks by large
        code footprint programs (i-side cache; TLB and BTB misses)]
  tma_itlb_misses
       [This metric represents fraction of cycles the CPU was stalled due to
        Instruction TLB (ITLB) misses]
  tma_unknown_branches
       [This metric represents fraction of cycles the CPU was stalled due to
        new branch address clears]

BrMispredicts: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_branch_mispredicts
       [This metric represents fraction of slots the CPU has wasted due to
        Branch Misprediction]
  tma_info_bad_spec_branch_misprediction_cost
       [Branch Misprediction Cost: Fraction of TMA slots wasted per
        non-speculative branch misprediction (retired JEClear)]
  tma_info_bad_spec_ipmisp_indirect
       [Instructions per retired mispredicts for indirect CALL or JMP branches
        (lower number means higher occurrence rate)]
  tma_info_bad_spec_ipmispredict
       [Number of Instructions per non-speculative Branch Misprediction
        (JEClear) (lower number means higher occurrence rate)]
  tma_info_bottleneck_mispredictions
       [Total pipeline cost of Branch Misprediction related bottlenecks]
  tma_info_core_ipmispredict
       [Number of Instructions per non-speculative Branch Misprediction
        (JEClear)]
  tma_mispredicts_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers as a result of Branch Misprediction at execution stage]

Branches: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_branches_callret
       [Fraction of branches that are CALL or RET]
  tma_info_branches_cond_nt
       [Fraction of branches that are non-taken conditionals]
  tma_info_branches_cond_tk
       [Fraction of branches that are taken conditionals]
  tma_info_branches_jump
       [Fraction of branches that are unconditional (direct or indirect) jumps]
  tma_info_inst_mix_bptkbranch
       [Branch instructions per taken branch]
  tma_info_inst_mix_ipbranch
       [Instructions per Branch (lower number means higher occurrence rate)]
  tma_info_inst_mix_ipcall
       [Instructions per (near) call (lower number means higher occurrence
        rate)]
  tma_info_inst_mix_iptb
       [Instruction per taken branch]
  tma_info_system_ipfarbranch
       [Instructions per Far Branch ( Far Branches apply upon transition from
        application to operating system, handling interrupts, exceptions)
        [lower number means higher occurrence rate]]
  tma_info_thread_uptb
       [Instruction per taken branch]

CacheMisses: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_memory_fb_hpki
       [Fill Buffer (FB) hits per kilo instructions for retired demand loads
        (L1D misses that merge into ongoing miss-handling entries)]
  tma_info_memory_l1mpki
       [L1 cache true misses per kilo instruction for retired demand loads]
  tma_info_memory_l1mpki_load
       [L1 cache true misses per kilo instruction for all demand loads
        (including speculative)]
  tma_info_memory_l2hpki_all
       [L2 cache hits per kilo instruction for all request types (including
        speculative)]
  tma_info_memory_l2hpki_load
       [L2 cache hits per kilo instruction for all demand loads (including
        speculative)]
  tma_info_memory_l2mpki
       [L2 cache true misses per kilo instruction for retired demand loads]
  tma_info_memory_l2mpki_all
       [L2 cache ([RKL+] true) misses per kilo instruction for all request
        types (including speculative)]
  tma_info_memory_l2mpki_load
       [L2 cache ([RKL+] true) misses per kilo instruction for all demand
        loads (including speculative)]
  tma_info_memory_l3mpki
       [L3 cache true misses per kilo instruction for retired demand loads]
  tma_l1_bound
       [This metric estimates how often the CPU was stalled without loads
        missing the L1 data cache]
  tma_l2_bound
       [This metric estimates how often the CPU was stalled due to L2 cache
        accesses by loads]
  tma_l3_bound
       [This metric estimates how often the CPU was stalled due to loads
        accesses to L3 cache or contended with a sibling Core]

CodeGen: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_branches_cond_nt
       [Fraction of branches that are non-taken conditionals]
  tma_info_branches_cond_tk
       [Fraction of branches that are taken conditionals]

Compute: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_core_bound
       [This metric represents fraction of slots where Core non-memory issues
        were of a bottleneck]
  tma_fp_scalar
       [This metric approximates arithmetic floating-point (FP) scalar uops
        fraction the CPU has retired]
  tma_fp_vector
       [This metric approximates arithmetic floating-point (FP) vector uops
        fraction the CPU has retired aggregated across all vector widths]
  tma_fp_vector_128b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 128-bit wide vectors]
  tma_fp_vector_256b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 256-bit wide vectors]
  tma_fp_vector_512b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 512-bit wide vectors]
  tma_port_0
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch)]
  tma_x87_use
       [This metric serves as an approximation of legacy x87 usage]

Cor: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_botlnk_l0_core_bound_likely
       [Probability of Core Bound bottleneck hidden by SMT-profiling artifacts]
  tma_info_core_fp_arith_utilization
       [Actual per-core usage of the Floating Point non-X87 execution units
        (regardless of precision or vector-width)]
  tma_info_core_ilp
       [Instruction-Level-Parallelism (average number of uops executed when
        there is execution) per-core]
  tma_info_pipeline_execute
       [Instruction-Level-Parallelism (average number of uops executed when
        there is execution) per-thread]
  tma_info_system_gflops
       [Giga Floating Point Operations Per Second]
  tma_info_thread_execute_per_issue
       [The ratio of Executed- by Issued-Uops]

DSB: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_dsb
       [This metric represents Core fraction of cycles in which CPU was likely
        limited due to DSB (decoded uop cache) fetch pipeline]
  tma_info_frontend_dsb_coverage
       [Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop
        Cache)]

DSBmiss: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_decoder0_alone
       [This metric represents fraction of cycles where decoder-0 was the only
        active decoder]
  tma_dsb_switches
       [This metric represents fraction of cycles the CPU was stalled due to
        switches from DSB to MITE pipelines]
  tma_info_botlnk_l2_dsb_misses
       [Total pipeline cost of DSB (uop cache) misses - subset of the
        Instruction_Fetch_BW Bottleneck]
  tma_info_frontend_dsb_switch_cost
       [Average number of cycles of a switch from the DSB fetch-unit to MITE
        fetch unit - see DSB_Switches tree node for details]
  tma_info_frontend_ipdsb_miss_ret
       [Instructions per non-speculative DSB miss (lower number means higher
        occurrence rate)]
  tma_mite
       [This metric represents Core fraction of cycles in which CPU was likely
        limited due to the MITE pipeline (the legacy decode pipeline)]

DataSharing: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_contested_accesses
       [This metric estimates fraction of cycles while the memory subsystem
        was handling synchronizations due to contested accesses]
  tma_false_sharing
       [This metric roughly estimates how often CPU was handling
        synchronizations due to False Sharing]

Fed: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_botlnk_l2_dsb_misses
       [Total pipeline cost of DSB (uop cache) misses - subset of the
        Instruction_Fetch_BW Bottleneck]
  tma_info_botlnk_l2_ic_misses
       [Total pipeline cost of Instruction Cache misses - subset of the
        Big_Code Bottleneck]
  tma_info_bottleneck_big_code
       [Total pipeline cost of instruction fetch related bottlenecks by large
        code footprint programs (i-side cache; TLB and BTB misses)]
  tma_info_bottleneck_instruction_fetch_bw
       [Total pipeline cost of instruction fetch bandwidth related bottlenecks]
  tma_info_frontend_dsb_coverage
       [Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop
        Cache)]
  tma_info_frontend_fetch_upc
       [Average number of Uops issued by front-end when it issued something]
  tma_info_frontend_icache_miss_latency
       [Average Latency for L1 instruction cache misses]
  tma_info_frontend_ipdsb_miss_ret
       [Instructions per non-speculative DSB miss (lower number means higher
        occurrence rate)]
  tma_info_frontend_ipunknown_branch
       [Instructions per speculative Unknown Branch Misprediction (BAClear)
        (lower number means higher occurrence rate)]
  tma_info_inst_mix_bptkbranch
       [Branch instructions per taken branch]
  tma_info_inst_mix_ipbranch
       [Instructions per Branch (lower number means higher occurrence rate)]
  tma_info_inst_mix_ipcall
       [Instructions per (near) call (lower number means higher occurrence
        rate)]
  tma_info_inst_mix_iptb
       [Instruction per taken branch]
  tma_info_memory_tlb_code_stlb_mpki
       [STLB (2nd level TLB) code speculative misses per kilo instruction
        (misses of any page-size that complete the page walk)]
  tma_info_thread_uptb
       [Instruction per taken branch]

FetchBW: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_decoder0_alone
       [This metric represents fraction of cycles where decoder-0 was the only
        active decoder]
  tma_dsb
       [This metric represents Core fraction of cycles in which CPU was likely
        limited due to DSB (decoded uop cache) fetch pipeline]
  tma_fetch_bandwidth
       [This metric represents fraction of slots the CPU was stalled due to
        Frontend bandwidth issues]
  tma_info_bottleneck_instruction_fetch_bw
       [Total pipeline cost of instruction fetch bandwidth related bottlenecks]
  tma_info_frontend_dsb_coverage
       [Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop
        Cache)]
  tma_info_frontend_fetch_upc
       [Average number of Uops issued by front-end when it issued something]
  tma_info_inst_mix_iptb
       [Instruction per taken branch]
  tma_info_thread_uptb
       [Instruction per taken branch]
  tma_mite
       [This metric represents Core fraction of cycles in which CPU was likely
        limited due to the MITE pipeline (the legacy decode pipeline)]

FetchLat: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_branch_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers]
  tma_dsb_switches
       [This metric represents fraction of cycles the CPU was stalled due to
        switches from DSB to MITE pipelines]
  tma_icache_misses
       [This metric represents fraction of cycles the CPU was stalled due to
        instruction cache misses]
  tma_info_botlnk_l2_ic_misses
       [Total pipeline cost of Instruction Cache misses - subset of the
        Big_Code Bottleneck]
  tma_info_frontend_icache_miss_latency
       [Average Latency for L1 instruction cache misses]
  tma_itlb_misses
       [This metric represents fraction of cycles the CPU was stalled due to
        Instruction TLB (ITLB) misses]
  tma_lcp
       [This metric represents fraction of cycles CPU was stalled due to
        Length Changing Prefixes (LCPs)]
  tma_ms_switches
       [This metric estimates the fraction of cycles when the CPU was stalled
        due to switches of uop delivery to the Microcode Sequencer (MS)]
  tma_unknown_branches
       [This metric represents fraction of cycles the CPU was stalled due to
        new branch address clears]

Flops: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_fp_scalar
       [This metric approximates arithmetic floating-point (FP) scalar uops
        fraction the CPU has retired]
  tma_fp_vector
       [This metric approximates arithmetic floating-point (FP) vector uops
        fraction the CPU has retired aggregated across all vector widths]
  tma_fp_vector_128b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 128-bit wide vectors]
  tma_fp_vector_256b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 256-bit wide vectors]
  tma_fp_vector_512b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 512-bit wide vectors]
  tma_info_core_flopc
       [Floating Point Operations Per Cycle]
  tma_info_core_fp_arith_utilization
       [Actual per-core usage of the Floating Point non-X87 execution units
        (regardless of precision or vector-width)]
  tma_info_inst_mix_iparith
       [Instructions per FP Arithmetic instruction (lower number means higher
        occurrence rate)]
  tma_info_inst_mix_iparith_avx128
       [Instructions per FP Arithmetic AVX/SSE 128-bit instruction (lower
        number means higher occurrence rate)]
  tma_info_inst_mix_iparith_avx256
       [Instructions per FP Arithmetic AVX* 256-bit instruction (lower number
        means higher occurrence rate)]
  tma_info_inst_mix_iparith_avx512
       [Instructions per FP Arithmetic AVX 512-bit instruction (lower number
        means higher occurrence rate)]
  tma_info_inst_mix_iparith_scalar_dp
       [Instructions per FP Arithmetic Scalar Double-Precision instruction
        (lower number means higher occurrence rate)]
  tma_info_inst_mix_iparith_scalar_sp
       [Instructions per FP Arithmetic Scalar Single-Precision instruction
        (lower number means higher occurrence rate)]
  tma_info_inst_mix_ipflop
       [Instructions per Floating Point (FP) Operation (lower number means
        higher occurrence rate)]
  tma_info_system_gflops
       [Giga Floating Point Operations Per Second]

FpScalar: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_inst_mix_iparith_scalar_dp
       [Instructions per FP Arithmetic Scalar Double-Precision instruction
        (lower number means higher occurrence rate)]
  tma_info_inst_mix_iparith_scalar_sp
       [Instructions per FP Arithmetic Scalar Single-Precision instruction
        (lower number means higher occurrence rate)]

FpVector: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_inst_mix_iparith_avx128
       [Instructions per FP Arithmetic AVX/SSE 128-bit instruction (lower
        number means higher occurrence rate)]
  tma_info_inst_mix_iparith_avx256
       [Instructions per FP Arithmetic AVX* 256-bit instruction (lower number
        means higher occurrence rate)]
  tma_info_inst_mix_iparith_avx512
       [Instructions per FP Arithmetic AVX 512-bit instruction (lower number
        means higher occurrence rate)]

Frontend: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_fetch_bandwidth
       [This metric represents fraction of slots the CPU was stalled due to
        Frontend bandwidth issues]
  tma_fetch_latency
       [This metric represents fraction of slots the CPU was stalled due to
        Frontend latency issues]
  tma_info_bottleneck_big_code
       [Total pipeline cost of instruction fetch related bottlenecks by large
        code footprint programs (i-side cache; TLB and BTB misses)]
  tma_info_bottleneck_instruction_fetch_bw
       [Total pipeline cost of instruction fetch bandwidth related bottlenecks]
  tma_info_inst_mix_iptb
       [Instruction per taken branch]

HPC: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_fp_arith
       [This metric represents overall arithmetic floating-point (FP)
        operations fraction the CPU has executed (retired)]
  tma_info_core_fp_arith_utilization
       [Actual per-core usage of the Floating Point non-X87 execution units
        (regardless of precision or vector-width)]
  tma_info_system_cpu_utilization
       [Average CPU Utilization]
  tma_info_system_dram_bw_use
       [Average external Memory Bandwidth Use for reads and writes [GB / sec]]
  tma_info_system_gflops
       [Giga Floating Point Operations Per Second]

IcMiss: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_icache_misses
       [This metric represents fraction of cycles the CPU was stalled due to
        instruction cache misses]
  tma_info_botlnk_l2_ic_misses
       [Total pipeline cost of Instruction Cache misses - subset of the
        Big_Code Bottleneck]
  tma_info_bottleneck_big_code
       [Total pipeline cost of instruction fetch related bottlenecks by large
        code footprint programs (i-side cache; TLB and BTB misses)]
  tma_info_frontend_icache_miss_latency
       [Average Latency for L1 instruction cache misses]
  tma_info_frontend_l2mpki_code
       [L2 cache true code cacheline misses per kilo instruction]
  tma_info_frontend_l2mpki_code_all
       [L2 cache speculative code cacheline misses per kilo instruction]

InsType: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_inst_mix_iparith
       [Instructions per FP Arithmetic instruction (lower number means higher
        occurrence rate)]
  tma_info_inst_mix_iparith_avx128
       [Instructions per FP Arithmetic AVX/SSE 128-bit instruction (lower
        number means higher occurrence rate)]
  tma_info_inst_mix_iparith_avx256
       [Instructions per FP Arithmetic AVX* 256-bit instruction (lower number
        means higher occurrence rate)]
  tma_info_inst_mix_iparith_avx512
       [Instructions per FP Arithmetic AVX 512-bit instruction (lower number
        means higher occurrence rate)]
  tma_info_inst_mix_iparith_scalar_dp
       [Instructions per FP Arithmetic Scalar Double-Precision instruction
        (lower number means higher occurrence rate)]
  tma_info_inst_mix_iparith_scalar_sp
       [Instructions per FP Arithmetic Scalar Single-Precision instruction
        (lower number means higher occurrence rate)]
  tma_info_inst_mix_ipbranch
       [Instructions per Branch (lower number means higher occurrence rate)]
  tma_info_inst_mix_ipflop
       [Instructions per Floating Point (FP) Operation (lower number means
        higher occurrence rate)]
  tma_info_inst_mix_ipload
       [Instructions per Load (lower number means higher occurrence rate)]
  tma_info_inst_mix_ipstore
       [Instructions per Store (lower number means higher occurrence rate)]

IoBW: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_system_io_read_bw
       [Average IO (network or disk) Bandwidth Use for Reads [GB / sec]]
  tma_info_system_io_write_bw
       [Average IO (network or disk) Bandwidth Use for Writes [GB / sec]]

L2Evicts: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_memory_core_l2_evictions_nonsilent_pki
       [Rate of non silent evictions from the L2 cache per Kilo instruction]
  tma_info_memory_core_l2_evictions_silent_pki
       [Rate of silent evictions from the L2 cache per Kilo instruction where
        the evicted lines are dropped (no writeback to L3 or memory)]

MachineClears: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_clears_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers as a result of Machine Clears]
  tma_machine_clears
       [This metric represents fraction of slots the CPU has wasted due to
        Machine Clears]

Mem: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_bottleneck_memory_bandwidth
       [Total pipeline cost of (external) Memory Bandwidth related bottlenecks]
  tma_info_bottleneck_memory_data_tlbs
       [Total pipeline cost of Memory Address Translation related bottlenecks
        (data-side TLBs)]
  tma_info_bottleneck_memory_latency
       [Total pipeline cost of Memory Latency related bottlenecks (external
        memory and off-core caches)]
  tma_info_memory_core_l1d_cache_fill_bw
       [Average per-core data fill bandwidth to the L1 data cache [GB / sec]]
  tma_info_memory_core_l2_cache_fill_bw
       [Average per-core data fill bandwidth to the L2 cache [GB / sec]]
  tma_info_memory_core_l2_evictions_nonsilent_pki
       [Rate of non silent evictions from the L2 cache per Kilo instruction]
  tma_info_memory_core_l2_evictions_silent_pki
       [Rate of silent evictions from the L2 cache per Kilo instruction where
        the evicted lines are dropped (no writeback to L3 or memory)]
  tma_info_memory_core_l3_cache_access_bw
       [Average per-core data access bandwidth to the L3 cache [GB / sec]]
  tma_info_memory_core_l3_cache_fill_bw
       [Average per-core data fill bandwidth to the L3 cache [GB / sec]]
  tma_info_memory_fb_hpki
       [Fill Buffer (FB) hits per kilo instructions for retired demand loads
        (L1D misses that merge into ongoing miss-handling entries)]
  tma_info_memory_l1mpki
       [L1 cache true misses per kilo instruction for retired demand loads]
  tma_info_memory_l1mpki_load
       [L1 cache true misses per kilo instruction for all demand loads
        (including speculative)]
  tma_info_memory_l2hpki_all
       [L2 cache hits per kilo instruction for all request types (including
        speculative)]
  tma_info_memory_l2hpki_load
       [L2 cache hits per kilo instruction for all demand loads (including
        speculative)]
  tma_info_memory_l2mpki
       [L2 cache true misses per kilo instruction for retired demand loads]
  tma_info_memory_l2mpki_all
       [L2 cache ([RKL+] true) misses per kilo instruction for all request
        types (including speculative)]
  tma_info_memory_l2mpki_load
       [L2 cache ([RKL+] true) misses per kilo instruction for all demand
        loads (including speculative)]
  tma_info_memory_l3mpki
       [L3 cache true misses per kilo instruction for retired demand loads]
  tma_info_memory_load_miss_real_latency
       [Actual Average Latency for L1 data-cache miss demand load operations
        (in core cycles)]
  tma_info_memory_mlp
       [Memory-Level-Parallelism (average number of L1 miss demand load when
        there is at least one such miss]
  tma_info_memory_thread_l1d_cache_fill_bw_1t
       [Average per-thread data fill bandwidth to the L1 data cache [GB / sec]]
  tma_info_memory_thread_l2_cache_fill_bw_1t
       [Average per-thread data fill bandwidth to the L2 cache [GB / sec]]
  tma_info_memory_thread_l3_cache_access_bw_1t
       [Average per-thread data access bandwidth to the L3 cache [GB / sec]]
  tma_info_memory_thread_l3_cache_fill_bw_1t
       [Average per-thread data fill bandwidth to the L3 cache [GB / sec]]
  tma_info_memory_tlb_load_stlb_mpki
       [STLB (2nd level TLB) data load speculative misses per kilo instruction
        (misses of any page-size that complete the page walk)]
  tma_info_memory_tlb_page_walks_utilization
       [Utilization of the core's Page Walker(s) serving STLB misses triggered
        by instruction/Load/Store accesses]
  tma_info_memory_tlb_store_stlb_mpki
       [STLB (2nd level TLB) data store speculative misses per kilo
        instruction (misses of any page-size that complete the page walk)]
  tma_info_system_dram_bw_use
       [Average external Memory Bandwidth Use for reads and writes [GB / sec]]
  tma_info_system_io_read_bw
       [Average IO (network or disk) Bandwidth Use for Reads [GB / sec]]
  tma_info_system_io_write_bw
       [Average IO (network or disk) Bandwidth Use for Writes [GB / sec]]
  tma_info_system_mem_dram_read_latency
       [Average latency of data read request to external DRAM memory [in
        nanoseconds]]
  tma_info_system_mem_parallel_reads
       [Average number of parallel data read requests to external memory]
  tma_info_system_mem_read_latency
       [Average latency of data read request to external memory (in
        nanoseconds)]
  tma_info_thread_cpi
       [Cycles Per Instruction (per Logical Processor)]

MemoryBW: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_fb_full
       [This metric does a *rough estimation* of how often L1D Fill Buffer
        unavailability limited additional L1D miss memory access requests to
        proceed]
  tma_info_bottleneck_memory_bandwidth
       [Total pipeline cost of (external) Memory Bandwidth related bottlenecks]
  tma_info_memory_core_l1d_cache_fill_bw
       [Average per-core data fill bandwidth to the L1 data cache [GB / sec]]
  tma_info_memory_core_l2_cache_fill_bw
       [Average per-core data fill bandwidth to the L2 cache [GB / sec]]
  tma_info_memory_core_l3_cache_access_bw
       [Average per-core data access bandwidth to the L3 cache [GB / sec]]
  tma_info_memory_core_l3_cache_fill_bw
       [Average per-core data fill bandwidth to the L3 cache [GB / sec]]
  tma_info_memory_mlp
       [Memory-Level-Parallelism (average number of L1 miss demand load when
        there is at least one such miss]
  tma_info_memory_thread_l1d_cache_fill_bw_1t
       [Average per-thread data fill bandwidth to the L1 data cache [GB / sec]]
  tma_info_memory_thread_l2_cache_fill_bw_1t
       [Average per-thread data fill bandwidth to the L2 cache [GB / sec]]
  tma_info_memory_thread_l3_cache_access_bw_1t
       [Average per-thread data access bandwidth to the L3 cache [GB / sec]]
  tma_info_memory_thread_l3_cache_fill_bw_1t
       [Average per-thread data fill bandwidth to the L3 cache [GB / sec]]
  tma_info_system_dram_bw_use
       [Average external Memory Bandwidth Use for reads and writes [GB / sec]]
  tma_info_system_mem_parallel_reads
       [Average number of parallel data read requests to external memory]
  tma_mem_bandwidth
       [This metric estimates fraction of cycles where the core's performance
        was likely hurt due to approaching bandwidth limits of external memory
        (DRAM)]
  tma_sq_full
       [This metric measures fraction of cycles where the Super Queue (SQ) was
        full taking into account all request-types and both hardware SMT
        threads (Logical Processors)]

MemoryBound: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_dram_bound
       [This metric estimates how often the CPU was stalled on accesses to
        external memory (DRAM) by loads]
  tma_info_memory_load_miss_real_latency
       [Actual Average Latency for L1 data-cache miss demand load operations
        (in core cycles)]
  tma_info_memory_mlp
       [Memory-Level-Parallelism (average number of L1 miss demand load when
        there is at least one such miss]
  tma_l1_bound
       [This metric estimates how often the CPU was stalled without loads
        missing the L1 data cache]
  tma_l2_bound
       [This metric estimates how often the CPU was stalled due to L2 cache
        accesses by loads]
  tma_l3_bound
       [This metric estimates how often the CPU was stalled due to loads
        accesses to L3 cache or contended with a sibling Core]
  tma_store_bound
       [This metric estimates how often CPU was stalled due to RFO store
        memory accesses; RFO store issue a read-for-ownership request before
        the write]

MemoryLat: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_bottleneck_memory_latency
       [Total pipeline cost of Memory Latency related bottlenecks (external
        memory and off-core caches)]
  tma_info_memory_load_miss_real_latency
       [Actual Average Latency for L1 data-cache miss demand load operations
        (in core cycles)]
  tma_info_system_mem_dram_read_latency
       [Average latency of data read request to external DRAM memory [in
        nanoseconds]]
  tma_info_system_mem_read_latency
       [Average latency of data read request to external memory (in
        nanoseconds)]
  tma_l3_hit_latency
       [This metric represents fraction of cycles with demand load accesses
        that hit the L3 cache under unloaded scenarios (possibly L3 latency
        limited)]
  tma_mem_latency
       [This metric estimates fraction of cycles where the performance was
        likely hurt due to latency from external memory (DRAM)]
  tma_store_latency
       [This metric estimates fraction of cycles the CPU spent handling L1D
        store misses]

MemoryTLB: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_dtlb_load
       [This metric roughly estimates the fraction of cycles where the Data
        TLB (DTLB) was missed by load accesses]
  tma_dtlb_store
       [This metric roughly estimates the fraction of cycles spent handling
        first-level data TLB store misses]
  tma_info_bottleneck_big_code
       [Total pipeline cost of instruction fetch related bottlenecks by large
        code footprint programs (i-side cache; TLB and BTB misses)]
  tma_info_bottleneck_memory_data_tlbs
       [Total pipeline cost of Memory Address Translation related bottlenecks
        (data-side TLBs)]
  tma_info_memory_tlb_code_stlb_mpki
       [STLB (2nd level TLB) code speculative misses per kilo instruction
        (misses of any page-size that complete the page walk)]
  tma_info_memory_tlb_load_stlb_mpki
       [STLB (2nd level TLB) data load speculative misses per kilo instruction
        (misses of any page-size that complete the page walk)]
  tma_info_memory_tlb_page_walks_utilization
       [Utilization of the core's Page Walker(s) serving STLB misses triggered
        by instruction/Load/Store accesses]
  tma_info_memory_tlb_store_stlb_mpki
       [STLB (2nd level TLB) data store speculative misses per kilo
        instruction (misses of any page-size that complete the page walk)]
  tma_itlb_misses
       [This metric represents fraction of cycles the CPU was stalled due to
        Instruction TLB (ITLB) misses]
  tma_load_stlb_hit
       [This metric roughly estimates the fraction of cycles where the (first
        level) DTLB was missed by load accesses, that later on hit in
        second-level TLB (STLB)]
  tma_load_stlb_miss
       [This metric estimates the fraction of cycles where the Second-level
        TLB (STLB) was missed by load accesses, performing a hardware page
        walk]
  tma_store_stlb_hit
       [This metric roughly estimates the fraction of cycles where the TLB was
        missed by store accesses, hitting in the second-level TLB (STLB)]
  tma_store_stlb_miss
       [This metric estimates the fraction of cycles where the STLB was missed
        by store accesses, performing a hardware page walk]

Memory_BW: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_memory_oro_data_l2_mlp
       [Average Parallel L2 cache miss data reads]
  tma_info_memory_oro_load_l2_mlp
       [Average Parallel L2 cache miss demand Loads]

Memory_Lat: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_memory_oro_load_l2_miss_latency
       [Average Latency for L2 cache miss demand Loads]

MicroSeq: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_microcode_sequencer
       [This metric represents fraction of slots the CPU was retiring uops
        fetched by the Microcode Sequencer (MS) unit]
  tma_ms_switches
       [This metric estimates the fraction of cycles when the CPU was stalled
        due to switches of uop delivery to the Microcode Sequencer (MS)]

No_group:
  LLC_MISSES.PCIE_READ
       [PCI Express bandwidth reading at IIO. Derived from
        unc_iio_data_req_of_cpu.mem_read.part0]
  LLC_MISSES.PCIE_WRITE
       [PCI Express bandwidth writing at IIO. Derived from
        unc_iio_data_req_of_cpu.mem_write.part0]
  cpi
       [Cycles per instruction retired; indicating how much time each executed
        instruction took; in units of cycles]
  cpu_operating_frequency
       [CPU operating frequency (in GHz)]
  cpu_utilization
       [Percentage of time spent in the active CPU power state C0]
  dtlb_2mb_large_page_load_mpi
       [Ratio of number of completed page walks (for 2 megabyte page sizes)
        caused by demand data loads to the total number of completed
        instructions]
  dtlb_load_mpi
       [Ratio of number of completed page walks (for all page sizes) caused by
        demand data loads to the total number of completed instructions]
  dtlb_store_mpi
       [Ratio of number of completed page walks (for all page sizes) caused by
        demand data stores to the total number of completed instructions]
  io_bandwidth_read
       [Bandwidth of IO reads that are initiated by end device controllers
        that are requesting memory from the CPU]
  io_bandwidth_write
       [Bandwidth of IO writes that are initiated by end device controllers
        that are writing memory to the CPU]
  itlb_large_page_mpi
       [Ratio of number of completed page walks (for 2 megabyte and 4 megabyte
        page sizes) caused by a code fetch to the total number of completed
        instructions]
  itlb_mpi
       [Ratio of number of completed page walks (for all page sizes) caused by
        a code fetch to the total number of completed instructions]
  l1_i_code_read_misses_with_prefetches_per_instr
       [Ratio of number of code read requests missing in L1 instruction cache
        (includes prefetches) to the total number of completed instructions]
  l1d_demand_data_read_hits_per_instr
       [Ratio of number of demand load requests hitting in L1 data cache to
        the total number of completed instructions]
  l1d_mpi
       [Ratio of number of requests missing L1 data cache (includes data+rfo
        w/ prefetches) to the total number of completed instructions]
  l2_demand_code_mpi
       [Ratio of number of code read request missing L2 cache to the total
        number of completed instructions]
  l2_demand_data_read_hits_per_instr
       [Ratio of number of completed demand load requests hitting in L2 cache
        to the total number of completed instructions]
  l2_demand_data_read_mpi
       [Ratio of number of completed data read request missing L2 cache to the
        total number of completed instructions]
  l2_mpi
       [Ratio of number of requests missing L2 cache (includes code+data+rfo
        w/ prefetches) to the total number of completed instructions]
  llc_code_read_mpi_demand_plus_prefetch
       [Ratio of number of code read requests missing last level core cache
        (includes demand w/ prefetches) to the total number of completed
        instructions]
  llc_data_read_demand_plus_prefetch_miss_latency
       [Average latency of a last level cache (LLC) demand and prefetch data
        read miss (read memory access) in nano seconds]
  llc_data_read_demand_plus_prefetch_miss_latency_for_local_requests
       [Average latency of a last level cache (LLC) demand and prefetch data
        read miss (read memory access) addressed to local memory in nano
        seconds]
  llc_data_read_demand_plus_prefetch_miss_latency_for_remote_requests
       [Average latency of a last level cache (LLC) demand and prefetch data
        read miss (read memory access) addressed to remote memory in nano
        seconds]
  llc_data_read_mpi_demand_plus_prefetch
       [Ratio of number of data read requests missing last level core cache
        (includes demand w/ prefetches) to the total number of completed
        instructions]
  llc_miss_local_memory_bandwidth_read
       [Bandwidth (MB/sec) of read requests that miss the last level cache
        (LLC) and go to local memory]
  llc_miss_local_memory_bandwidth_write
       [Bandwidth (MB/sec) of write requests that miss the last level cache
        (LLC) and go to local memory]
  llc_miss_remote_memory_bandwidth_read
       [Bandwidth (MB/sec) of read requests that miss the last level cache
        (LLC) and go to remote memory]
  loads_per_instr
       [The ratio of number of completed memory load instructions to the total
        number completed instructions]
  memory_bandwidth_read
       [DDR memory read bandwidth (MB/sec)]
  memory_bandwidth_total
       [DDR memory bandwidth (MB/sec)]
  memory_bandwidth_write
       [DDR memory write bandwidth (MB/sec)]
  numa_reads_addressed_to_local_dram
       [Memory read that miss the last level cache (LLC) addressed to local
        DRAM as a percentage of total memory read accesses, does not include
        LLC prefetches]
  numa_reads_addressed_to_remote_dram
       [Memory reads that miss the last level cache (LLC) addressed to remote
        DRAM as a percentage of total memory read accesses, does not include
        LLC prefetches]
  percent_uops_delivered_from_decoded_icache
       [Uops delivered from decoded instruction cache (decoded stream buffer
        or DSB) as a percent of total uops delivered to Instruction Decode
        Queue]
  percent_uops_delivered_from_legacy_decode_pipeline
       [Uops delivered from legacy decode pipeline (Micro-instruction
        Translation Engine or MITE) as a percent of total uops delivered to
        Instruction Decode Queue]
  percent_uops_delivered_from_microcode_sequencer
       [Uops delivered from microcode sequencer (MS) as a percent of total
        uops delivered to Instruction Decode Queue]
  power_channel_ppd
       [Cycles where DRAM ranks are in power down (CKE) mode]
  power_self_refresh
       [Cycles Memory is in self refresh power mode]
  stores_per_instr
       [The ratio of number of completed memory store instructions to the
        total number completed instructions]
  uncore_frequency
       [Uncore operating frequency in GHz]
  upi_data_receive_bw
       [Intel(R) Ultra Path Interconnect (UPI) data receive bandwidth (MB/sec)]
  upi_data_transmit_bw
       [Intel(R) Ultra Path Interconnect (UPI) data transmit bandwidth
        (MB/sec)]

OS: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_system_ipfarbranch
       [Instructions per Far Branch ( Far Branches apply upon transition from
        application to operating system, handling interrupts, exceptions)
        [lower number means higher occurrence rate]]
  tma_info_system_kernel_cpi
       [Cycles Per Instruction for the Operating System (OS) Kernel mode]
  tma_info_system_kernel_utilization
       [Fraction of cycles spent in the Operating System (OS) Kernel mode]

Offcore: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_contested_accesses
       [This metric estimates fraction of cycles while the memory subsystem
        was handling synchronizations due to contested accesses]
  tma_data_sharing
       [This metric estimates fraction of cycles while the memory subsystem
        was handling synchronizations due to data-sharing accesses]
  tma_false_sharing
       [This metric roughly estimates how often CPU was handling
        synchronizations due to False Sharing]
  tma_info_bottleneck_memory_bandwidth
       [Total pipeline cost of (external) Memory Bandwidth related bottlenecks]
  tma_info_bottleneck_memory_data_tlbs
       [Total pipeline cost of Memory Address Translation related bottlenecks
        (data-side TLBs)]
  tma_info_bottleneck_memory_latency
       [Total pipeline cost of Memory Latency related bottlenecks (external
        memory and off-core caches)]
  tma_info_memory_core_l3_cache_access_bw
       [Average per-core data access bandwidth to the L3 cache [GB / sec]]
  tma_info_memory_l2mpki_all
       [L2 cache ([RKL+] true) misses per kilo instruction for all request
        types (including speculative)]
  tma_info_memory_oro_data_l2_mlp
       [Average Parallel L2 cache miss data reads]
  tma_info_memory_oro_load_l2_miss_latency
       [Average Latency for L2 cache miss demand Loads]
  tma_info_memory_oro_load_l2_mlp
       [Average Parallel L2 cache miss demand Loads]
  tma_info_memory_thread_l3_cache_access_bw_1t
       [Average per-thread data access bandwidth to the L3 cache [GB / sec]]
  tma_lock_latency
       [This metric represents fraction of cycles the CPU spent handling cache
        misses due to lock operations]
  tma_mem_bandwidth
       [This metric estimates fraction of cycles where the core's performance
        was likely hurt due to approaching bandwidth limits of external memory
        (DRAM)]
  tma_mem_latency
       [This metric estimates fraction of cycles where the performance was
        likely hurt due to latency from external memory (DRAM)]
  tma_remote_cache
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from remote cache in other sockets including
        synchronizations issues]
  tma_sq_full
       [This metric measures fraction of cycles where the Super Queue (SQ) was
        full taking into account all request-types and both hardware SMT
        threads (Logical Processors)]
  tma_store_latency
       [This metric estimates fraction of cycles the CPU spent handling L1D
        store misses]

PGO: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_frontend_bound
       [This category represents fraction of slots where the processor's
        Frontend undersupplies its Backend]
  tma_info_branches_cond_nt
       [Fraction of branches that are non-taken conditionals]
  tma_info_branches_cond_tk
       [Fraction of branches that are taken conditionals]
  tma_info_inst_mix_bptkbranch
       [Branch instructions per taken branch]
  tma_info_inst_mix_ipcall
       [Instructions per (near) call (lower number means higher occurrence
        rate)]
  tma_info_inst_mix_iptb
       [Instruction per taken branch]

Pipeline: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_fused_instructions
       [This metric represents fraction of slots where the CPU was retiring
        fused instructions -- where one uop can represent multiple contiguous
        instructions]
  tma_info_core_ilp
       [Instruction-Level-Parallelism (average number of uops executed when
        there is execution) per-core]
  tma_info_pipeline_execute
       [Instruction-Level-Parallelism (average number of uops executed when
        there is execution) per-thread]
  tma_info_pipeline_retire
       [Average number of Uops retired in cycles where at least one uop has
        retired]
  tma_info_thread_clks
       [Per-Logical Processor actual clocks when the Logical Processor is
        active]
  tma_info_thread_cpi
       [Cycles Per Instruction (per Logical Processor)]
  tma_info_thread_execute_per_issue
       [The ratio of Executed- by Issued-Uops]
  tma_info_thread_uoppi
       [Uops Per Instruction]
  tma_memory_operations
       [This metric represents fraction of slots where the CPU was retiring
        memory operations -- uops for memory load or store accesses]
  tma_non_fused_branches
       [This metric represents fraction of slots where the CPU was retiring
        branch instructions that were not fused]
  tma_nop_instructions
       [This metric represents fraction of slots where the CPU was retiring
        NOP (no op) instructions]
  tma_other_light_ops
       [This metric represents the remaining light uops fraction the CPU has
        executed - remaining means not covered by other sibling nodes]

PortsUtil: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_core_ilp
       [Instruction-Level-Parallelism (average number of uops executed when
        there is execution) per-core]
  tma_info_pipeline_execute
       [Instruction-Level-Parallelism (average number of uops executed when
        there is execution) per-thread]
  tma_ports_utilization
       [This metric estimates fraction of cycles the CPU performance was
        potentially limited due to Core computation issues (non
        divider-related)]
  tma_ports_utilized_0
       [This metric represents fraction of cycles CPU executed no uops on any
        execution port (Logical Processor cycles since ICL, Physical Core
        cycles otherwise)]
  tma_ports_utilized_1
       [This metric represents fraction of cycles where the CPU executed total
        of 1 uop per cycle on all execution ports (Logical Processor cycles
        since ICL, Physical Core cycles otherwise)]
  tma_ports_utilized_2
       [This metric represents fraction of cycles CPU executed total of 2 uops
        per cycle on all execution ports (Logical Processor cycles since ICL,
        Physical Core cycles otherwise)]
  tma_ports_utilized_3m
       [This metric represents fraction of cycles CPU executed total of 3 or
        more uops per cycle on all execution ports (Logical Processor cycles
        since ICL, Physical Core cycles otherwise)]
  tma_serializing_operation
       [This metric represents fraction of cycles the CPU issue-pipeline was
        stalled due to serializing operations]

Power: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  C2_Pkg_Residency
       [C2 residency percent per package]
  C3_Core_Residency
       [C3 residency percent per core]
  C3_Pkg_Residency
       [C3 residency percent per package]
  C6_Core_Residency
       [C6 residency percent per core]
  C6_Pkg_Residency
       [C6 residency percent per package]
  C7_Core_Residency
       [C7 residency percent per core]
  C7_Pkg_Residency
       [C7 residency percent per package]
  tma_info_system_average_frequency
       [Measured Average Frequency for unhalted processors [GHz]]
  tma_info_system_power_license0_utilization
       [Fraction of Core cycles where the core was running with power-delivery
        for baseline license level 0]
  tma_info_system_power_license1_utilization
       [Fraction of Core cycles where the core was running with power-delivery
        for license level 1]
  tma_info_system_power_license2_utilization
       [Fraction of Core cycles where the core was running with power-delivery
        for license level 2 (introduced in SKX)]
  tma_info_system_turbo_utilization
       [Average Frequency Utilization relative nominal frequency]

Prefetches: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_inst_mix_ipswpf
       [Instructions per Software prefetch instruction (of any type:
        NTA/T0/T1/T2/Prefetch) (lower number means higher occurrence rate)]

Ret: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_bottleneck_branching_overhead
       [Total pipeline cost of branch related instructions (used for program
        control-flow including function calls)]
  tma_info_core_coreipc
       [Instructions Per Cycle across hyper-threads (per physical core)]
  tma_info_core_flopc
       [Floating Point Operations Per Cycle]
  tma_info_pipeline_retire
       [Average number of Uops retired in cycles where at least one uop has
        retired]
  tma_info_thread_ipc
       [Instructions Per Cycle (per Logical Processor)]
  tma_info_thread_uoppi
       [Uops Per Instruction]

Retire: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_heavy_operations
       [This metric represents fraction of slots where the CPU was retiring
        heavy-weight operations -- instructions that require two or more uops
        or micro-coded sequences]
  tma_info_thread_uoppi
       [Uops Per Instruction]
  tma_light_operations
       [This metric represents fraction of slots where the CPU was retiring
        light-weight operations -- instructions that require no more than one
        uop (micro-operation)]

SMT: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_botlnk_l0_core_bound_likely
       [Probability of Core Bound bottleneck hidden by SMT-profiling artifacts]
  tma_info_core_core_clks
       [Core actual clocks when any Logical Processor is active on the
        Physical Core]
  tma_info_core_coreipc
       [Instructions Per Cycle across hyper-threads (per physical core)]
  tma_info_pipeline_execute
       [Instruction-Level-Parallelism (average number of uops executed when
        there is execution) per-thread]
  tma_info_system_smt_2t_utilization
       [Fraction of cycles where both hardware Logical Processors were active]

Server: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_memory_core_l2_evictions_nonsilent_pki
       [Rate of non silent evictions from the L2 cache per Kilo instruction]
  tma_info_memory_core_l2_evictions_silent_pki
       [Rate of silent evictions from the L2 cache per Kilo instruction where
        the evicted lines are dropped (no writeback to L3 or memory)]
  tma_info_system_io_read_bw
       [Average IO (network or disk) Bandwidth Use for Reads [GB / sec]]
  tma_info_system_io_write_bw
       [Average IO (network or disk) Bandwidth Use for Writes [GB / sec]]
  tma_info_system_mem_dram_read_latency
       [Average latency of data read request to external DRAM memory [in
        nanoseconds]]
  tma_local_dram
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from local memory]
  tma_remote_cache
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from remote cache in other sockets including
        synchronizations issues]
  tma_remote_dram
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from remote memory]

Snoop: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_contested_accesses
       [This metric estimates fraction of cycles while the memory subsystem
        was handling synchronizations due to contested accesses]
  tma_data_sharing
       [This metric estimates fraction of cycles while the memory subsystem
        was handling synchronizations due to data-sharing accesses]
  tma_false_sharing
       [This metric roughly estimates how often CPU was handling
        synchronizations due to False Sharing]
  tma_remote_cache
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from remote cache in other sockets including
        synchronizations issues]
  tma_remote_dram
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from remote memory]

SoC: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  UNCORE_FREQ
       [Uncore frequency per die [GHZ]]
  tma_info_system_dram_bw_use
       [Average external Memory Bandwidth Use for reads and writes [GB / sec]]
  tma_info_system_io_read_bw
       [Average IO (network or disk) Bandwidth Use for Reads [GB / sec]]
  tma_info_system_io_write_bw
       [Average IO (network or disk) Bandwidth Use for Writes [GB / sec]]
  tma_info_system_mem_dram_read_latency
       [Average latency of data read request to external DRAM memory [in
        nanoseconds]]
  tma_info_system_mem_parallel_reads
       [Average number of parallel data read requests to external memory]
  tma_info_system_mem_read_latency
       [Average latency of data read request to external memory (in
        nanoseconds)]
  tma_info_system_socket_clks
       [Socket actual clocks when any core is active on that socket]

Summary: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_info_inst_mix_instructions
       [Total number of retired Instructions]
  tma_info_system_average_frequency
       [Measured Average Frequency for unhalted processors [GHz]]
  tma_info_system_cpu_utilization
       [Average CPU Utilization]
  tma_info_thread_ipc
       [Instructions Per Cycle (per Logical Processor)]

TmaL1: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_backend_bound
       [This category represents fraction of slots where no uops are being
        delivered due to a lack of required resources for accepting new uops
        in the Backend]
  tma_bad_speculation
       [This category represents fraction of slots wasted due to incorrect
        speculations]
  tma_frontend_bound
       [This category represents fraction of slots where the processor's
        Frontend undersupplies its Backend]
  tma_info_core_coreipc
       [Instructions Per Cycle across hyper-threads (per physical core)]
  tma_info_inst_mix_instructions
       [Total number of retired Instructions]
  tma_info_thread_slots
       [Total issue-pipeline slots (per-Physical Core till ICL; per-Logical
        Processor ICL onward)]
  tma_retiring
       [This category represents fraction of slots utilized by useful work
        i.e. issued uops that eventually get retired]

TmaL2: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_branch_mispredicts
       [This metric represents fraction of slots the CPU has wasted due to
        Branch Misprediction]
  tma_core_bound
       [This metric represents fraction of slots where Core non-memory issues
        were of a bottleneck]
  tma_fetch_bandwidth
       [This metric represents fraction of slots the CPU was stalled due to
        Frontend bandwidth issues]
  tma_fetch_latency
       [This metric represents fraction of slots the CPU was stalled due to
        Frontend latency issues]
  tma_heavy_operations
       [This metric represents fraction of slots where the CPU was retiring
        heavy-weight operations -- instructions that require two or more uops
        or micro-coded sequences]
  tma_light_operations
       [This metric represents fraction of slots where the CPU was retiring
        light-weight operations -- instructions that require no more than one
        uop (micro-operation)]
  tma_machine_clears
       [This metric represents fraction of slots the CPU has wasted due to
        Machine Clears]
  tma_memory_bound
       [This metric represents fraction of slots the Memory subsystem within
        the Backend was a bottleneck]

TmaL3mem: [Grouping from Top-down Microarchitecture Analysis Metrics spreadsheet]
  tma_dram_bound
       [This metric estimates how often the CPU was stalled on accesses to
        external memory (DRAM) by loads]
  tma_l1_bound
       [This metric estimates how often the CPU was stalled without loads
        missing the L1 data cache]
  tma_l2_bound
       [This metric estimates how often the CPU was stalled due to L2 cache
        accesses by loads]
  tma_l3_bound
       [This metric estimates how often the CPU was stalled due to loads
        accesses to L3 cache or contended with a sibling Core]
  tma_store_bound
       [This metric estimates how often CPU was stalled due to RFO store
        memory accesses; RFO store issue a read-for-ownership request before
        the write]

TopdownL1: [Metrics for top-down breakdown at level 1]
  tma_backend_bound
       [This category represents fraction of slots where no uops are being
        delivered due to a lack of required resources for accepting new uops
        in the Backend]
  tma_bad_speculation
       [This category represents fraction of slots wasted due to incorrect
        speculations]
  tma_frontend_bound
       [This category represents fraction of slots where the processor's
        Frontend undersupplies its Backend]
  tma_info_core_ipmispredict
       [Number of Instructions per non-speculative Branch Misprediction
        (JEClear)]
  tma_retiring
       [This category represents fraction of slots utilized by useful work
        i.e. issued uops that eventually get retired]

TopdownL2: [Metrics for top-down breakdown at level 2]
  tma_branch_mispredicts
       [This metric represents fraction of slots the CPU has wasted due to
        Branch Misprediction]
  tma_core_bound
       [This metric represents fraction of slots where Core non-memory issues
        were of a bottleneck]
  tma_fetch_bandwidth
       [This metric represents fraction of slots the CPU was stalled due to
        Frontend bandwidth issues]
  tma_fetch_latency
       [This metric represents fraction of slots the CPU was stalled due to
        Frontend latency issues]
  tma_heavy_operations
       [This metric represents fraction of slots where the CPU was retiring
        heavy-weight operations -- instructions that require two or more uops
        or micro-coded sequences]
  tma_light_operations
       [This metric represents fraction of slots where the CPU was retiring
        light-weight operations -- instructions that require no more than one
        uop (micro-operation)]
  tma_machine_clears
       [This metric represents fraction of slots the CPU has wasted due to
        Machine Clears]
  tma_memory_bound
       [This metric represents fraction of slots the Memory subsystem within
        the Backend was a bottleneck]

TopdownL3: [Metrics for top-down breakdown at level 3]
  tma_branch_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers]
  tma_divider
       [This metric represents fraction of cycles where the Divider unit was
        active]
  tma_dram_bound
       [This metric estimates how often the CPU was stalled on accesses to
        external memory (DRAM) by loads]
  tma_dsb
       [This metric represents Core fraction of cycles in which CPU was likely
        limited due to DSB (decoded uop cache) fetch pipeline]
  tma_dsb_switches
       [This metric represents fraction of cycles the CPU was stalled due to
        switches from DSB to MITE pipelines]
  tma_few_uops_instructions
       [This metric represents fraction of slots where the CPU was retiring
        instructions that that are decoder into two or up to ([SNB+] four;
        [ADL+] five) uops]
  tma_fp_arith
       [This metric represents overall arithmetic floating-point (FP)
        operations fraction the CPU has executed (retired)]
  tma_fused_instructions
       [This metric represents fraction of slots where the CPU was retiring
        fused instructions -- where one uop can represent multiple contiguous
        instructions]
  tma_icache_misses
       [This metric represents fraction of cycles the CPU was stalled due to
        instruction cache misses]
  tma_itlb_misses
       [This metric represents fraction of cycles the CPU was stalled due to
        Instruction TLB (ITLB) misses]
  tma_l1_bound
       [This metric estimates how often the CPU was stalled without loads
        missing the L1 data cache]
  tma_l2_bound
       [This metric estimates how often the CPU was stalled due to L2 cache
        accesses by loads]
  tma_l3_bound
       [This metric estimates how often the CPU was stalled due to loads
        accesses to L3 cache or contended with a sibling Core]
  tma_lcp
       [This metric represents fraction of cycles CPU was stalled due to
        Length Changing Prefixes (LCPs)]
  tma_memory_operations
       [This metric represents fraction of slots where the CPU was retiring
        memory operations -- uops for memory load or store accesses]
  tma_microcode_sequencer
       [This metric represents fraction of slots the CPU was retiring uops
        fetched by the Microcode Sequencer (MS) unit]
  tma_mite
       [This metric represents Core fraction of cycles in which CPU was likely
        limited due to the MITE pipeline (the legacy decode pipeline)]
  tma_ms_switches
       [This metric estimates the fraction of cycles when the CPU was stalled
        due to switches of uop delivery to the Microcode Sequencer (MS)]
  tma_non_fused_branches
       [This metric represents fraction of slots where the CPU was retiring
        branch instructions that were not fused]
  tma_nop_instructions
       [This metric represents fraction of slots where the CPU was retiring
        NOP (no op) instructions]
  tma_other_light_ops
       [This metric represents the remaining light uops fraction the CPU has
        executed - remaining means not covered by other sibling nodes]
  tma_ports_utilization
       [This metric estimates fraction of cycles the CPU performance was
        potentially limited due to Core computation issues (non
        divider-related)]
  tma_store_bound
       [This metric estimates how often CPU was stalled due to RFO store
        memory accesses; RFO store issue a read-for-ownership request before
        the write]

TopdownL4: [Metrics for top-down breakdown at level 4]
  tma_4k_aliasing
       [This metric estimates how often memory load accesses were aliased by
        preceding stores (in program order) with a 4K address offset]
  tma_assists
       [This metric estimates fraction of slots the CPU retired uops delivered
        by the Microcode_Sequencer as a result of Assists]
  tma_cisc
       [This metric estimates fraction of cycles the CPU retired uops
        originated from CISC (complex instruction set computer) instruction]
  tma_clears_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers as a result of Machine Clears]
  tma_contested_accesses
       [This metric estimates fraction of cycles while the memory subsystem
        was handling synchronizations due to contested accesses]
  tma_data_sharing
       [This metric estimates fraction of cycles while the memory subsystem
        was handling synchronizations due to data-sharing accesses]
  tma_decoder0_alone
       [This metric represents fraction of cycles where decoder-0 was the only
        active decoder]
  tma_dtlb_load
       [This metric roughly estimates the fraction of cycles where the Data
        TLB (DTLB) was missed by load accesses]
  tma_dtlb_store
       [This metric roughly estimates the fraction of cycles spent handling
        first-level data TLB store misses]
  tma_false_sharing
       [This metric roughly estimates how often CPU was handling
        synchronizations due to False Sharing]
  tma_fb_full
       [This metric does a *rough estimation* of how often L1D Fill Buffer
        unavailability limited additional L1D miss memory access requests to
        proceed]
  tma_fp_scalar
       [This metric approximates arithmetic floating-point (FP) scalar uops
        fraction the CPU has retired]
  tma_fp_vector
       [This metric approximates arithmetic floating-point (FP) vector uops
        fraction the CPU has retired aggregated across all vector widths]
  tma_l3_hit_latency
       [This metric represents fraction of cycles with demand load accesses
        that hit the L3 cache under unloaded scenarios (possibly L3 latency
        limited)]
  tma_lock_latency
       [This metric represents fraction of cycles the CPU spent handling cache
        misses due to lock operations]
  tma_mem_bandwidth
       [This metric estimates fraction of cycles where the core's performance
        was likely hurt due to approaching bandwidth limits of external memory
        (DRAM)]
  tma_mem_latency
       [This metric estimates fraction of cycles where the performance was
        likely hurt due to latency from external memory (DRAM)]
  tma_mispredicts_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers as a result of Branch Misprediction at execution stage]
  tma_ports_utilized_0
       [This metric represents fraction of cycles CPU executed no uops on any
        execution port (Logical Processor cycles since ICL, Physical Core
        cycles otherwise)]
  tma_ports_utilized_1
       [This metric represents fraction of cycles where the CPU executed total
        of 1 uop per cycle on all execution ports (Logical Processor cycles
        since ICL, Physical Core cycles otherwise)]
  tma_ports_utilized_2
       [This metric represents fraction of cycles CPU executed total of 2 uops
        per cycle on all execution ports (Logical Processor cycles since ICL,
        Physical Core cycles otherwise)]
  tma_ports_utilized_3m
       [This metric represents fraction of cycles CPU executed total of 3 or
        more uops per cycle on all execution ports (Logical Processor cycles
        since ICL, Physical Core cycles otherwise)]
  tma_split_loads
       [This metric estimates fraction of cycles handling memory load split
        accesses - load that cross 64-byte cache line boundary]
  tma_split_stores
       [This metric represents rate of split store accesses]
  tma_sq_full
       [This metric measures fraction of cycles where the Super Queue (SQ) was
        full taking into account all request-types and both hardware SMT
        threads (Logical Processors)]
  tma_store_fwd_blk
       [This metric roughly estimates fraction of cycles when the memory
        subsystem had loads blocked since they could not forward data from
        earlier (in program order) overlapping stores]
  tma_store_latency
       [This metric estimates fraction of cycles the CPU spent handling L1D
        store misses]
  tma_unknown_branches
       [This metric represents fraction of cycles the CPU was stalled due to
        new branch address clears]
  tma_x87_use
       [This metric serves as an approximation of legacy x87 usage]

TopdownL5: [Metrics for top-down breakdown at level 5]
  tma_alu_op_utilization
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution ports for ALU operations]
  tma_fp_vector_128b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 128-bit wide vectors]
  tma_fp_vector_256b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 256-bit wide vectors]
  tma_fp_vector_512b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 512-bit wide vectors]
  tma_load_op_utilization
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port for Load operations]
  tma_load_stlb_hit
       [This metric roughly estimates the fraction of cycles where the (first
        level) DTLB was missed by load accesses, that later on hit in
        second-level TLB (STLB)]
  tma_load_stlb_miss
       [This metric estimates the fraction of cycles where the Second-level
        TLB (STLB) was missed by load accesses, performing a hardware page
        walk]
  tma_local_dram
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from local memory]
  tma_mixing_vectors
       [The Mixing_Vectors metric gives the percentage of injected blend uops
        out of all uops issued]
  tma_remote_cache
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from remote cache in other sockets including
        synchronizations issues]
  tma_remote_dram
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from remote memory]
  tma_serializing_operation
       [This metric represents fraction of cycles the CPU issue-pipeline was
        stalled due to serializing operations]
  tma_store_op_utilization
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port for Store operations]
  tma_store_stlb_hit
       [This metric roughly estimates the fraction of cycles where the TLB was
        missed by store accesses, hitting in the second-level TLB (STLB)]
  tma_store_stlb_miss
       [This metric estimates the fraction of cycles where the STLB was missed
        by store accesses, performing a hardware page walk]

TopdownL6: [Metrics for top-down breakdown at level 6]
  tma_port_0
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch)]
  tma_port_1
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 1 (ALU)]
  tma_port_2
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 2 ([SNB+]Loads and Store-address; [ICL+] Loads)]
  tma_port_3
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 3 ([SNB+]Loads and Store-address; [ICL+] Loads)]
  tma_port_4
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 4 (Store-data)]
  tma_port_5
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 5 ([SNB+] Branches and ALU; [HSW+] ALU)]
  tma_port_6
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 6 ([HSW+]Primary Branch and simple ALU)]
  tma_port_7
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 7 ([HSW+]simple Store-address)]

smi:
  smi_cycles
       [Percentage of cycles spent in System Management Interrupts]
  smi_num
       [Number of SMI interrupts]

tma_L1_group: [Metrics for top-down breakdown at level 1]
  tma_backend_bound
       [This category represents fraction of slots where no uops are being
        delivered due to a lack of required resources for accepting new uops
        in the Backend]
  tma_bad_speculation
       [This category represents fraction of slots wasted due to incorrect
        speculations]
  tma_frontend_bound
       [This category represents fraction of slots where the processor's
        Frontend undersupplies its Backend]
  tma_info_core_coreipc
       [Instructions Per Cycle across hyper-threads (per physical core)]
  tma_info_core_ipmispredict
       [Number of Instructions per non-speculative Branch Misprediction
        (JEClear)]
  tma_info_inst_mix_instructions
       [Total number of retired Instructions]
  tma_info_thread_slots
       [Total issue-pipeline slots (per-Physical Core till ICL; per-Logical
        Processor ICL onward)]
  tma_retiring
       [This category represents fraction of slots utilized by useful work
        i.e. issued uops that eventually get retired]

tma_L2_group: [Metrics for top-down breakdown at level 2]
  tma_branch_mispredicts
       [This metric represents fraction of slots the CPU has wasted due to
        Branch Misprediction]
  tma_core_bound
       [This metric represents fraction of slots where Core non-memory issues
        were of a bottleneck]
  tma_fetch_bandwidth
       [This metric represents fraction of slots the CPU was stalled due to
        Frontend bandwidth issues]
  tma_fetch_latency
       [This metric represents fraction of slots the CPU was stalled due to
        Frontend latency issues]
  tma_heavy_operations
       [This metric represents fraction of slots where the CPU was retiring
        heavy-weight operations -- instructions that require two or more uops
        or micro-coded sequences]
  tma_light_operations
       [This metric represents fraction of slots where the CPU was retiring
        light-weight operations -- instructions that require no more than one
        uop (micro-operation)]
  tma_machine_clears
       [This metric represents fraction of slots the CPU has wasted due to
        Machine Clears]
  tma_memory_bound
       [This metric represents fraction of slots the Memory subsystem within
        the Backend was a bottleneck]

tma_L3_group: [Metrics for top-down breakdown at level 3]
  tma_branch_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers]
  tma_divider
       [This metric represents fraction of cycles where the Divider unit was
        active]
  tma_dram_bound
       [This metric estimates how often the CPU was stalled on accesses to
        external memory (DRAM) by loads]
  tma_dsb
       [This metric represents Core fraction of cycles in which CPU was likely
        limited due to DSB (decoded uop cache) fetch pipeline]
  tma_dsb_switches
       [This metric represents fraction of cycles the CPU was stalled due to
        switches from DSB to MITE pipelines]
  tma_few_uops_instructions
       [This metric represents fraction of slots where the CPU was retiring
        instructions that that are decoder into two or up to ([SNB+] four;
        [ADL+] five) uops]
  tma_fp_arith
       [This metric represents overall arithmetic floating-point (FP)
        operations fraction the CPU has executed (retired)]
  tma_fused_instructions
       [This metric represents fraction of slots where the CPU was retiring
        fused instructions -- where one uop can represent multiple contiguous
        instructions]
  tma_icache_misses
       [This metric represents fraction of cycles the CPU was stalled due to
        instruction cache misses]
  tma_itlb_misses
       [This metric represents fraction of cycles the CPU was stalled due to
        Instruction TLB (ITLB) misses]
  tma_l1_bound
       [This metric estimates how often the CPU was stalled without loads
        missing the L1 data cache]
  tma_l2_bound
       [This metric estimates how often the CPU was stalled due to L2 cache
        accesses by loads]
  tma_l3_bound
       [This metric estimates how often the CPU was stalled due to loads
        accesses to L3 cache or contended with a sibling Core]
  tma_lcp
       [This metric represents fraction of cycles CPU was stalled due to
        Length Changing Prefixes (LCPs)]
  tma_memory_operations
       [This metric represents fraction of slots where the CPU was retiring
        memory operations -- uops for memory load or store accesses]
  tma_microcode_sequencer
       [This metric represents fraction of slots the CPU was retiring uops
        fetched by the Microcode Sequencer (MS) unit]
  tma_mite
       [This metric represents Core fraction of cycles in which CPU was likely
        limited due to the MITE pipeline (the legacy decode pipeline)]
  tma_ms_switches
       [This metric estimates the fraction of cycles when the CPU was stalled
        due to switches of uop delivery to the Microcode Sequencer (MS)]
  tma_non_fused_branches
       [This metric represents fraction of slots where the CPU was retiring
        branch instructions that were not fused]
  tma_nop_instructions
       [This metric represents fraction of slots where the CPU was retiring
        NOP (no op) instructions]
  tma_other_light_ops
       [This metric represents the remaining light uops fraction the CPU has
        executed - remaining means not covered by other sibling nodes]
  tma_ports_utilization
       [This metric estimates fraction of cycles the CPU performance was
        potentially limited due to Core computation issues (non
        divider-related)]
  tma_store_bound
       [This metric estimates how often CPU was stalled due to RFO store
        memory accesses; RFO store issue a read-for-ownership request before
        the write]

tma_L4_group: [Metrics for top-down breakdown at level 4]
  tma_4k_aliasing
       [This metric estimates how often memory load accesses were aliased by
        preceding stores (in program order) with a 4K address offset]
  tma_assists
       [This metric estimates fraction of slots the CPU retired uops delivered
        by the Microcode_Sequencer as a result of Assists]
  tma_cisc
       [This metric estimates fraction of cycles the CPU retired uops
        originated from CISC (complex instruction set computer) instruction]
  tma_clears_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers as a result of Machine Clears]
  tma_contested_accesses
       [This metric estimates fraction of cycles while the memory subsystem
        was handling synchronizations due to contested accesses]
  tma_data_sharing
       [This metric estimates fraction of cycles while the memory subsystem
        was handling synchronizations due to data-sharing accesses]
  tma_decoder0_alone
       [This metric represents fraction of cycles where decoder-0 was the only
        active decoder]
  tma_dtlb_load
       [This metric roughly estimates the fraction of cycles where the Data
        TLB (DTLB) was missed by load accesses]
  tma_dtlb_store
       [This metric roughly estimates the fraction of cycles spent handling
        first-level data TLB store misses]
  tma_false_sharing
       [This metric roughly estimates how often CPU was handling
        synchronizations due to False Sharing]
  tma_fb_full
       [This metric does a *rough estimation* of how often L1D Fill Buffer
        unavailability limited additional L1D miss memory access requests to
        proceed]
  tma_fp_scalar
       [This metric approximates arithmetic floating-point (FP) scalar uops
        fraction the CPU has retired]
  tma_fp_vector
       [This metric approximates arithmetic floating-point (FP) vector uops
        fraction the CPU has retired aggregated across all vector widths]
  tma_l3_hit_latency
       [This metric represents fraction of cycles with demand load accesses
        that hit the L3 cache under unloaded scenarios (possibly L3 latency
        limited)]
  tma_lock_latency
       [This metric represents fraction of cycles the CPU spent handling cache
        misses due to lock operations]
  tma_mem_bandwidth
       [This metric estimates fraction of cycles where the core's performance
        was likely hurt due to approaching bandwidth limits of external memory
        (DRAM)]
  tma_mem_latency
       [This metric estimates fraction of cycles where the performance was
        likely hurt due to latency from external memory (DRAM)]
  tma_mispredicts_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers as a result of Branch Misprediction at execution stage]
  tma_ports_utilized_0
       [This metric represents fraction of cycles CPU executed no uops on any
        execution port (Logical Processor cycles since ICL, Physical Core
        cycles otherwise)]
  tma_ports_utilized_1
       [This metric represents fraction of cycles where the CPU executed total
        of 1 uop per cycle on all execution ports (Logical Processor cycles
        since ICL, Physical Core cycles otherwise)]
  tma_ports_utilized_2
       [This metric represents fraction of cycles CPU executed total of 2 uops
        per cycle on all execution ports (Logical Processor cycles since ICL,
        Physical Core cycles otherwise)]
  tma_ports_utilized_3m
       [This metric represents fraction of cycles CPU executed total of 3 or
        more uops per cycle on all execution ports (Logical Processor cycles
        since ICL, Physical Core cycles otherwise)]
  tma_split_loads
       [This metric estimates fraction of cycles handling memory load split
        accesses - load that cross 64-byte cache line boundary]
  tma_split_stores
       [This metric represents rate of split store accesses]
  tma_sq_full
       [This metric measures fraction of cycles where the Super Queue (SQ) was
        full taking into account all request-types and both hardware SMT
        threads (Logical Processors)]
  tma_store_fwd_blk
       [This metric roughly estimates fraction of cycles when the memory
        subsystem had loads blocked since they could not forward data from
        earlier (in program order) overlapping stores]
  tma_store_latency
       [This metric estimates fraction of cycles the CPU spent handling L1D
        store misses]
  tma_unknown_branches
       [This metric represents fraction of cycles the CPU was stalled due to
        new branch address clears]
  tma_x87_use
       [This metric serves as an approximation of legacy x87 usage]

tma_L5_group: [Metrics for top-down breakdown at level 5]
  tma_alu_op_utilization
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution ports for ALU operations]
  tma_fp_vector_128b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 128-bit wide vectors]
  tma_fp_vector_256b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 256-bit wide vectors]
  tma_fp_vector_512b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 512-bit wide vectors]
  tma_load_op_utilization
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port for Load operations]
  tma_load_stlb_hit
       [This metric roughly estimates the fraction of cycles where the (first
        level) DTLB was missed by load accesses, that later on hit in
        second-level TLB (STLB)]
  tma_load_stlb_miss
       [This metric estimates the fraction of cycles where the Second-level
        TLB (STLB) was missed by load accesses, performing a hardware page
        walk]
  tma_local_dram
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from local memory]
  tma_mixing_vectors
       [The Mixing_Vectors metric gives the percentage of injected blend uops
        out of all uops issued]
  tma_remote_cache
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from remote cache in other sockets including
        synchronizations issues]
  tma_remote_dram
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from remote memory]
  tma_serializing_operation
       [This metric represents fraction of cycles the CPU issue-pipeline was
        stalled due to serializing operations]
  tma_store_op_utilization
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port for Store operations]
  tma_store_stlb_hit
       [This metric roughly estimates the fraction of cycles where the TLB was
        missed by store accesses, hitting in the second-level TLB (STLB)]
  tma_store_stlb_miss
       [This metric estimates the fraction of cycles where the STLB was missed
        by store accesses, performing a hardware page walk]

tma_L6_group: [Metrics for top-down breakdown at level 6]
  tma_port_0
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch)]
  tma_port_1
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 1 (ALU)]
  tma_port_2
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 2 ([SNB+]Loads and Store-address; [ICL+] Loads)]
  tma_port_3
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 3 ([SNB+]Loads and Store-address; [ICL+] Loads)]
  tma_port_4
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 4 (Store-data)]
  tma_port_5
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 5 ([SNB+] Branches and ALU; [HSW+] ALU)]
  tma_port_6
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 6 ([HSW+]Primary Branch and simple ALU)]
  tma_port_7
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 7 ([HSW+]simple Store-address)]

tma_alu_op_utilization_group: [Metrics contributing to tma_alu_op_utilization category]
  tma_port_0
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch)]
  tma_port_1
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 1 (ALU)]
  tma_port_5
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 5 ([SNB+] Branches and ALU; [HSW+] ALU)]
  tma_port_6
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 6 ([HSW+]Primary Branch and simple ALU)]

tma_backend_bound_group: [Metrics contributing to tma_backend_bound category]
  tma_core_bound
       [This metric represents fraction of slots where Core non-memory issues
        were of a bottleneck]
  tma_memory_bound
       [This metric represents fraction of slots the Memory subsystem within
        the Backend was a bottleneck]

tma_bad_speculation_group: [Metrics contributing to tma_bad_speculation category]
  tma_branch_mispredicts
       [This metric represents fraction of slots the CPU has wasted due to
        Branch Misprediction]
  tma_machine_clears
       [This metric represents fraction of slots the CPU has wasted due to
        Machine Clears]

tma_branch_resteers_group: [Metrics contributing to tma_branch_resteers category]
  tma_clears_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers as a result of Machine Clears]
  tma_mispredicts_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers as a result of Branch Misprediction at execution stage]
  tma_unknown_branches
       [This metric represents fraction of cycles the CPU was stalled due to
        new branch address clears]

tma_core_bound_group: [Metrics contributing to tma_core_bound category]
  tma_divider
       [This metric represents fraction of cycles where the Divider unit was
        active]
  tma_ports_utilization
       [This metric estimates fraction of cycles the CPU performance was
        potentially limited due to Core computation issues (non
        divider-related)]

tma_dram_bound_group: [Metrics contributing to tma_dram_bound category]
  tma_mem_bandwidth
       [This metric estimates fraction of cycles where the core's performance
        was likely hurt due to approaching bandwidth limits of external memory
        (DRAM)]
  tma_mem_latency
       [This metric estimates fraction of cycles where the performance was
        likely hurt due to latency from external memory (DRAM)]

tma_dtlb_load_group: [Metrics contributing to tma_dtlb_load category]
  tma_load_stlb_hit
       [This metric roughly estimates the fraction of cycles where the (first
        level) DTLB was missed by load accesses, that later on hit in
        second-level TLB (STLB)]
  tma_load_stlb_miss
       [This metric estimates the fraction of cycles where the Second-level
        TLB (STLB) was missed by load accesses, performing a hardware page
        walk]

tma_dtlb_store_group: [Metrics contributing to tma_dtlb_store category]
  tma_store_stlb_hit
       [This metric roughly estimates the fraction of cycles where the TLB was
        missed by store accesses, hitting in the second-level TLB (STLB)]
  tma_store_stlb_miss
       [This metric estimates the fraction of cycles where the STLB was missed
        by store accesses, performing a hardware page walk]

tma_fetch_bandwidth_group: [Metrics contributing to tma_fetch_bandwidth category]
  tma_dsb
       [This metric represents Core fraction of cycles in which CPU was likely
        limited due to DSB (decoded uop cache) fetch pipeline]
  tma_mite
       [This metric represents Core fraction of cycles in which CPU was likely
        limited due to the MITE pipeline (the legacy decode pipeline)]

tma_fetch_latency_group: [Metrics contributing to tma_fetch_latency category]
  tma_branch_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers]
  tma_dsb_switches
       [This metric represents fraction of cycles the CPU was stalled due to
        switches from DSB to MITE pipelines]
  tma_icache_misses
       [This metric represents fraction of cycles the CPU was stalled due to
        instruction cache misses]
  tma_itlb_misses
       [This metric represents fraction of cycles the CPU was stalled due to
        Instruction TLB (ITLB) misses]
  tma_lcp
       [This metric represents fraction of cycles CPU was stalled due to
        Length Changing Prefixes (LCPs)]
  tma_ms_switches
       [This metric estimates the fraction of cycles when the CPU was stalled
        due to switches of uop delivery to the Microcode Sequencer (MS)]

tma_fp_arith_group: [Metrics contributing to tma_fp_arith category]
  tma_fp_scalar
       [This metric approximates arithmetic floating-point (FP) scalar uops
        fraction the CPU has retired]
  tma_fp_vector
       [This metric approximates arithmetic floating-point (FP) vector uops
        fraction the CPU has retired aggregated across all vector widths]
  tma_x87_use
       [This metric serves as an approximation of legacy x87 usage]

tma_fp_vector_group: [Metrics contributing to tma_fp_vector category]
  tma_fp_vector_128b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 128-bit wide vectors]
  tma_fp_vector_256b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 256-bit wide vectors]
  tma_fp_vector_512b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 512-bit wide vectors]

tma_frontend_bound_group: [Metrics contributing to tma_frontend_bound category]
  tma_fetch_bandwidth
       [This metric represents fraction of slots the CPU was stalled due to
        Frontend bandwidth issues]
  tma_fetch_latency
       [This metric represents fraction of slots the CPU was stalled due to
        Frontend latency issues]

tma_heavy_operations_group: [Metrics contributing to tma_heavy_operations category]
  tma_few_uops_instructions
       [This metric represents fraction of slots where the CPU was retiring
        instructions that that are decoder into two or up to ([SNB+] four;
        [ADL+] five) uops]
  tma_microcode_sequencer
       [This metric represents fraction of slots the CPU was retiring uops
        fetched by the Microcode Sequencer (MS) unit]

tma_issue2P: [Metrics related by the issue $issue2P]
  tma_fp_scalar
       [This metric approximates arithmetic floating-point (FP) scalar uops
        fraction the CPU has retired]
  tma_fp_vector
       [This metric approximates arithmetic floating-point (FP) vector uops
        fraction the CPU has retired aggregated across all vector widths]
  tma_fp_vector_128b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 128-bit wide vectors]
  tma_fp_vector_256b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 256-bit wide vectors]
  tma_fp_vector_512b
       [This metric approximates arithmetic FP vector uops fraction the CPU
        has retired for 512-bit wide vectors]
  tma_port_0
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch)]
  tma_port_1
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 1 (ALU)]
  tma_port_5
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 5 ([SNB+] Branches and ALU; [HSW+] ALU)]
  tma_port_6
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 6 ([HSW+]Primary Branch and simple ALU)]
  tma_ports_utilized_2
       [This metric represents fraction of cycles CPU executed total of 2 uops
        per cycle on all execution ports (Logical Processor cycles since ICL,
        Physical Core cycles otherwise)]

tma_issueBC: [Metrics related by the issue $issueBC]
  tma_info_bottleneck_big_code
       [Total pipeline cost of instruction fetch related bottlenecks by large
        code footprint programs (i-side cache; TLB and BTB misses)]
  tma_info_bottleneck_branching_overhead
       [Total pipeline cost of branch related instructions (used for program
        control-flow including function calls)]

tma_issueBM: [Metrics related by the issue $issueBM]
  tma_branch_mispredicts
       [This metric represents fraction of slots the CPU has wasted due to
        Branch Misprediction]
  tma_info_bad_spec_branch_misprediction_cost
       [Branch Misprediction Cost: Fraction of TMA slots wasted per
        non-speculative branch misprediction (retired JEClear)]
  tma_info_bottleneck_mispredictions
       [Total pipeline cost of Branch Misprediction related bottlenecks]
  tma_mispredicts_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers as a result of Branch Misprediction at execution stage]

tma_issueBW: [Metrics related by the issue $issueBW]
  tma_fb_full
       [This metric does a *rough estimation* of how often L1D Fill Buffer
        unavailability limited additional L1D miss memory access requests to
        proceed]
  tma_info_bottleneck_memory_bandwidth
       [Total pipeline cost of (external) Memory Bandwidth related bottlenecks]
  tma_info_system_dram_bw_use
       [Average external Memory Bandwidth Use for reads and writes [GB / sec]]
  tma_mem_bandwidth
       [This metric estimates fraction of cycles where the core's performance
        was likely hurt due to approaching bandwidth limits of external memory
        (DRAM)]
  tma_sq_full
       [This metric measures fraction of cycles where the Super Queue (SQ) was
        full taking into account all request-types and both hardware SMT
        threads (Logical Processors)]

tma_issueD0: [Metrics related by the issue $issueD0]
  tma_decoder0_alone
       [This metric represents fraction of cycles where decoder-0 was the only
        active decoder]
  tma_few_uops_instructions
       [This metric represents fraction of slots where the CPU was retiring
        instructions that that are decoder into two or up to ([SNB+] four;
        [ADL+] five) uops]

tma_issueFB: [Metrics related by the issue $issueFB]
  tma_dsb_switches
       [This metric represents fraction of cycles the CPU was stalled due to
        switches from DSB to MITE pipelines]
  tma_fetch_bandwidth
       [This metric represents fraction of slots the CPU was stalled due to
        Frontend bandwidth issues]
  tma_info_botlnk_l2_dsb_misses
       [Total pipeline cost of DSB (uop cache) misses - subset of the
        Instruction_Fetch_BW Bottleneck]
  tma_info_frontend_dsb_coverage
       [Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop
        Cache)]
  tma_info_inst_mix_iptb
       [Instruction per taken branch]
  tma_lcp
       [This metric represents fraction of cycles CPU was stalled due to
        Length Changing Prefixes (LCPs)]

tma_issueFL: [Metrics related by the issue $issueFL]
  tma_info_botlnk_l2_ic_misses
       [Total pipeline cost of Instruction Cache misses - subset of the
        Big_Code Bottleneck]

tma_issueL1: [Metrics related by the issue $issueL1]
  tma_l1_bound
       [This metric estimates how often the CPU was stalled without loads
        missing the L1 data cache]
  tma_ports_utilized_1
       [This metric represents fraction of cycles where the CPU executed total
        of 1 uop per cycle on all execution ports (Logical Processor cycles
        since ICL, Physical Core cycles otherwise)]

tma_issueLat: [Metrics related by the issue $issueLat]
  tma_info_bottleneck_memory_latency
       [Total pipeline cost of Memory Latency related bottlenecks (external
        memory and off-core caches)]
  tma_l3_hit_latency
       [This metric represents fraction of cycles with demand load accesses
        that hit the L3 cache under unloaded scenarios (possibly L3 latency
        limited)]
  tma_mem_latency
       [This metric estimates fraction of cycles where the performance was
        likely hurt due to latency from external memory (DRAM)]

tma_issueMC: [Metrics related by the issue $issueMC]
  tma_clears_resteers
       [This metric represents fraction of cycles the CPU was stalled due to
        Branch Resteers as a result of Machine Clears]
  tma_l1_bound
       [This metric estimates how often the CPU was stalled without loads
        missing the L1 data cache]
  tma_machine_clears
       [This metric represents fraction of slots the CPU has wasted due to
        Machine Clears]
  tma_microcode_sequencer
       [This metric represents fraction of slots the CPU was retiring uops
        fetched by the Microcode Sequencer (MS) unit]
  tma_ms_switches
       [This metric estimates the fraction of cycles when the CPU was stalled
        due to switches of uop delivery to the Microcode Sequencer (MS)]

tma_issueMS: [Metrics related by the issue $issueMS]
  tma_microcode_sequencer
       [This metric represents fraction of slots the CPU was retiring uops
        fetched by the Microcode Sequencer (MS) unit]
  tma_ms_switches
       [This metric estimates the fraction of cycles when the CPU was stalled
        due to switches of uop delivery to the Microcode Sequencer (MS)]

tma_issueMV: [Metrics related by the issue $issueMV]
  tma_mixing_vectors
       [The Mixing_Vectors metric gives the percentage of injected blend uops
        out of all uops issued]
  tma_ms_switches
       [This metric estimates the fraction of cycles when the CPU was stalled
        due to switches of uop delivery to the Microcode Sequencer (MS)]

tma_issueRFO: [Metrics related by the issue $issueRFO]
  tma_lock_latency
       [This metric represents fraction of cycles the CPU spent handling cache
        misses due to lock operations]
  tma_store_latency
       [This metric estimates fraction of cycles the CPU spent handling L1D
        store misses]

tma_issueSL: [Metrics related by the issue $issueSL]
  tma_fb_full
       [This metric does a *rough estimation* of how often L1D Fill Buffer
        unavailability limited additional L1D miss memory access requests to
        proceed]
  tma_store_latency
       [This metric estimates fraction of cycles the CPU spent handling L1D
        store misses]

tma_issueSO: [Metrics related by the issue $issueSO]
  tma_ms_switches
       [This metric estimates the fraction of cycles when the CPU was stalled
        due to switches of uop delivery to the Microcode Sequencer (MS)]
  tma_serializing_operation
       [This metric represents fraction of cycles the CPU issue-pipeline was
        stalled due to serializing operations]

tma_issueSmSt: [Metrics related by the issue $issueSmSt]
  tma_fb_full
       [This metric does a *rough estimation* of how often L1D Fill Buffer
        unavailability limited additional L1D miss memory access requests to
        proceed]

tma_issueSpSt: [Metrics related by the issue $issueSpSt]
  tma_port_4
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 4 (Store-data)]
  tma_split_stores
       [This metric represents rate of split store accesses]

tma_issueSyncxn: [Metrics related by the issue $issueSyncxn]
  tma_contested_accesses
       [This metric estimates fraction of cycles while the memory subsystem
        was handling synchronizations due to contested accesses]
  tma_data_sharing
       [This metric estimates fraction of cycles while the memory subsystem
        was handling synchronizations due to data-sharing accesses]
  tma_false_sharing
       [This metric roughly estimates how often CPU was handling
        synchronizations due to False Sharing]
  tma_machine_clears
       [This metric represents fraction of slots the CPU has wasted due to
        Machine Clears]
  tma_remote_cache
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from remote cache in other sockets including
        synchronizations issues]

tma_issueTLB: [Metrics related by the issue $issueTLB]
  tma_dtlb_load
       [This metric roughly estimates the fraction of cycles where the Data
        TLB (DTLB) was missed by load accesses]
  tma_dtlb_store
       [This metric roughly estimates the fraction of cycles spent handling
        first-level data TLB store misses]
  tma_info_bottleneck_memory_data_tlbs
       [Total pipeline cost of Memory Address Translation related bottlenecks
        (data-side TLBs)]

tma_l1_bound_group: [Metrics contributing to tma_l1_bound category]
  tma_4k_aliasing
       [This metric estimates how often memory load accesses were aliased by
        preceding stores (in program order) with a 4K address offset]
  tma_dtlb_load
       [This metric roughly estimates the fraction of cycles where the Data
        TLB (DTLB) was missed by load accesses]
  tma_fb_full
       [This metric does a *rough estimation* of how often L1D Fill Buffer
        unavailability limited additional L1D miss memory access requests to
        proceed]
  tma_lock_latency
       [This metric represents fraction of cycles the CPU spent handling cache
        misses due to lock operations]
  tma_split_loads
       [This metric estimates fraction of cycles handling memory load split
        accesses - load that cross 64-byte cache line boundary]
  tma_store_fwd_blk
       [This metric roughly estimates fraction of cycles when the memory
        subsystem had loads blocked since they could not forward data from
        earlier (in program order) overlapping stores]

tma_l3_bound_group: [Metrics contributing to tma_l3_bound category]
  tma_contested_accesses
       [This metric estimates fraction of cycles while the memory subsystem
        was handling synchronizations due to contested accesses]
  tma_data_sharing
       [This metric estimates fraction of cycles while the memory subsystem
        was handling synchronizations due to data-sharing accesses]
  tma_l3_hit_latency
       [This metric represents fraction of cycles with demand load accesses
        that hit the L3 cache under unloaded scenarios (possibly L3 latency
        limited)]
  tma_sq_full
       [This metric measures fraction of cycles where the Super Queue (SQ) was
        full taking into account all request-types and both hardware SMT
        threads (Logical Processors)]

tma_light_operations_group: [Metrics contributing to tma_light_operations category]
  tma_fp_arith
       [This metric represents overall arithmetic floating-point (FP)
        operations fraction the CPU has executed (retired)]
  tma_fused_instructions
       [This metric represents fraction of slots where the CPU was retiring
        fused instructions -- where one uop can represent multiple contiguous
        instructions]
  tma_memory_operations
       [This metric represents fraction of slots where the CPU was retiring
        memory operations -- uops for memory load or store accesses]
  tma_non_fused_branches
       [This metric represents fraction of slots where the CPU was retiring
        branch instructions that were not fused]
  tma_nop_instructions
       [This metric represents fraction of slots where the CPU was retiring
        NOP (no op) instructions]
  tma_other_light_ops
       [This metric represents the remaining light uops fraction the CPU has
        executed - remaining means not covered by other sibling nodes]

tma_load_op_utilization_group: [Metrics contributing to tma_load_op_utilization category]
  tma_port_2
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 2 ([SNB+]Loads and Store-address; [ICL+] Loads)]
  tma_port_3
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 3 ([SNB+]Loads and Store-address; [ICL+] Loads)]

tma_mem_latency_group: [Metrics contributing to tma_mem_latency category]
  tma_local_dram
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from local memory]
  tma_remote_cache
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from remote cache in other sockets including
        synchronizations issues]
  tma_remote_dram
       [This metric estimates fraction of cycles while the memory subsystem
        was handling loads from remote memory]

tma_memory_bound_group: [Metrics contributing to tma_memory_bound category]
  tma_dram_bound
       [This metric estimates how often the CPU was stalled on accesses to
        external memory (DRAM) by loads]
  tma_l1_bound
       [This metric estimates how often the CPU was stalled without loads
        missing the L1 data cache]
  tma_l2_bound
       [This metric estimates how often the CPU was stalled due to L2 cache
        accesses by loads]
  tma_l3_bound
       [This metric estimates how often the CPU was stalled due to loads
        accesses to L3 cache or contended with a sibling Core]
  tma_store_bound
       [This metric estimates how often CPU was stalled due to RFO store
        memory accesses; RFO store issue a read-for-ownership request before
        the write]

tma_microcode_sequencer_group: [Metrics contributing to tma_microcode_sequencer category]
  tma_assists
       [This metric estimates fraction of slots the CPU retired uops delivered
        by the Microcode_Sequencer as a result of Assists]
  tma_cisc
       [This metric estimates fraction of cycles the CPU retired uops
        originated from CISC (complex instruction set computer) instruction]

tma_mite_group: [Metrics contributing to tma_mite category]
  tma_decoder0_alone
       [This metric represents fraction of cycles where decoder-0 was the only
        active decoder]

tma_ports_utilization_group: [Metrics contributing to tma_ports_utilization category]
  tma_ports_utilized_0
       [This metric represents fraction of cycles CPU executed no uops on any
        execution port (Logical Processor cycles since ICL, Physical Core
        cycles otherwise)]
  tma_ports_utilized_1
       [This metric represents fraction of cycles where the CPU executed total
        of 1 uop per cycle on all execution ports (Logical Processor cycles
        since ICL, Physical Core cycles otherwise)]
  tma_ports_utilized_2
       [This metric represents fraction of cycles CPU executed total of 2 uops
        per cycle on all execution ports (Logical Processor cycles since ICL,
        Physical Core cycles otherwise)]
  tma_ports_utilized_3m
       [This metric represents fraction of cycles CPU executed total of 3 or
        more uops per cycle on all execution ports (Logical Processor cycles
        since ICL, Physical Core cycles otherwise)]

tma_ports_utilized_0_group: [Metrics contributing to tma_ports_utilized_0 category]
  tma_mixing_vectors
       [The Mixing_Vectors metric gives the percentage of injected blend uops
        out of all uops issued]
  tma_serializing_operation
       [This metric represents fraction of cycles the CPU issue-pipeline was
        stalled due to serializing operations]

tma_ports_utilized_3m_group: [Metrics contributing to tma_ports_utilized_3m category]
  tma_alu_op_utilization
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution ports for ALU operations]
  tma_load_op_utilization
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port for Load operations]
  tma_store_op_utilization
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port for Store operations]

tma_retiring_group: [Metrics contributing to tma_retiring category]
  tma_heavy_operations
       [This metric represents fraction of slots where the CPU was retiring
        heavy-weight operations -- instructions that require two or more uops
        or micro-coded sequences]
  tma_light_operations
       [This metric represents fraction of slots where the CPU was retiring
        light-weight operations -- instructions that require no more than one
        uop (micro-operation)]

tma_store_bound_group: [Metrics contributing to tma_store_bound category]
  tma_dtlb_store
       [This metric roughly estimates the fraction of cycles spent handling
        first-level data TLB store misses]
  tma_false_sharing
       [This metric roughly estimates how often CPU was handling
        synchronizations due to False Sharing]
  tma_split_stores
       [This metric represents rate of split store accesses]
  tma_store_latency
       [This metric estimates fraction of cycles the CPU spent handling L1D
        store misses]

tma_store_op_utilization_group: [Metrics contributing to tma_store_op_utilization category]
  tma_port_4
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 4 (Store-data)]
  tma_port_7
       [This metric represents Core fraction of cycles CPU dispatched uops on
        execution port 7 ([HSW+]simple Store-address)]

transaction:
  tsx_aborted_cycles
       [Percentage of cycles in aborted transactions]
  tsx_cycles_per_elision
       [Number of cycles within a transaction divided by the number of
        elisions]
  tsx_cycles_per_transaction
       [Number of cycles within a transaction divided by the number of
        transactions]
  tsx_transactional_cycles
       [Percentage of cycles within a transaction region]
